(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    758271,      15014]
NotebookOptionsPosition[    743433,      14531]
NotebookOutlinePosition[    744611,      14568]
CellTagsIndexPosition[    744379,      14560]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.67378030105833*^9, 3.6737803016139183`*^9}}],

Cell[BoxData[
 TemplateBox[{RowBox[{"\"Wed 1 Jun 2016 09:31:43\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        RowBox[{"-", "5.`"}]}], FontColor -> GrayLevel[0.5]]}],
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2016", ",", "6", ",", "1"}], "}"}], ",", 
       RowBox[{"TimeObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"9", ",", "31", ",", "43.14691`"}], "}"}], ",", 
           RowBox[{"TimeZone", "\[Rule]", 
             RowBox[{"-", "5.`"}]}]}], "]"}], ",", 
       RowBox[{"TimeZone", "\[Rule]", 
         RowBox[{"-", "5.`"}]}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.6737803031939583`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$DateStringFormat"], "Input",
 CellChangeTimes->{{3.6737803643925333`*^9, 3.67378036952389*^9}}],

Cell[BoxData[
 RowBox[{"{", "\<\"DateTimeShort\"\>", "}"}]], "Output",
 CellChangeTimes->{3.673780370683971*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$DateStringFormat", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
   "\"\<Year\>\"", ",", " ", "\"\<Month\>\"", ",", " ", "\"\<Day\>\"", ",", 
    " ", "\"\<_\>\"", ",", " ", "\"\<Hour\>\"", ",", " ", "\"\<Minute\>\"", 
    ",", " ", "\"\<Second\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.673780374566434*^9, 3.673780418405451*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Year\"\>", ",", "\<\"Month\"\>", ",", "\<\"Day\"\>", 
   ",", "\<\"_\"\>", ",", "\<\"Hour\"\>", ",", "\<\"Minute\"\>", 
   ",", "\<\"Second\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.673780420187344*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"$DateStringFormat", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Year\>\"", ",", " ", "\"\<Month\>\"", ",", " ", "\"\<Day\>\"", ",",
        " ", "\"\<_\>\"", ",", " ", "\"\<Hour\>\"", ",", " ", 
       "\"\<Minute\>\"", ",", " ", "\"\<Second\>\""}], "}"}]}], "}"}], ",", 
   RowBox[{"DateString", "[", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.673780451490773*^9}],

Cell[BoxData["\<\"20160601_093417\"\>"], "Output",
 CellChangeTimes->{{3.6737804383021317`*^9, 3.673780457614781*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.6737804217421293`*^9, 3.673780422749782*^9}}],

Cell[BoxData[
 TemplateBox[{RowBox[{"\"20160601_093343\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        RowBox[{"-", "5.`"}]}], FontColor -> GrayLevel[0.5]]}],
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2016", ",", "6", ",", "1"}], "}"}], ",", 
       RowBox[{"TimeObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"9", ",", "33", ",", "43.686192`"}], "}"}], ",", 
           RowBox[{"TimeZone", "\[Rule]", 
             RowBox[{"-", "5.`"}]}]}], "]"}], ",", 
       RowBox[{"TimeZone", "\[Rule]", 
         RowBox[{"-", "5.`"}]}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.673780423694928*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"csvFileName", " ", "=", " ", 
  "\"\</scratch/gabella/Documents/astro/exop/exop_20160601_094040.csv\>\""}]],\
 "Input"],

Cell[BoxData["\<\"/scratch/gabella/Documents/astro/exop/exop_20160601_094040.\
csv\"\>"], "Output",
 CellChangeTimes->{3.67378103928699*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Split", "[", "csvFileName", "]"}]], "Input",
 CellChangeTimes->{{3.673781045003943*^9, 3.67378105499149*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Split", "::", "normal"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Nonatomic expression expected at position \[NoBreak]\\!\\(\
\\*RowBox[{\\\"1\\\"}]\\)\[NoBreak] in \[NoBreak]\\!\\(\\*RowBox[{\\\"Split\\\
\", \\\"[\\\", \
\\\"\\\\\\\"/scratch/gabella/Documents/astro/exop/exop_20160601_094040.csv\\\\\
\\\"\\\", \\\"]\\\"}]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/normal\\\", ButtonNote -> \
\\\"Split::normal\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6737810559570227`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cc", "=", 
  RowBox[{"StringSplit", "[", 
   RowBox[{
   "\"\</scratch/gabella/Documents/astro/exop/exop_20160601_094040.csv\>\"", 
    ",", " ", 
    RowBox[{"{", "\"\</\>\"", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6737810812850103`*^9, 3.6737810892759867`*^9}, {
  3.673781236846114*^9, 3.673781258254548*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"scratch\"\>", ",", "\<\"gabella\"\>", ",", "\<\"Documents\"\>",
    ",", "\<\"astro\"\>", ",", "\<\"exop\"\>", 
   ",", "\<\"exop_20160601_094040.csv\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.673781090243332*^9, {3.6737812431652184`*^9, 3.673781258844426*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dd", "=", 
  RowBox[{"StringSplit", "[", 
   RowBox[{
    RowBox[{"cc", "[", 
     RowBox[{"[", 
      RowBox[{"-", "1"}], "]"}], "]"}], ",", "\"\<.\>\""}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.673781261393353*^9, 3.673781266778048*^9}, {
  3.673781301914674*^9, 3.673781320468462*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"exop_20160601_094040\"\>", ",", "\<\"csv\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6737812673477383`*^9, {3.6737813136680117`*^9, 3.67378132098345*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ee", "=", 
  RowBox[{"StringSplit", "[", 
   RowBox[{
    RowBox[{"dd", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<_\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.673781323627832*^9, 3.673781348502611*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"exop\"\>", ",", "\<\"20160601\"\>", ",", "\<\"094040\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.673781325550446*^9, 3.6737813490922813`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ee", "[", 
   RowBox[{"[", "2", "]"}], "]"}], "<>", "\"\<_\>\"", "<>", 
  RowBox[{"ee", "[", 
   RowBox[{"[", "3", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6737813525527687`*^9, 3.673781378404808*^9}}],

Cell[BoxData["\<\"20160601_094040\"\>"], "Output",
 CellChangeTimes->{{3.673781363914886*^9, 3.673781379195051*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aa", "=", " ", 
  RowBox[{"ToExpression", "[", "\"\<ajunk\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.6737866233839483`*^9, 3.673786635827756*^9}}],

Cell[BoxData["ajunk"], "Output",
 CellChangeTimes->{3.67378663716625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aa", "=", "12"}]], "Input",
 CellChangeTimes->{{3.673786638940319*^9, 3.673786647073378*^9}}],

Cell[BoxData["12"], "Output",
 CellChangeTimes->{{3.67378663988483*^9, 3.673786648392248*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["ajunk"], "Input",
 CellChangeTimes->{{3.6737866503056717`*^9, 3.6737866509631853`*^9}}],

Cell[BoxData["ajunk"], "Output",
 CellChangeTimes->{3.67378665169001*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ajunk", "+", "2"}]], "Input",
 CellChangeTimes->{{3.6737866529429483`*^9, 3.673786656854123*^9}}],

Cell[BoxData[
 RowBox[{"2", "+", "ajunk"}]], "Output",
 CellChangeTimes->{3.673786657557005*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Evaluate", "[", 
   RowBox[{"ToExpression", "[", "\"\<ajunk\>\"", "]"}], "]"}], "=", 
  "12"}]], "Input",
 CellChangeTimes->{{3.6737866742409067`*^9, 3.673786674712654*^9}, {
  3.673786778606662*^9, 3.6737867844581013`*^9}}],

Cell[BoxData["12"], "Output",
 CellChangeTimes->{3.673786675622087*^9, 3.673786785938485*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["ajunk"], "Input",
 CellChangeTimes->{{3.6737867872307158`*^9, 3.67378678783076*^9}}],

Cell[BoxData["12"], "Output",
 CellChangeTimes->{3.673786788471466*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ajunk", "+", "1"}]], "Input",
 CellChangeTimes->{{3.673786789658331*^9, 3.67378679097465*^9}}],

Cell[BoxData["13"], "Output",
 CellChangeTimes->{3.6737867914614267`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["ajunk"], "Input",
 CellChangeTimes->{{3.67378667681529*^9, 3.673786677438526*^9}}],

Cell[BoxData["ajunk"], "Output",
 CellChangeTimes->{3.673786678019582*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"{", 
   RowBox[{"\"\<zz\>\"", ",", " ", "\"\<yy\>\"", ",", " ", "\"\<xx\>\""}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.6737868107781153`*^9, 3.673786826894305*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"zz\"\>", ",", "\<\"yy\"\>", ",", "\<\"xx\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6737868285904827`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7", ",", "8", ",", "9"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6737868331451683`*^9, 3.673786845050804*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "9"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6737868459012012`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.6737868555925093`*^9, 3.673786865929201*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "2", "3"},
    {"4", "5", "6"},
    {"7", "8", "9"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.673786862408959*^9, 3.673786866568183*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Evaluate", "[", 
   RowBox[{"ToExpression", "/@", "alist"}], "]"}], "=", "data"}]], "Input",
 CellChangeTimes->{{3.6737869574282217`*^9, 3.673786989279361*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "9"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6737869903334827`*^9}]
}, Open  ]],

Cell[BoxData["zz"], "Input",
 CellChangeTimes->{{3.673787069051128*^9, 3.673787069205987*^9}}],

Cell[CellGroupData[{

Cell[BoxData["zz"], "Input",
 CellChangeTimes->{{3.673786993393812*^9, 3.6737869935238113`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.673786994475171*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["yy"], "Input",
 CellChangeTimes->{{3.673786996449202*^9, 3.673786996557231*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "5", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{3.673786997497381*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["xx"], "Input",
 CellChangeTimes->{{3.673786999870203*^9, 3.6737870000129757`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7", ",", "8", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.673787001062283*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Evaluate", "[", 
   RowBox[{"ToExpression", "/@", "alist"}], "]"}], "=", 
  RowBox[{"Transpose", "[", "data", "]"}]}]], "Input",
 CellChangeTimes->{{3.673788457405306*^9, 3.67378846082024*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "setraw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot assign to raw object \
\[NoBreak]\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Set/setraw\\\", ButtonNote -> \
\\\"Set::setraw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.673788407820681*^9, 3.673788461388097*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "setraw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot assign to raw object \
\[NoBreak]\\!\\(\\*RowBox[{\\\"2\\\"}]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Set/setraw\\\", ButtonNote -> \
\\\"Set::setraw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.673788407820681*^9, 3.673788461416017*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "setraw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot assign to raw object \
\[NoBreak]\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Set/setraw\\\", ButtonNote -> \
\\\"Set::setraw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.673788407820681*^9, 3.673788461444028*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"Set\\\", \\\"::\\\", \
\\\"setraw\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.673788407820681*^9, 3.673788461471302*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "6", ",", "9"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.673788407907132*^9, 3.673788461472269*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["xx"], "Input",
 CellChangeTimes->{{3.673788448800976*^9, 3.673788448951432*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7", ",", "8", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{{3.673788450216999*^9, 3.673788464356592*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aa", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"List", "[", "one", "]"}], ",", " ", 
    RowBox[{"List", "[", "two", "]"}], ",", " ", 
    RowBox[{"List", "[", "three", "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6738001651732693`*^9, 3.673800171300816*^9}, {
  3.6738002531289873`*^9, 3.673800264369522*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "6"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"7", ",", "8", ",", "9"}], "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6738001725506907`*^9, 3.6738002649397907`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "/@", 
  RowBox[{"{", 
   RowBox[{"aa", ",", " ", 
    RowBox[{"aa", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.673800173551025*^9, 3.673800179368853*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"List", ",", "List"}], "}"}]], "Output",
 CellChangeTimes->{3.673800180442758*^9, 3.673800269916985*^9}]
}, Open  ]],

Cell[BoxData["e"], "Input",
 CellChangeTimes->{3.673800295625188*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aa", "=", "data"}]], "Input",
 CellChangeTimes->{{3.673800185487173*^9, 3.673800190997069*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "9"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.673800192269245*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["one"], "Input",
 CellChangeTimes->{{3.673800195389387*^9, 3.673800195482888*^9}}],

Cell[BoxData["one"], "Output",
 CellChangeTimes->{3.6738001965502033`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"one", ",", " ", "two", ",", " ", "three"}], "}"}], " ", "=", " ", 
  "data"}]], "Input",
 CellChangeTimes->{{3.673800218560302*^9, 3.6738002246715813`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "9"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.673800225582106*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["one"], "Input",
 CellChangeTimes->{{3.673800226962479*^9, 3.67380022873365*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.673800229316773*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", "one", "]"}]], "Input",
 CellChangeTimes->{{3.673800231495219*^9, 3.673800233491592*^9}}],

Cell[BoxData["List"], "Output",
 CellChangeTimes->{3.673800234610744*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Evaluate", "[", "aa", "]"}]], "Input",
 CellChangeTimes->{{3.6738002999338217`*^9, 3.6738003028337803`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "6"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"7", ",", "8", ",", "9"}], "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6738003036041803`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["aa"], "Input",
 CellChangeTimes->{{3.673800308534286*^9, 3.673800308648357*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "6"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"7", ",", "8", ",", "9"}], "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.673800309376379*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "PolarPlot"}]], "Input",
 CellChangeTimes->{{3.6738084288341837`*^9, 3.673808431113319*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PolarPlot\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"r\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"\[Theta]\\\", \\\"TR\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"\[Theta]\\\", \\\"TR\\\"], StyleBox[\\\"min\\\", \\\
\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"\[Theta]\\\", \\\"TR\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
a polar plot of a curve with radius \\!\\(\\*StyleBox[\\\"r\\\", \
\\\"TI\\\"]\\) as a function of angle \\!\\(\\*StyleBox[\\\"\[Theta]\\\", \
\\\"TR\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"PolarPlot\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"\[Theta]\\\", \\\"TR\
\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"\[Theta]\\\", \\\"TR\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"\
\[Theta]\\\", \\\"TR\\\"], StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \
\\\"}\\\"}]}], \\\"]\\\"}]\\) makes a polar plot of curves with radius \
functions \\!\\(\\*SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\), \
\\!\\(\\*SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\), \[Ellipsis].\"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/PolarPlot"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.673808432112783*^9},
 CellTags->"Info6903673790431-2708481"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{"Attributes", "[", "PolarPlot", "]"}], "=", 
      RowBox[{"{", 
       RowBox[{"HoldAll", ",", "Protected", ",", "ReadProtected"}], "}"}]}]},
    {" "},
    {GridBox[{
       {
        RowBox[{
         RowBox[{"Options", "[", "PolarPlot", "]"}], ":=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"AlignmentPoint", "\[Rule]", "Center"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"Axes", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"AxesLabel", "\[Rule]", "None"}], ",", 
           RowBox[{"AxesOrigin", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], ",", 
           RowBox[{"AxesStyle", "\[Rule]", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"Background", "\[Rule]", "None"}], ",", 
           RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"BaseStyle", "\[Rule]", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"ColorFunction", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}], ",", 
           RowBox[{"ColorOutput", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"CoordinatesToolOptions", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"DisplayFunction", "\[RuleDelayed]", "$DisplayFunction"}], 
           ",", 
           RowBox[{"Epilog", "\[Rule]", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"EvaluationMonitor", "\[Rule]", "None"}], ",", 
           RowBox[{"Exclusions", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"ExclusionsStyle", "\[Rule]", "None"}], ",", 
           RowBox[{
           "FormatType", "\[RuleDelayed]", "\<\"TraditionalForm\"\>"}], ",", 
           RowBox[{"Frame", "\[Rule]", "False"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", "None"}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"FrameTicks", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"FrameTicksStyle", "\[Rule]", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"GridLines", "\[Rule]", "None"}], ",", 
           RowBox[{"GridLinesStyle", "\[Rule]", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"ImageMargins", "\[Rule]", "0.`"}], ",", 
           RowBox[{"ImagePadding", "\[Rule]", "All"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"MaxRecursion", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
           RowBox[{"MeshFunctions", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"#3", "&"}], "}"}]}], ",", 
           RowBox[{"MeshShading", "\[Rule]", "None"}], ",", 
           RowBox[{"MeshStyle", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"Method", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"PerformanceGoal", "\[RuleDelayed]", "$PerformanceGoal"}], 
           ",", 
           RowBox[{"PlotLabel", "\[Rule]", "None"}], ",", 
           RowBox[{"PlotLegends", "\[Rule]", "None"}], ",", 
           RowBox[{"PlotPoints", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"PlotRangeClipping", "\[Rule]", "True"}], ",", 
           RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"PlotRegion", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"PlotTheme", "\[RuleDelayed]", "$PlotTheme"}], ",", 
           RowBox[{"PolarAxes", "\[Rule]", "False"}], ",", 
           RowBox[{"PolarAxesOrigin", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"PolarGridLines", "\[Rule]", "None"}], ",", 
           RowBox[{"PolarTicks", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"PreserveImageOptions", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"Prolog", "\[Rule]", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"RegionFunction", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{"True", "&"}], ")"}]}], ",", 
           RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
           RowBox[{"Ticks", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"TicksStyle", "\[Rule]", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"WorkingPrecision", "\[Rule]", "MachinePrecision"}]}], 
          "}"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[PolarPlot],
  Editable->False]], "Print",
 CellChangeTimes->{3.673808432171664*^9},
 CellTags->"Info6903673790431-2708481"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolarPlot", "[", " ", 
  RowBox[{
   RowBox[{"\[Theta]", "/", 
    RowBox[{"(", 
     RowBox[{"Pi", "/", "5"}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"Pi", "/", "5"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.673808422287739*^9, 3.6738084777525873`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
/gN8l8tt
      "]]}}, {}, {{{}, {}, {}, {}}, {}}},
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.02],
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.673808479185917*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
tKI3nrrvG5FH/gHdKiLM\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"http", ":"}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"stackoverflow", ".", "com"}], "/", "questions"}], "/", 
       "6187385"}], "/", "create"}], "-", "variable", "-", "with", "-", 
     "list", "-", "of", "-", "strings"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Remove", "[", 
     RowBox[{"cow", ",", "monkey"}], "]"}], ";"}], "\n", 
   RowBox[{"str", "=", 
    RowBox[{"{", 
     RowBox[{"\"\<cow\>\"", ",", "\"\<monkey\>\""}], "}"}]}], 
   "\[IndentingNewLine]", "str", "\n", 
   RowBox[{"Head", " ", "/@", " ", "str"}], "\[IndentingNewLine]", 
   RowBox[{"str1", "=", 
    RowBox[{"ToExpression", "/@", "str"}]}], "\[IndentingNewLine]", 
   RowBox[{"Head", " ", "/@", " ", "str1"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"{", 
    RowBox[{"cow", ",", "monkey"}], "}"}], "\[IndentingNewLine]", 
   RowBox[{"cow", "=", "12"}], "\[IndentingNewLine]", 
   RowBox[{"str1", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6743187972600603`*^9, 3.6743187972616177`*^9}, {
  3.6743188605972147`*^9, 3.6743188822657413`*^9}, {3.674318914050488*^9, 
  3.674318921133836*^9}, {3.6743190711949377`*^9, 3.674319074916481*^9}, {
  3.674319138356347*^9, 3.6743191416032057`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"cow\"\>", ",", "\<\"monkey\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6743188047597446`*^9, {3.6743188710110826`*^9, 3.6743188834505672`*^9}, 
   3.674319076250622*^9, 3.674319142679318*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"cow\"\>", ",", "\<\"monkey\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6743188047597446`*^9, {3.6743188710110826`*^9, 3.6743188834505672`*^9}, 
   3.674319076250622*^9, 3.674319142680583*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"String", ",", "String"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6743188047597446`*^9, {3.6743188710110826`*^9, 3.6743188834505672`*^9}, 
   3.674319076250622*^9, 3.674319142681839*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"cow", ",", "monkey"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6743188047597446`*^9, {3.6743188710110826`*^9, 3.6743188834505672`*^9}, 
   3.674319076250622*^9, 3.6743191426830587`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Symbol", ",", "Symbol"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6743188047597446`*^9, {3.6743188710110826`*^9, 3.6743188834505672`*^9}, 
   3.674319076250622*^9, 3.6743191426840057`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"cow", ",", "monkey"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6743188047597446`*^9, {3.6743188710110826`*^9, 3.6743188834505672`*^9}, 
   3.674319076250622*^9, 3.674319142684937*^9}],

Cell[BoxData["12"], "Output",
 CellChangeTimes->{
  3.6743188047597446`*^9, {3.6743188710110826`*^9, 3.6743188834505672`*^9}, 
   3.674319076250622*^9, 3.674319142685858*^9}],

Cell[BoxData["12"], "Output",
 CellChangeTimes->{
  3.6743188047597446`*^9, {3.6743188710110826`*^9, 3.6743188834505672`*^9}, 
   3.674319076250622*^9, 3.674319142686678*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"?", "cow"}], "\[IndentingNewLine]", 
   RowBox[{"?", "monkey"}]}]}]], "Input",
 CellChangeTimes->{{3.674318812384289*^9, 3.6743188426405077`*^9}}],

Cell[CellGroupData[{

Cell["Global`cow", "Print", "PrintUsage",
 CellChangeTimes->{3.6743188431950483`*^9},
 CellTags->"Info2553674300843-3994822"],

Cell["Global`monkey", "Print", "PrintUsage",
 CellChangeTimes->{3.674318843213709*^9},
 CellTags->"Info2563674300843-3994822"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ajunk", " ", "=", " ", 
  RowBox[{"ToExpression", "[", " ", "\"\<astjunk\>\"", " ", "]"}]}]], "Input",\

 CellChangeTimes->{{3.674319473921505*^9, 3.674319503758028*^9}}],

Cell[BoxData["astjunk"], "Output",
 CellChangeTimes->{3.674319504781954*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", "astjunk", "]"}]], "Input",
 CellChangeTimes->{{3.674319508136208*^9, 3.674319512237569*^9}}],

Cell[BoxData["Symbol"], "Output",
 CellChangeTimes->{3.674319513163371*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"astjunk", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.674319528476221*^9, 3.674319534908022*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.6743195360391817`*^9}]
}, Open  ]],

Cell["Below works.", "Text",
 CellChangeTimes->{{3.6743228938781433`*^9, 3.674322895824114*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Remove", "[", 
  RowBox[{"ajunk", ",", "aaa", ",", "bbb"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ajunk", "=", 
  RowBox[{"{", 
   RowBox[{"aaa", ",", "bbb"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"aaa", ",", " ", "bbb"}], "}"}], " ", "=", " ", 
  RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "8"}], "}"}]}], "}"}], " ", 
   "]"}]}], "\[IndentingNewLine]", "ajunk", "\[IndentingNewLine]", "aaa"}], \
"Input",
 CellChangeTimes->{{3.674322548487021*^9, 3.674322596152245*^9}, {
  3.67432283690944*^9, 3.674322889537712*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"aaa", ",", "bbb"}], "}"}]], "Output",
 CellChangeTimes->{{3.6743225715980453`*^9, 3.6743225968992987`*^9}, 
   3.674322857542746*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "6", ",", "8"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6743225715980453`*^9, 3.6743225968992987`*^9}, 
   3.674322857585191*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "6", ",", "8"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6743225715980453`*^9, 3.6743225968992987`*^9}, 
   3.674322857586979*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "5", ",", "7"}], "}"}]], "Output",
 CellChangeTimes->{{3.6743225715980453`*^9, 3.6743225968992987`*^9}, 
   3.674322857588499*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.674322494774357*^9, 3.674322520944413*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2"},
     {"3", "4"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.674322498482995*^9, 3.674322522099504*^9}}]
}, Open  ]],

Cell["But not the below here. aaa does not get defined!", "Text",
 CellChangeTimes->{{3.674322907403698*^9, 3.674322930773178*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Remove", "[", 
  RowBox[{"ajunk", ",", "aaa", ",", "bbb"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ajunk", "=", 
  RowBox[{"{", 
   RowBox[{"aaa", ",", "bbb"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"ajunk", " ", "=", " ", 
  RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "8"}], "}"}]}], "}"}], " ", 
   "]"}]}], "\[IndentingNewLine]", "ajunk", "\[IndentingNewLine]", "aaa"}], \
"Input",
 CellChangeTimes->{{3.674322548487021*^9, 3.674322596152245*^9}, {
  3.67432283690944*^9, 3.674322918519368*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"aaa", ",", "bbb"}], "}"}]], "Output",
 CellChangeTimes->{3.6743229227311697`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "6", ",", "8"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.674322922732926*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "6", ",", "8"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.674322922734851*^9}],

Cell[BoxData["aaa"], "Output",
 CellChangeTimes->{3.674322922736958*^9}]
}, Open  ]],

Cell["Indexed list?", "Text",
 CellChangeTimes->{{3.67432310163278*^9, 3.674323103990531*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"indList", "=", 
  RowBox[{"{", "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"indList", "[", 
   RowBox[{"[", "\"\<stuff\>\"", "]"}], "]"}], "=", 
  "12.0"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"indList", "[", 
   RowBox[{"[", "\"\<bill\>\"", "]"}], "]"}], "=", "13.0"}]}], "Input",
 CellChangeTimes->{{3.674323106790833*^9, 3.674323130784307*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.674323131963047*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "pspec1"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \
\[NoBreak]\\!\\(\\*RowBox[{\\\"\\\\\\\"stuff\\\\\\\"\\\"}]\\)\[NoBreak] is \
not applicable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Set\\\", ButtonNote -> \
\\\"Set::pspec1\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.674323132103097*^9}],

Cell[BoxData["12.`"], "Output",
 CellChangeTimes->{3.6743231321056843`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "pspec1"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \
\[NoBreak]\\!\\(\\*RowBox[{\\\"\\\\\\\"bill\\\\\\\"\\\"}]\\)\[NoBreak] is not \
applicable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Set\\\", ButtonNote -> \
\\\"Set::pspec1\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.67432313219038*^9}],

Cell[BoxData["13.`"], "Output",
 CellChangeTimes->{3.674323132194693*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"https", ":"}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"www", ".", "wolfram", ".", "com"}], "/", "mathematica"}], "/",
       "new"}], "-", "in", "-", 
     RowBox[{"8", "/", "statistical"}], "-", 
     RowBox[{"visualization", "/", "log"}], "-", "scaled", "-", 
     RowBox[{"histograms", ".", "html"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"g", "=", 
    RowBox[{"RandomGraph", "[", 
     RowBox[{"PriceGraphDistribution", "[", 
      RowBox[{
       RowBox[{"10", "^", "3"}], ",", "2", ",", "1"}], "]"}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.674392471944353*^9, 3.674392482906159*^9}, {
  3.674392579727419*^9, 3.674392587943294*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"VertexDegree", "[", "g", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6743925095521603`*^9, 3.67439250955342*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"data", ",", 
   RowBox[{"ScalingFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Log\>\"", ",", "\"\<Log\>\""}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<StarryNightColors\>\""}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "550"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Bold"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Vertex Degrees for a 1000-Vertex de Solla Price Graph\>\""}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.674392497941292*^9, 3.6743924979425917`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.651], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.651], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[0.957885, 0.809857, 0.369177], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.6931471805599453, -1}, 
            NCache[{1.0986122886681098`, 
              Log[609]}, {1.0986122886681098`, 6.411818267709897}], 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{287.8781956547533, 
           402.9242111954293}, {-714.9499999999999, 783.7499999999997}}]},
        StatusArea[#, 609]& ,
        TagBoxNote->"609"],
       StyleBox["609", {Bold}, StripOnInput -> False]],
      Annotation[#, 
       Style[609, {Bold}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[0.8977933307109169, 0.85946409840633, 0.5552940643698707], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.0986122886681098`, -1}, 
            NCache[{1.3862943611198906`, 
              Log[171]}, {1.3862943611198906`, 5.14166355650266}], 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{401.4242111954293, 
           483.48639130950664`}, {-458.37657025142437`, 783.7499999999997}}]},
        
        StatusArea[#, 171]& ,
        TagBoxNote->"171"],
       StyleBox["171", {Bold}, StripOnInput -> False]],
      Annotation[#, 
       Style[171, {Bold}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[0.7881188201612849, 0.8293835323387294, 0.6320684859679505], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.3862943611198906`, -1}, 
            NCache[{1.6094379124341003`, 
              Log[73]}, {1.6094379124341003`, 4.290459441148391}], 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{481.98639130950664`, 
           545.9752729386647}, {-286.4318792893531, 783.7499999999997}}]},
        StatusArea[#, 73]& ,
        TagBoxNote->"73"],
       StyleBox["73", {Bold}, StripOnInput -> False]],
      Annotation[#, 
       Style[73, {Bold}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[0.6025649115317311, 0.7140823467729916, 0.6379709834969665], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.6094379124341003`, -1}, 
            NCache[{1.791759469228055, 
              Log[28]}, {1.791759469228055, 3.332204510175204}], 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{544.4752729386647, 
           597.0324068501826}, {-92.86273999954858, 783.7499999999997}}]},
        StatusArea[#, 28]& ,
        TagBoxNote->"28"],
       StyleBox["28", {Bold}, StripOnInput -> False]],
      Annotation[#, 
       Style[28, {Bold}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[0.5868708669453852, 0.703405040926633, 0.6365515652501819], 
         
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.791759469228055, -1}, 
            NCache[{1.9459101490553132`, 
              Log[26]}, {1.9459101490553132`, 3.258096538021482}], 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{595.5324068501826, 
           640.2005984830921}, {-77.89280254277992, 783.7499999999997}}]},
        StatusArea[#, 26]& ,
        TagBoxNote->"26"],
       StyleBox["26", {Bold}, StripOnInput -> False]],
      Annotation[#, 
       Style[26, {Bold}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[0.55156861643814, 0.6759780296595435, 0.6251416164369681], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.9459101490553132`, -1}, 
            NCache[{2.0794415416798357`, 
              Log[22]}, {2.0794415416798357`, 3.091042453358316}], 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{638.7005984830921, 
           677.5945869642599}, {-44.147590973396404`, 783.7499999999997}}]},
        StatusArea[#, 22]& ,
        TagBoxNote->"22"],
       StyleBox["22", {Bold}, StripOnInput -> False]],
      Annotation[#, 
       Style[22, {Bold}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[0.4236026504712964, 0.570926385896578, 0.5702074424957392], 
         
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.0794415416798357`, -1}, 
            NCache[{2.1972245773362196`, 
              Log[12]}, {2.1972245773362196`, 2.4849066497880004`}], 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{676.0945869642599, 710.5784223908586}, {
           78.29288076065723, 783.7499999999997}}]},
        StatusArea[#, 12]& ,
        TagBoxNote->"12"],
       StyleBox["12", {Bold}, StripOnInput -> False]],
      Annotation[#, 
       Style[12, {Bold}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[0.4236026504712964, 0.570926385896578, 0.5702074424957392], 
         
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.1972245773362196`, -1}, 
            NCache[{2.302585092994046, 
              Log[12]}, {2.302585092994046, 2.4849066497880004`}], 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{709.0784223908586, 740.083468593418}, {
           78.29288076065723, 783.7499999999997}}]},
        StatusArea[#, 12]& ,
        TagBoxNote->"12"],
       StyleBox["12", {Bold}, StripOnInput -> False]],
      Annotation[#, 
       Style[12, {Bold}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[
         0.16686556464351418`, 0.26627010707849996`, 0.3098932676620052], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.302585092994046, -1}, 
            NCache[{2.3978952727983707`, 
              Log[2]}, {2.3978952727983707`, 0.6931471805599453}], 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{738.583468593418, 766.7740294846884}, {
           440.23136608689276`, 783.7499999999997}}]},
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {Bold}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {Bold}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[
         0.40542302371109706`, 0.5557530817099374, 0.5619557831499336], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.3978952727983707`, -1}, 
            NCache[{2.4849066497880004`, 
              Log[11]}, {2.4849066497880004`, 2.3978952727983707`}], 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{765.2740294846884, 791.1406025049358}, {
           95.86932812127577, 783.7499999999997}}]},
        StatusArea[#, 11]& ,
        TagBoxNote->"11"],
       StyleBox["11", {Bold}, StripOnInput -> False]],
      Annotation[#, 
       Style[11, {Bold}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[
         0.29507671115545353`, 0.4420738730866848, 0.4731004866036502], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.4849066497880004`, -1}, 
            NCache[{2.5649493574615367`, 
              Log[6]}, {2.5649493574615367`, 1.791759469228055}], 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{789.6406025049358, 813.5556768175513}, {
           218.3097998553294, 783.7499999999997}}]},
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {Bold}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {Bold}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[0.0863508, 0.145602, 0.203418], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.5649493574615367`, -1}, {2.6390573296152584`, 0}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{812.0556768175513, 834.3087941378453}, {
           580.2482851815649, 783.7499999999997}}]},
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {Bold}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {Bold}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[0.0863508, 0.145602, 0.203418], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.70805020110221, -1}, {2.772588722239781, 0}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{852.129484134094, 871.7027826190132}, {
           580.2482851815649, 783.7499999999997}}]},
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {Bold}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {Bold}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[
         0.2618852854500038, 0.40787993474941275`, 0.44637341339615644`], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.772588722239781, -1}, 
            NCache[{2.833213344056216, 
              Log[5]}, {2.833213344056216, 1.6094379124341003`}], 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{870.2027826190132, 888.6800369209548}, {
           255.1390669760749, 783.7499999999997}}]},
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {Bold}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {Bold}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[0.0863508, 0.145602, 0.203418], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.833213344056216, -1}, {2.8903717578961645`, 0}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{887.1800369209548, 904.6866180456118}, {
           580.2482851815649, 783.7499999999997}}]},
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {Bold}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {Bold}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[
         0.16686556464351418`, 0.26627010707849996`, 0.3098932676620052], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.8903717578961645`, -1}, 
            NCache[{2.9444389791664403`, 
              Log[2]}, {2.9444389791664403`, 0.6931471805599453}], 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{903.1866180456118, 919.8275449067171}, {
           440.23136608689276`, 783.7499999999997}}]},
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {Bold}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {Bold}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[0.0863508, 0.145602, 0.203418], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.9444389791664403`, -1}, {2.995732273553991, 0}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{918.3275449067171, 934.1916642481713}, {
           580.2482851815649, 783.7499999999997}}]},
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {Bold}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {Bold}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[0.0863508, 0.145602, 0.203418], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.995732273553991, -1}, {3.044522437723423, 0}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{932.6916642481713, 947.8548096785214}, {
           580.2482851815649, 783.7499999999997}}]},
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {Bold}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {Bold}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[
         0.20957337467789927`, 0.3301861757959842, 0.3706102132160181], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3.044522437723423, -1}, 
            NCache[{3.091042453358316, 
              Log[3]}, {3.091042453358316, 1.0986122886681098`}], 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{946.3548096785214, 960.8822251394417}, {
           358.3267189500016, 783.7499999999997}}]},
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {Bold}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {Bold}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[
         0.16686556464351418`, 0.26627010707849996`, 0.3098932676620052], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3.091042453358316, -1}, 
            NCache[{3.1354942159291497`, 
              Log[2]}, {3.1354942159291497`, 0.6931471805599453}], 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{959.3822251394417, 973.3304492227132}, {
           440.23136608689276`, 783.7499999999997}}]},
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {Bold}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {Bold}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[0.0863508, 0.145602, 0.203418], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.1354942159291497`, -1}, {3.1780538303479458`, 0}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{971.8304492227132, 985.2487981596892}, {
           580.2482851815649, 783.7499999999997}}]},
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {Bold}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {Bold}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[0.0863508, 0.145602, 0.203418], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.2188758248682006`, -1}, {3.258096538021482, 0}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{995.1805458773295, 1007.6638724723047`}, {
           580.2482851815649, 783.7499999999997}}]},
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {Bold}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {Bold}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[0.0863508, 0.145602, 0.203418], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.295836866004329, -1}, {3.332204510175204, 0}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1016.7326335862878`, 1028.4169897925988`}, {
           580.2482851815649, 783.7499999999997}}]},
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {Bold}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {Bold}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[0.0863508, 0.145602, 0.203418], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.4339872044851463`, -1}, {3.4657359027997265`, 0}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1055.4201067286326`, 1065.8109782737665`}, {
           580.2482851815649, 783.7499999999997}}]},
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {Bold}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {Bold}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[0.0863508, 0.145602, 0.203418], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.6109179126442243`, -1}, {3.6375861597263857`, 0}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1104.9675931498173`, 1113.9357405614705`}, {
           580.2482851815649, 783.7499999999997}}]},
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {Bold}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {Bold}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[0.0863508, 0.145602, 0.203418], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.6635616461296463`, -1}, {3.6888794541139363`, 0}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1119.7098880129804`, 1128.2998599029247`}, {
           580.2482851815649, 783.7499999999997}}]},
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {Bold}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {Bold}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[0.0863508, 0.145602, 0.203418], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.7376696182833684`, -1}, {3.7612001156935624`, 0}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1140.4630053332746`, 1148.5524606802067`}, {
           580.2482851815649, 783.7499999999997}}]},
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {Bold}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {Bold}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[0.0863508, 0.145602, 0.203418], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{4.204692619390966, -1}, {4.219507705176107, 0}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1271.2476274405612`, 1276.8964282304614`}, {
           580.2482851815649, 783.7499999999997}}]},
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {Bold}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {Bold}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[0.0863508, 0.145602, 0.203418], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{4.219507705176107, -1}, {4.23410650459726, 0}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1275.3964282304614`, 1280.9846604181425`}, {
           580.2482851815649, 783.7499999999997}}]},
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {Bold}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {Bold}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[0.0863508, 0.145602, 0.203418], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{5.37989735354046, -1}, {5.384495062789089, 0}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1600.3507052117247`, 1603.1382427959873`}, {
           580.2482851815649, 783.7499999999997}}]},
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {Bold}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {Bold}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[0.0863508, 0.145602, 0.203418], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{5.3981627015177525`, -1}, {5.402677381872279, 0}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1605.4657137385059`, 1608.2299999999998`}, {
           580.2482851815649, 783.7499999999997}}]},
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {Bold}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {Bold}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.10805354763744558`, -1},
  BaseStyle->{FontFamily -> "Helvetica"},
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{
      Charting`ScaledTicks[{Log, Exp}], 
      Charting`ScaledFrameTicks[{Log, Exp}]}, {
      Charting`ScaledTicks[{Log, Exp}], 
      Charting`ScaledFrameTicks[{Log, Exp}]}}, {{{{-0.6931471805599453, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.5\"", 0.5, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0., 
        FormBox["1", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
        FormBox["5", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox["10", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {3.912023005428146, 
        FormBox["50", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {4.605170185988092, 
        FormBox["100", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {6.214608098422191, 
        FormBox["500", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.791759469228055, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.995732273553991, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.0943445622221, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.248495242049359, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.382026634673881, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.499809670330265, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.298317366548036, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.703782474656201, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.991464547107982, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.396929655216146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.551080335043404, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.684611727667927, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.802394763324311, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.907755278982137, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.313220387090301, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.600902459542082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.824046010856292, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}, {{-0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0., 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {3.912023005428146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {4.605170185988092, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {6.214608098422191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.791759469228055, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.995732273553991, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.0943445622221, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.248495242049359, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.382026634673881, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.499809670330265, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.298317366548036, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.703782474656201, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.991464547107982, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.396929655216146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.551080335043404, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.684611727667927, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.802394763324311, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.907755278982137, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.313220387090301, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.600902459542082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.824046010856292, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {{{0., 
        FormBox["1", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
        FormBox["5", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox["10", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {3.912023005428146, 
        FormBox["50", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {4.605170185988092, 
        FormBox["100", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.791759469228055, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.995732273553991, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.0943445622221, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.248495242049359, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.382026634673881, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.499809670330265, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.298317366548036, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.703782474656201, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.991464547107982, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.214608098422191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.396929655216146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.551080335043404, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.684611727667927, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.802394763324311, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.907755278982137, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.003065458786462, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.090076835776092, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.170119543449628, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.24422751560335, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.313220387090301, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.3777589082278725`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}, {{0., 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {3.912023005428146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {4.605170185988092, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.791759469228055, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.995732273553991, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.0943445622221, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.248495242049359, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.382026634673881, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.499809670330265, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.298317366548036, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.703782474656201, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.991464547107982, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.214608098422191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.396929655216146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.551080335043404, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.684611727667927, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.802394763324311, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.907755278982137, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.003065458786462, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.090076835776092, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.170119543449628, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.24422751560335, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.313220387090301, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.3777589082278725`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->550,
  LabelStyle->Bold,
  PlotLabel->FormBox[
   "\"Vertex Degrees for a 1000-Vertex de Solla Price Graph\"", 
    TraditionalForm],
  PlotRange->{{0., 5.402677381872279}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{
    Charting`ScaledTicks[{Log, Exp}], 
    Charting`ScaledTicks[{Log, Exp}]}]], "Output",
 CellChangeTimes->{
  3.6743925291423073`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztfQm0Vdd53s27A48HSALJki3bktN4TrrqDG2SNo2TpnHcpInTrqyuuG2c
umkEAjMJwhQgDAKEwMhMNma2hZlizDzIwuAhcuI4Ygi2cTAhNnNCZIQMDoTA
6f722f9+/5nuOfe++x7Td9a69913zj7//vf372/vf8+/+eHRg/5w6IdHP/kH
H37Lrz314RGDnvyDUW953/CnzK3yj5RKtafM5xNvKeF3UCrJV/1rHL7yQjFQ
k4Eetzd6B6+++mqwffv2YPbs2cHIkSODQYMG2b/Tp08PNm3aFJw/f770FRu2
PTh79mywYcOGYMqUKcGwYcOCoUOHBpMnTw7Wr18fnD592srd0IDcjmJytxYL
VlDaD0IkPoQ/leCJJ54olYO1a9cKLiFEu+3PcnDz5s1g3759weDBg0u9XOCB
AwcG69atC65fv17aliWl5gTcuHHDwmBeMvfCcIBiy5YtEB7G9pmCsRUVurqr
WhUNd6kRLHfu3IkgNlhvF3jevHlImQ2xJU9rwCAC2l24jRs3Wth8bM8XjK1S
UOjKrmpVNKKLRbDc5YSdPHnS5owwWPg9ZsyYYO7cucGECRNKVRWBCNicJbnq
hL788stewzb7XbGRPPPMM8GsWbPwW14/cuRIVLFPdUGxtq7Fv6Kb0tVFtb7f
iD1Xr14di6MW7Nq1yxJQrmPHjgWjR48WVMHDCxcu1DetZD5kMpSHWv6oUaOC
U6dOefkwnSmhRT4K6lQTN6xrTetqL6dOuXFNMo3ddEprWn4XtWvA5rVg3Lhx
gqP9QJCJWhJy+PDhGMzlYOvWrV7W5/KQgJ5xAS+99JIPJ/kb9+LhTO0cVXp1
s0pXtNLQqdIFVZZ3X5orOqKu6vlK8XxQDRYtWhTMnz/ff1544QVfdCErTpw4
MRIRyp3CmeDFF19MaHrx4sVEiq5cuZIIh3dTMkGjGle0xhBa6YIeuTmg+QRX
dERd1bNQDviSw3Px4sURUpmSM9sbChNaC5YvXx5/CeBXnUz8qx+bUjuMdFOd
SNual53pJ3VB3y6oU8ibEvxVjWY/prrKw79qGzb6pTlz5jifsBo8++yzkWfm
/yj4aTG2NSk4B/nGBTarSEOYwxfXAkyNmo/52LFjIy8tWLDAa7Rw4cLIMxM2
inlajG1NCs7FvFGBzSpSCPMv2p/l4Nq1a7YNrgst7b7k1CbVYPjw4RENli5d
6rUzvxPw2rc/mxl7JeJ6GeHiU0FWPO40+blmaFThtibfa6DxVguOHj0aTJo0
yX+mTZsWvPbaa1KD7dmzR2R7K6E/o7CVBg8enCgPRfl4wTNkyJBQuU83q1xF
K4e4xYiIKq5aWvS5Rmw0PW1NvtdQCxzuXhSIqs3NaPlcvXrV9kJt3rzZN3hV
CyLfgq4F7T9r1qzxmpvfkWfom1EWbFSzSqRtY4SJ+RBPXK+0uHPN12hi2pp8
ryHzobHq8kepT0qpk9OiriLDRDRYtWqV127lypX1SJYWe1XHbi+8JLYwwhMK
pEWSa4tGtW5r8r1CtpCOwalTp/oMK111aMJfvnzZhsh1C0aMGBHRYMmSJV47
8zu9Wnq+YOxtTUaSa4tGBTarSAO2qAbLli3zL6PjI6z4OvkhqGzNS109RwZt
Rv1s/Pjx2ibFtSg3GVmX3Lc0gUXct7T3GrBNn2DHjh3+ZfSooSv7+PHjtoce
iIGI6PY+c+ZMaUdeCtEm19qY/72mccffN1+eb0KTWpMR5tqoUYFtTb7nbPS7
Lsdt27bNlxe9UtSL0OnAgQMReefOnQtNU0CQNJzj5Sv4r7rc0OESd+pXrFgR
1edTdfTp25p4Pt7dyaro6PC61I7uTfdiMW1f6YJRlYNlPwcPHmzQqGV0mflw
ot+lS5d8OOlnQq95PNzevXvTrZumWN8WR9iYmbsSb0XHCzmVLqjdFXsrb81+
du/e3bC9TUmY0G///v2JdOBePJxuOkTsnaZY3xZH2Ki9m4832hIxcipdUDti
75pFCtkG4wPovEdfkBq3S5h+j4tGO4cdKdlvfePy6w1UodvhxIkTHgT8NqWb
HmpKHexOqlnVakpcpXLj8XyiB1NY0zFrxZvQ2w3F/Z7TBd0arlPH55dMqyv3
M9XqmwoKlTGRtFExtG5nzJgRzJw5U+N46NChqE7PZ+oUNTEuE0+pUlz+8p5J
RlvXXtdjqkYVuJm6jjOKhkB93kWjJ36kGe9zdQT1UjkXMxSeUG1CPWPBfq/J
jLCWsIwT2JEia2UL9CkXDOdc2d+3fyqRFokYXGBEbxE6nM3HpArf4aCXiNqc
LqNdaYLWAAY2pOUGY6PlYIqSEMG1BeNqKyj0U13TqVYwnJv11GndC+5F9KwB
bhS1bZh75roScM88C9/YWzDw1oLhOgqG+0Fc67TrVs9KZKA7LdAvhv+Ballf
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
6dWrV63funnzZudbVCJ1pvEZJNVr1qxJpBr3dKrhLN4W5g79V2Mzq3wfl2qV
Y+0FI0nyVq1alUjeypUr04166/3eqVOnJvxeNDwuX75sQ0gxNGLEiEgSlixZ
4osh8/t2I+tDTrVly5Z5teDHGcv5VgisKMksu/D1Sls4EfrZ+PHjb49k9gl2
7Nih60Pbajl+/LhteAECZEC0cM6cOeOTA39HJ8f875/F69HboK4Uix44cCCi
2rlz50p97bNagmfItMrvhdcXrZPKwYoVK7wet9htkxSqctZ+Dh486FJYhhOb
8DwvXbrkIxIPFc2ZeLi9e/febklVhav97N692yfV5NVEEvbv359IKu7Fw6mq
51Yn9XUuUl3Qdrh6RFlOGp0laXUaByk4ceKEf47fJj/rVqf0OdziVqekUJW1
qSnEZZqepYrzD9CnMGPGjGDmzJm6T+HQoUM+/tskZbpzqMPZJ54yGGPjxo0d
LhW6Y+UWl5ySCvhpaDGYj0kFvsOWrAgTQiElqDjQsJK6ErZCJWMIe6t77N7l
IoW7CZRBmjZ0lDrPBffMs9It7ie9t/u9GT2jZ/SMntEzekbP6Bk9o+cCkrsU
fEbP6Bk9o2f0jJ7RM3pGz+gZPaNn9HdP9GxgM3pGz+gbit58Sv9RR6yv97c2
vscffxzhTXx4q3vj++3f/CmJJRXKGYyKUTEqRsWoGNUdG1VTLn9eVJPx1Rr3
/rYHkFExKkbFqBgVo2JUjOoOjYp+IKNiVIwqN6pH7J/cDaw6igVrfv1Ww4rb
ZYay/nDt2rUSsPAmVt2/2VXr05S3k1X373jVujTJvj5Nbl11y3a+ah0Ceo07
CNWZhJwNrGqRbVlw3Yrtr1oPBNR8IrYsvNhuVhW9m9Wt2wyr9ZBgi6q4rsW2
t6ro7a1u3e5YrYakqW2wbskOWq1OeeNbZfX8FlutT3Oje2n1/B5crU8z9pHQ
+oU74ITP0nbZamvyvdspzXpLEeGe6J62wVZbk+81vzFXXprH4Kt/I2l2u336
z5o1a7zuadtrtTX53u1kZ2ODiH6rVq3yuqftudXW5Hu3U5ob3Yir5zfw6tly
O21XriLldmt382p9mhvdnqutyfd6MM3iIG7btk1U8FtHpzlnDW/nVdHbeeF1
aaS4N92LWa+3ajewbgamK7uAVfQuYJBTaej1Vm0i1u0INb95WHTfSiOn0tDr
rdp7rEmEarYLCsZE+xeNU+wtq/otivYZ1N1+rKa3H7NXrM+gRzYvaxiiXi4C
7ODq3FtvtbTepLR9sgtsWtbWtdd7uhPFJBdbReqC1oDhwXL7mllFZYNQvblZ
uWC4HqxnbFQGbF3FmyS1K03r7W9WKxiuBztzH3ER5O151lEwXA/2rd+dQx2M
ilExKkbFqBgVo2JUjIpRMSpGxagYFaNiVIyKUTEqRsWoGBWjYlSMilExKkbF
qBgVo2JUjIpRMSpGxagYVeujgmjzKf2W/S5LNJlRPd18VLhvPqUP6Ej0NbM5
2fi/nsrfpFiKpViKpViKpViKpdi7W2zuLnR5Yg/gq/Ed524rECiWYimWYimW
YimWYimWYimWYimWYimWYimWYimWYimWYimWYimWYu8IsRzdo1iKpViKpViK
pViKpViKpViKpViKpViKpViKvd3EsteOYimWYimWYimWYimWYin2FogNT3Ls
Hbz66qv2yDoc9IqzTQcNGmT/4sDFTZs2BefPn3dnxLXbM+I2bNhgz4UbNmxY
MHTo0GDy5MnB+vXrg9OnTxcMVuwkuYYTJGco4gy+ffv24WRuf94nzuBbt25d
cP36dX9WH069RMJxQrWc1YfEb9myBTIKhyt2pl/Tydm5cyfu2ojlkEQc0GmS
YkPIiZxInoRrd+Fwdp8cmlk0XLFDFxtOTske+miPGAWQcorlmDFjgrlz5wYT
JkwoVZU2IltQePnll73WVqw7GBNHF8+aNUsfjHnkyJFWvV7sXM1msXDHw5fk
BNRdu3bZzCbXsWPHgtGjR8tj5DkcrytX7PzUUaNGRY6hBdKGx/r0VX018nZZ
v93NoIwbN05ZKXruq5wbmnZK6tatW7XyYk0cZytqSGbAvfjrppRr/vWyfr3g
Ab7N4rNo0SIcUmpixnd4rrPI0eeqTpw4MZJA5HS5XnzxRUngxYsXEwm8cuVK
Ah/zSvOvl/Xr3YVPX/unGixevFiitx/DIH/Q8fLly+PPAFbVvYp/9WND0K68
2k0lqSTUFR/+gzNn5UT3+Kntc+bM8Se6P/vss5Fn+iT4Rt/r5iSintNRmhLJ
qzp27NjIswULFnhVFy5cGHlmwjb9XjclsY8Tdu3atcSJ9LqsHj58uBTCS5cu
9XFUnMa4l4WQO6/af0xYn9K097q35scJ2pMmTTLa4bscTJs2LXjttddcTOH3
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
rXBezLzGMVDLA5V+5P8D2iDd7g==\
\>"]]
}, Open  ]],

Cell["Navarro-Frenkel-White profile for DM in galaxies.", "Text",
 CellChangeTimes->{{3.67440064248142*^9, 3.674400655987475*^9}}],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"https", ":"}], "//", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"en", ".", "wikipedia", ".", "org"}], "/", "wiki"}], "/", 
     "Navarro"}], "%", "E2", "%80", "%93", "Frenk", "%", "E2", "%80", "%93", 
    "White_profile"}]}], "Text"]], "Input",
 CellChangeTimes->{{3.674401115792485*^9, 3.6744011157936172`*^9}, 
   3.674402038153419*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nfw", " ", "=", " ", 
  FractionBox["1", 
   RowBox[{"x", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "x"}], ")"}], "2"]}]], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "where", " ", "1", " ", "is", " ", "rho_o", " ", "and", " ", "x", " ", 
    "is", " ", 
    RowBox[{"r", "/", "R_scale"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.674400659300708*^9, 3.674400710958687*^9}, 
   3.6744010846641006`*^9, {3.6744020934133987`*^9, 3.6744020962658243`*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"x", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{3.674400712079071*^9, 3.6744020980664*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"nfw", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0.1", ",", " ", "3"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6744007138669233`*^9, 3.674400724145713*^9}, {
  3.6744007589898787`*^9, 3.674400789141994*^9}, {3.674400847776935*^9, 
  3.674400862532989*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwVjHc8FXoDh+1jZaayqbRd2cL1/TXlonVTikQbRUpEyKyMVHIklXISGUVo
2BKHbEmOfejg2EJ2vPf94/k8/zyfR/mU86GzXBwcHD/+4//+mFfxKOZxNt71
X+g/d1uJnJq3j2M1ZMOCV2/Fv1ZKRERfIOUvkRyMLvK/5N+qRM58NC4o9s8B
faOUnNtHRSKRUcIacMyFt+JmOwd3BVIwdnpEKyEXYaHi4vRNCsRejXvGh5kL
X7nGJvtOeVKUul1I0iIP2qJPhu3N5IlTYoG6gVE+2Nlugze05IhM7wmDoOv5
cJYzk9rzS5aUrv2zqzYjH5WKL7gU02SJHM3A8vT6Arh8SLvDUpUlFU8/+YSK
FWKsbRuvnK4MkTRp7rnkUgR/HZeMd1dXkQvs1wMR4UX45vmPYbvRKlJw+/ro
x5QiSObnnigTXEUc6CtnOXuLcPi77lBZ/EryeecR4ajjn+H2zSREsmsFcTZq
0CjYWYx5IT2DIXcpUtJO0/1pWwzRXRrJp8yliIz3FUN+n2JoWYjrnlkjRei5
4nsOfSpGfVXC1cW65UR+24FjvVu+IHi3v42pxnJSqVl9U2RFCUZu14YcFpIk
1ocNpBO1S5Dl7avl3SNBRlyTMmBRAu5b26KViiSI2IegnsuRJTge4JtY4yZB
jugZmTZIlMJWJy8orF+cMA3TVkSL0pF+rFy1rVuMuJyQT9+qRsernL9NC7+I
ES6fUJOv++hYiHw6sxgvRlQKz3vN3aXDvMaOefeCGHHYrtRtLVyGOIGOB359
ouT37gdvlAXKsWmLueAjDRFy69zSnpwN5ejcXtT+fHEZWXX7EvPQ3nJsWB34
SrdyGdEvN5EMvF2OsSHuo0LnlhHff7g8enm/IkWs9B4/TZgI7r+6K4WrApsC
zYwT1IWIoqVFq9ZCJWIOKfx++pKf+HvpXH4vXYUHTTpyHr78pPfFSl4d3Sok
NWjNvTzBT1L7m//SvVIFI53o6a5V/ETvho3/NnYV2K/nn7MiKORQ7PmNRt+r
4ZejtNEoko+8L95bUPCrGnydR2eir/GRVX0b/4VoDfYliMZqHeUjHWpDXuSf
GkwNHbbfLMtHHD9frttRVIMRXZU7XAm8JJDl4W6cWou5kbL1eXQe0sdvJVz+
tRZjt9+k16bwkH9UDeP29tWiRNDNQPoBD+E3uNmzVrwOJZuPT5ta85DagO2i
68zqkLV9okfxNzexlqKf2lBch+CwCAPKVm5yTa9WQPVtPTzDEodtyziJW1cj
eZlXj30DX5Y/y+Ak10Pa3KUr6zG6U9188Rkn8Wzr7+Fl18NfytXvr2ucxNeX
p7hD+RvmZ0LXGqpwkrDybZ73qd9wmthYfg7lIPGW8QMTXg1wcC3XecFcRAJn
irJDaAPqPT74KBYuIjH5nSXzcQPWR1GzG58tInmhgF71oQFlAuZSPVaLSH/R
THs11oB77wPE/Fv+II8tYnX0zHesEU8c3te1gIbrHpU5po3QDq6K2yUxjyun
aqscrBrhpZsx7jY5BwkzlRoZx0b0lIbYtPyYwwHF+jrPkEa0HRCp0Hg6h5rS
DT/0vzbiZKmUsMLGOZRLMJg5e35A4ZSKRIDpLPJSdaZytjehulllHTttGlZR
YdMOB5vAox6r5vVoGnM3u2dk7JrAl1x5V/vmNLb9Gz7v6dsE7/DtYiv3T+PD
bA+HQWETZhLUG8LGppC+hyqUa8iAGU+1KLf+FOKZE0q5us2wfCNlZdQziS1m
3Eon9zRjUv54nfm3SWR9lFDktmiG4oJ2oFvhJErD1eVNrzQj7V3qmETMJHoN
naVbU5sxsCNm/MqBSax/PCA+r9wCO/HImKTPE0g+2MVlINwK/9AD0o1Z49DI
H+PslGlFjXwoJTd+HDkbODgDNraCNnhG833kOCqXFJYq9rSi9YZ+To/rOIbe
WM8f92tFnE9CnabOOFQFGROeU//98u86n8/7hfTiGlYOsw2Mcdemwz/G8MNJ
9W30WBtWswziT5SNYUEmzN2Nox2rMq4XeHwaw96rJoIaSu1IG9G0GIwZA3NN
iVrSyXa0D1Bc0m3HIBaU7fmoox39m9tGzTpH4WwcL+ba1oGtojRHptYIIie4
Wg4OdcCtgZlmLjuCnOd2L9UWOrD+keFfLZwj4JtR0BmU7cTtqArhA7XDiH39
2OqUVSf8FmbrkhyHUSNwL+FASyfUlSVKB5KGsLLXMHbFRSYeARm2BoOIMNb1
YF5l4lLA5nVFKoMQTlI/nHyDCdvAwr/1xAbBdXGdoFEoE4mOo59degYw8kvU
7WwyExWtb5fzPRgA/U+3eRabCcmhtzcih/rhKhX85+DZLjA65l8dz2Jj1C2A
IXupC7/DJKdC4thwYHhn9rh2gemvlF0bzobtkyv2HoFdEFKqV46yZ8NM2brx
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
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.5, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.674400725045722*^9, {3.67440076018789*^9, 3.674400789618454*^9}, {
   3.6744008504020643`*^9, 3.674400862993084*^9}, 3.674402101076763*^9}]
}, Open  ]],

Cell["The integrand in the mass integral.", "Text",
 CellChangeTimes->{{3.6744008011384277`*^9, 3.674400819429208*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{"4", "\[Pi]", " ", 
    SuperscriptBox["x", "2"], " ", "nfw"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", " ", "3"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.674400822712997*^9, 3.674400866258243*^9}, {
  3.6744009029962397`*^9, 3.674400936446905*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
FNhAQf8HaPWe+w==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.674400867000098*^9, 3.674400907014386*^9, 
  3.6744009373316717`*^9, 3.674402107720228*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"$Assumptions", "=", "True"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"mass", "=", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "r"], 
     RowBox[{"4", "\[Pi]", " ", 
      SuperscriptBox["x", "2"], " ", "nfw", " ", 
      RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.6744009658439837`*^9, 3.674401003712538*^9}, {
  3.674402131116045*^9, 3.674402143225564*^9}, {3.674402196746779*^9, 
  3.674402198069497*^9}, {3.6744023003602047`*^9, 3.6744023825714493`*^9}, {
  3.674402861726328*^9, 3.674402918992342*^9}, {3.674402995804143*^9, 
  3.674402996557321*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{"4", " ", "\[Pi]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      FractionBox["1", 
       RowBox[{"1", "+", "r"}]], "+", 
      RowBox[{"Log", "[", 
       RowBox[{"1", "+", "r"}], "]"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", "r", "]"}], ">", 
     RowBox[{"-", "1"}]}], "||", 
    RowBox[{"r", "\[NotElement]", "Reals"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.67440300074524*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mass", "=", " ", 
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "r"], 
    RowBox[{"4", "\[Pi]", " ", 
     SuperscriptBox["x", "2"], " ", "nfw", " ", 
     RowBox[{"\[DifferentialD]", "x"}]}]}], " ", "//", " ", 
   RowBox[{
    RowBox[{"Assuming", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"r", "\[Element]", "Reals"}], " ", "&&", " ", 
       RowBox[{"r", ">", "0"}]}], ",", "#"}], "]"}], "&"}], " "}]}]], "Input",\

 CellChangeTimes->{{3.6744009658439837`*^9, 3.674401003712538*^9}, {
  3.674402131116045*^9, 3.674402143225564*^9}, {3.674402196746779*^9, 
  3.674402198069497*^9}, {3.6744023003602047`*^9, 3.6744023825714493`*^9}, {
  3.674402861726328*^9, 3.674402918992342*^9}, {3.674402995804143*^9, 
  3.674402996557321*^9}, {3.674403187587063*^9, 3.6744032714256277`*^9}, {
  3.674403396789556*^9, 3.67440341391792*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"ConditionalExpression", "[", 
   RowBox[{
    RowBox[{"4", " ", "\[Pi]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       FractionBox["1", 
        RowBox[{"1", "+", "r"}]], "+", 
       RowBox[{"Log", "[", 
        RowBox[{"1", "+", "r"}], "]"}]}], ")"}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Re", "[", "r", "]"}], ">", 
      RowBox[{"-", "1"}]}], "||", 
     RowBox[{"r", "\[NotElement]", "Reals"}]}]}], "]"}], "}"}]], "Output",
 CellChangeTimes->{{3.6744032073638277`*^9, 3.674403234260144*^9}, 
   3.674403274166606*^9, 3.6744034038240023`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"r", "\[Element]", "Reals"}], " ", "&&", " ", 
    RowBox[{"r", ">", "0"}]}], ",", " ", 
   RowBox[{"mass", "=", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "r"], 
     RowBox[{"4", "\[Pi]", " ", 
      SuperscriptBox["x", "2"], " ", "nfw", " ", 
      RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.6744009658439837`*^9, 3.674401003712538*^9}, {
  3.674402131116045*^9, 3.674402143225564*^9}, {3.674402196746779*^9, 
  3.674402198069497*^9}, {3.6744023003602047`*^9, 3.6744023825714493`*^9}, {
  3.674402861726328*^9, 3.674402918992342*^9}, {3.674402995804143*^9, 
  3.674402996557321*^9}, {3.674403187587063*^9, 3.674403308462134*^9}}],

Cell[BoxData[
 RowBox[{"4", " ", "\[Pi]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    FractionBox["1", 
     RowBox[{"1", "+", "r"}]], "+", 
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", "r"}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.674403310321464*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"$Assumptions", "\[Rule]", 
     RowBox[{
      RowBox[{"Element", "[", 
       RowBox[{"r", ",", "Reals"}], "]"}], "&&", 
      RowBox[{"r", ">", "0"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"mass", "=", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "r"], 
      RowBox[{"4", "\[Pi]", " ", 
       SuperscriptBox["x", "2"], " ", "nfw", " ", 
       RowBox[{"\[DifferentialD]", "x"}]}]}], " ", "//", 
     RowBox[{"Assuming", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Element", "[", 
         RowBox[{"r", ",", "Reals"}], "]"}], " ", "&&", " ", 
        RowBox[{"r", ">", "0"}]}], ",", " ", "#"}], "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.6744009658439837`*^9, 3.674401003712538*^9}, {
  3.674402131116045*^9, 3.674402143225564*^9}, {3.674402196746779*^9, 
  3.674402198069497*^9}, {3.6744023003602047`*^9, 3.6744023825714493`*^9}, {
  3.674402861726328*^9, 3.674402891541608*^9}}],

Cell[BoxData[
 RowBox[{"4", " ", "\[Pi]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    FractionBox["1", 
     RowBox[{"1", "+", "r"}]], "+", 
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", "r"}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.67440292024853*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"mass", ",", " ", 
   RowBox[{"{", 
    RowBox[{"r", ",", " ", "0", ",", " ", "9"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6744010220035467`*^9, 3.674401039741817*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
yQ==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 9}, {0., 17.625403889008805`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.674401041007275*^9, 3.674403425888685*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Noise and Fourier space", "Section"]], "Section",
 CellChangeTimes->{{3.674918430007413*^9, 3.6749184552832317`*^9}}],

Cell["\<\
The usual ensemble average over \[OpenCurlyDoubleQuote]many realizations of \
noise sources\[CloseCurlyDoubleQuote] can be replaced with the long \
time-average for \[OpenCurlyDoubleQuote]stationary, stochastic noise.\
\[CloseCurlyDoubleQuote]
Test this...\
\>", "Text",
 CellChangeTimes->{{3.67491846149472*^9, 3.674918489083295*^9}, {
  3.6749185210094633`*^9, 3.674918554512225*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nn", "[", 
   RowBox[{"t_", ",", "a_"}], "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"RandomReal", "[", "]"}], "-", 
    RowBox[{"1", "/", "2"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.674918561919821*^9, 3.6749185786029797`*^9}, {
  3.674918621022842*^9, 3.674918644285907*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"nn", "[", 
    RowBox[{"t", ",", "0"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.674918650558951*^9, 3.674918664480192*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
qvb/0ugF/wO4h7V5
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 30}, {-0.4998394755120319, 0.4997648815616569}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.674918666019916*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztnXe0FdWe58+75yaCGF73e2/6hX4d15pZHaa713ozb82sntfpdZ7pnp5e
s+YfEQVEkigqivhASRIkqAQFRBRBkJxELnq5ZIGL5JyzkhSBCwjW7O+u/dv1
q6p96lSdU3XC5Z61DqFO1a69f+Hz23n/c4enunTq0eGpxx7p8NO/fbJDry6P
PdL7p798/ElxKf2dVKriR6nUd/78pyn820ql6I/ft8QnlbY6d+5sqU9K/nlV
/jMV6nfn5yhP3Y2/71Q/NN28bV1tumXd+uZO6ieZn2mjrn359Q3ri0vX8Hfq
fnmt0tp24HPrwReXyu+FL6//QN0q/ml9uvsMvql/V7ceP/uV9as318rvuYvX
/kzdOnPFHuv1D7Zaq7aeSP29uja/4YD12LAV1sC31qd+Q12bsmiH1fvVeuu9
5XtS/5k9i/tGvrcpVYVrFUhd/LB03WH5/j1HL6Raq/ejtPWNx+VX5O/HKo0N
u05bw9791Jow97PUn6hrr8zYLEv09tKdYQRDt4u/U7Xq2uK1h2RJRbZT1WZh
3a9u3bL3nMzs55euiZvsa+t3nqZbU79Q10598bV19MyXeDT1gEpy//FLOsmT
n19ppy7f/Oa2vBVfUe7fUin0nbBal+tv5LUayF3Kf279flmq2Sv3yXvEvVr2
VEDIiGQv0pDXBk1dT7JHZtPW4Kkb9A8ke9gDZVNIoUpdhiqgP3w37T77a0x2
uPOJMZ+kvqeuwXpQmivXbip5VkuDxDX8xtTYVj0yYvqmfLXIC5lFi4++/JG8
9PHm4+J/9q1Xr9+yFq4+SLeTd4g86lR/z6AaO8kqa/eRC1b/SWu5goXC/B5W
qV4nftf3CsO4T9264tOjUjRvLd6Ramd4XQWzOWjk8KnLyuZquAAyWsdwkTZZ
x2+zrOCd+H5x+VprpTGeHMtWhcl+Xpy8Lpv9UG7wFbkPsh+uHrIfug+/sWfI
fpBJkhHJjZAp/k7dk59N9XtjTS42xciA7/0sVbix+FlDhNvZ99U14T8S4pev
NOlc+o2h0jp/+bo1S4gX32tNt9ook/S83WWSnFlZTJLeCDMKMkmhDXlNKDp1
r0ry4ldN1hKhLXxFaf4whKV+Vz0qwo4OAd/cvpP2KJobsAesZMDCWPVb6I3i
DUYDxpvzN+D77aTh59UIEWRj3DjyMGhuodygpT2TgLqPrJOMbvjspM36LKaN
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\
\>"]]
}, Open  ]],

Cell["Discrete Fourier Transform is just that for  a list.", "Text",
 CellChangeTimes->{{3.6749187894896517`*^9, 3.674918807797965*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"nn", "[", 
      RowBox[{"t", ",", "0"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "5000"}], "}"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.674918808939979*^9, 3.6749188266646357`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fdata", " ", "=", 
   RowBox[{"Fourier", "[", "data", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fdata", "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "5"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.674918832097993*^9, 3.674918860592906*^9}, {
  3.674918891261057*^9, 3.6749188986498213`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.05095637728918944`", "\[VeryThinSpace]", "-", 
    RowBox[{"5.006203005471216`*^-18", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.2135443409680331`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.17603269005535965`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.2900065159888687`"}], "-", 
    RowBox[{"0.38815309880601157`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.15449043518041897`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.17163520744071822`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.10315845231141521`"}], "+", 
    RowBox[{"0.20253130536262107`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.674918899279711*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Abs", "[", "fdata", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6749188640484447`*^9, 3.674918873261979*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw8fXlYzd33dgghhJBMGR7KmEwhuREyR6UiVEpzmjV3muc680QqhSiEEEJR
ZA5FUWQolZC5CO/5Xd+13+ef59r2+ey911r3GvfQOLs9mx26KykpxQ9RUvq/
///vv/Yl//Z9X/tt2LEl9A+4tEorYP65h9RWwfhW251h3V9SWw1nS3SL36fe
o7Y6SpY4/Xo8nLU14Jzm4Xd5Lfv9KBhEh1WFaT+jthZE3aOK9feXUXs81hVG
b+1eUU/tiVjVnvB1c3IltSdB0lt+bNWTImpr41GvyBcqVY+pPQUJ5kuvNnY+
ovY0+I+JuGKbfoPaM6Bd4foggl9HbV30T+T2uqJZS+1ZmNl7beDbF1XU1kPS
841zVVwuU3s23uhET3tTfpLac9A+MfdzZxBb/1wc4/X68snmAbXnIX2uash8
Izb/fAyIfbI8uzdbrz5aXDesL3t3m9oLYK31q6ChP5t/IQwHZaa8s7pD7UXY
JJ6XEFTUTG0D+H52zqw8eIvaixEuLrzf+zcb3xD2Eg/XMT5sfUuQd3PJ8zHV
TJ5AsJ/OpVkLqM0BMk++3riimcl/KQytW1NG9yV+cpZi2N5L5oZnG6h/GWra
T97pb8y+X4bcxnyDgfbV1L8cDaW3RuvdeUL9y1F81tS4OOU59RvBYfaAF9Z3
ab0cI1R0Gp4ct4WtbwXeLaiP0Dp2hvpXYOYxHaVPzqx/JZr0XL2OfSR+cVbC
Vd2Dnx7I5LUKja0b3i724lH/KswI1Jvl8PYu9Rtjp540fcRTkj/HGK/lm5YH
1TL8rMYg/aUb9xy4Sv2r4eOhdKvxaiH1r4Gtwfk3opGEZ84amI3WOzPzP4b3
tRjnI/Ya+6CC+tdCN+XQqZNW+dS/Do2O22I/ed6k/nXQH2hhcH0Pk996XLRf
Kzv6rpT61+PFqA+iEzmMvxtgr5c+9tdB0g/OBmxauNJ8WzbTl43obrt5essP
9v1GDE/LaXT/wfTTBDXzyzS3aRG9MEHpd8GFWzNO0+9NoMzzX3zRjPhfYoJ1
R01nmXJe0/eb4HDF1TVk9xH6fhPGvv01Syee+MvZhG7X1qBhAbVLNkGy4XGp
/DHTj81was47G2Nzhb7fjBt9hj4YOJvxazMi1x5z5x4gfpRshu2sUzsLq5h+
mMIpsWiUk5DaMMVyWd8ZHuPO0/emmJi4cmWeEfveFPW3/qsoAZO/GQ5K7vS5
9h/pJ8zwuucSB8EYhlcznDnz5tYNPRq/xAz9/5waa/qG8d8cra/G7+8vp9/D
HL6Pe0u2/yT7wjFH496J3ERboqfEHE2V3PJj15l924KZdcdS5j8l/cYWbIie
EGxXTeNztmD+IfPK8/2pv2QL1j5L556Z/pS+t4DZpVdV297QeLDA7AWHNWcv
pX6OBZwz4qf0lV6j7y2QMmZ+rmozW78lDNJl2UPk5+h7S2g2B9w0/XGBvrfE
6FWG/bLraLwSS3CXLm29/ZTGU7ICp3bhK/V9DD9WGKCbvK3XUaaPVrio55iw
tozwXWKFwzKP4zuUCI9KWzHZ4lHXijrCI7aio2f9G9N3xfT9VuR1rv363rmc
vt+Krvaw6UM87tP323A9/NMAHw2Gn204EXY/ZpYHjcfZhn0bw3YdciD5lGzD
htroq4P3M3tsDeP7G16EehE9sMbBf4fXWX9j+mQNm8LL/PUKr/a/761xO09W
sriBrX872jz7WI7vx/CzHeNj839WzyF8c7ZDljAu8CuH4W87Hu0WFEbJib9K
O3BtZObaeQ9In7AD+hKXdasmM3u6A3viBMFbzK/T9ztw0mn3u/1/mfx24sJa
c+nqUrI/2Il56d0CWwcy/OzEvXM3Jnb3o3bJTuzsCLi2biXzNzaIvtpzVZBF
+v/aWjZ4yNepaionecEG5/1cd+mYEn5tbLA85G9c74WMPzbYmffIY9cFkk+m
DdSGmwvK+76g+WzQ6hRTlmdK9DTYQHvS5olzNBh+bDFhwPOJ68cSv7RssSPs
Vp+WerI3sMXvD9Ir7s9Jnja2GGVzwNaN0c+xRfdpTfF3OfR9pi1uRXw7M+4k
w5stNA4JUt8Mr6H5bVGntd/w/lymf3aQvX04QDWU7L+WHRziwltzMxj9dqiT
maspJZA9t7HD3chzFxcOJv/FscPz/aHmwUnEz0w7hFucVVVm8i2xQ/dPD/0+
qNL6GuyQXW40csUT4o/SLmhtLzuTkUb0au1C5yiPQqNRBTT/LuROH5hqn87m
34UnawZ3zs+k+Ti7MGnT3H76/mz+XTBpdcyorGT2dhfcunioyyT8N+zCnq1i
jzwZ85/2sG5o9/I8RfzUssfYvVWr7swmfMMeveacMO62jPTbxh7LoqWllWKK
vzj2GKaketapifQx0x5X7mmM1XxPeCyxR8F1I+Nnd2n8BntMX+EbOOkQ8/8O
0CvLPnWoN8lHywG6OSeXa04j/w0HRObdFGx1yqX5HXDmyv5TUeuZ/B2wceoN
Q9OjjH4HtDzXuao++SLN7wCTvqU1nLEk3wYH+M569ujzCuZfd2PASyWtQ5rE
H63d2D7EtGPeTRofuzHc4Hnq9XsMf7sxWDhhsIUl8/e78b6at2lC/2yafzfK
7ynNe3A5j+bfjSHhmVW3+RR/NezGm+o9Ss/yyZ4oOeLD2Mj+R+6TPLQcETLQ
/M+LdGbPHOEw8c7y4z1pvTaOeNA6qKG6P4uXHDFvgHW22jPCR6YjVBbPEKzo
S/FKiSNqc5a5fZE30vyO6Hb0ntPg/sx/OOHi6SnZuR1kX7ScMN1wt8dkM1of
nFA0dW33fT9ofTZO6NvvgPvVf8y+O+GAZvPb4KdkHzKdsPjpoUeVdWdpfifY
PHa76LuV9KnBCTNjtdXq5rL40Rk7in0Mn+aQPdFyxqLzHn/EG9n8zsgabDLn
j4TN7wwvvWNF+/zIXnKc8XbPk+kRO0lemc74enu3kfJWil9LnCErbvwTMYTw
0eCMwoojbbWWjP8uGK2fWbtkMdlvLRf8pzTjUXpP5o9dYPlfpk5T1CWa3wXX
9F44X/Ug+8VxQd959wxGCYmeTBcYmdXGOgxg9toF99/dvZR0ivSjwQWvrqsN
6raVxZeumDGPm/D7IM2n5Qr3+ft3vQhk/tAVSwYYKd+bRuPZuOIRd//a3FEs
vnDF7Asrnm2YS3jMdMXLP7fPV7qxeMEVqgY58vhoZn9dsbzU4Jn9Gha/uuHJ
Js1mu1dkD7XccGel05iyZubP3fBtzLbSUzvY/G5w/eX03+VZr2h+N+zgxVaE
3CQ8ZLohbFnbmhUehN8SN0iNnpVa8pn+ueGuT+Tu+ynETyV3uP++tXLCPpKH
ljtycqeqHxxM88EdPZPmR1+vpvFt3DHYcEn7gQksXnZHUtOZofGDSH8z3fGu
wmXXbB+K/0rc8dOoq+aQN7M/7ii0PaydfZn5Pw+IlN/O7axi9s8D460d7b17
kT+DB959LC3OCKbxbTzw4gXvdpEGiw89oP32vfONn2QvMz0wxoZ39M51apd4
oPLhx+uT7EhfGxTfV9Tt/KrF6N8D/qStN7wTCU9ae1Cx0/pZwQT6Pfbgtptk
Sqn1O5p/D16qbTOKTmDx7R44pMpTRpeRPmfuweWAEJ+fgcz/7cF7qy5MaaDx
G/bgt5HGyzQ/lk96Iua+Z9JzXcKbmidcmmY1XZhB69PyhLlfz4K48zS+ric2
OP1Ue7iY9BWewILfUddDCV8mnij++FtrUSPpv40n3r0PyZg6lNbr6YlI9VCf
iu2kLxxPHG+qGnLx1aH/tbmeuCzvIZppSPlspieeXPZJfzOA1lfgifXxXi/u
Hmf+zRMnP4YM8N1L7UrFfPYdv3d/pfU1eMLRrOqL+nzqb/fERdcnXwpdWfzk
hR6DNPfXa5M+qXnh1Ibm4D86zB4q+m8M6lxmQvPreqFrzJ3OnYMJP/BC64qR
m2YpEx5MvDDpa9dAFab/Nl440L1z76ty0i9PL7xxETk2TCd7zPHC1JKDaibq
5B+4XtgULvIUFBH/Mr2Q6qV8wzGd9KfAC5e2J/L1NtD3JV6KiP9rltcC0tdK
Lxj+yzv+axLR2+CFM75Dmlw3kfzaFd+7JBbZeTD990Z25iCLffNI/9S8Yay/
sqKpnOyJlje+Ve+faHuf+nW9cbXk5YuNfsQvKPqnS3iP9jH6vbG1TunAkZxT
RL83NpxdNn+AN/kjT2+8nnC79uwMFp97o++bp73tv1F8xPXGk/vr/8RmMXvi
jZYZVVMtzWj8Am98tpq20sWV5SPeePRw/v777+n3ld6ocEzJ6fOe9LfBGy9T
k5M9WP7c7o0lC9ouPmD5spIPbm5tkN7nUjyi5oPJ1ZOH8LPIfmn5oC0lRuVN
Aa1P1wf3Ltufd5tEv4cPSs61BafZU/xi4gPDTjclpZMUv9j4IGrX1XUPmoh/
nj5QedPp5J1N+sfxgccxg6uTl5H/5PrA++3ZgyNzmD/3Qf3aHVnvGki/Cnxw
YFX5pAu/CQ8lPihsybi09QvRU+mDu+ldy6rvMn33gWXrk0a7X2RP2n1wxunp
nW+RLH/2hVvrmF9H2sheqPnCdO+I3uN6kny1fGE9LmahXzjhQdcXH56Pr359
hPAFX8TH/+k+fjutx8QXauuEpfczWbzoi/7xWdndL5A+e/oi0Wz6wyOh5A85
vrB7ZGFQPovqDVxf9N2elPZkOeEj0xfPHpopea1l+PeFUf5os6kbaPwSX/S4
H7t65nriZ6Uvypa595gTxuINX2w0/Xv+iBXJp90Xi1fNSdldS/hQ8oO81iJQ
NoD8mZofvB+/eaZlzvDvh48msyxOriJ+6voh79amurkfWX7gB+fhm9SHvntD
9PvBM8fyodyG9MvGD13Lks1adQg/nn7ok3urWOhP/Rw/3I46JIp0IH5y/bCp
1M114laWz/jBLvTTuqkxZC8L/HA55szyVAuWz/qh16IPLthJ/ZV+SNoX8fLR
b8JTgx9ELj+eHbeg9bb7YWaMgSzUn+Wv/vgwv1virDk0npo/fGtOnpmcx+Ix
f5zpvkataQ7hXdcf55Rzo9RTmf3zx4y1K/4+4hG+TPyxzHHdk6mNRI+NPxJG
f5++YSjJ29MfhzN+LhmoRvzn+ONktlH8Zk/SD64/Ii41//v7gcWT/li0b/qa
rtO0ngJ/uIdkzZn/hMnfH5PD6kuXdiN7UOmP35/H1N/ZQfhp8MfYu33iFj2h
fKDdH7129HvZfIzVv/ai3zClgnuvaX1qe3H+rGH7wcMsH9kLj3/8pTrjCb+6
e1HU0nas33kWH+zFX+ls121W+4j+vQiYkzmo8w3h1WYvCt0rS3dNIP567oV5
0rBu2WtY/rIXZf6/jXVTaT7uXsw7mJb+VJvFM3uh8/d54Vwv8icFe3FAJfWE
ZAmrR+yF+9XPJr2yyT5U7kX7x85BP6+RfjfsBfeg6Z+nvxj+Fb+/9Wv6oAss
/wqA/sQfg+o+kfzUAnDqOH/qyjFEr1YA7m+ZGde7nb7XVbSPbx301pDZvwCc
OfbpZMwo8m8mATjolpF235naNgGw8Zo5zySG6PUMgEdj8+HV6pT/cgKwBcKg
570Y/QEIvpdyOLwPjZ8ZANNuYdEtL0n/CgJQ9354V3U52ceSAHw5r52i9prW
WxmAnW+7Je+dzPx/AFSr24sqgwiv7QGYsnf6o15nWP4diOoRJp/KzUleaoEw
1vmrPd6dxYOBcAs3mPr4IuFNNxDpeSaDd8Ux/Q9ElJLjnUuVhAeTQPTY/UzD
8xCLVwPhZBcf3/iUxT+BWHj8198ZjL+cQFQ9HHggjkP5BzcQPlUuPYUqpD+Z
gXhU/zIxoZLymYJAeBcnut39fJzoV4zfeU7HsIPsVWUgGiMM/UsmMvoDkTH4
VYq9A/GrPRDnxl444eBJ+FIKwpjuU6cPNWf4D8Inf6P6vo0s/gnCgY32efxh
zP4FYfcUP73QTOIXgjBrbW5cArO3JkFomtuZusiH9NEmCId1+92arEb1As8g
tB7qs+7pfapvcIKgWdwyRC2T8McNwpr3Pb1OjqF4KDMIP7vH++bWUjxaEITQ
W/d2dSkx/Q/ChC/tJ6oDafzKIIzMnfr9/lmqvzQEISe631u7acTv9iBsHxh2
espZVv8LRmFIdcxoVp9VC8a/M67bc68RP7SCkTLQWCvkB6M/GKW+koGdCSz+
Dcakz6tGnfOm+NUkGBPspo+4mUTxjk0wMgL5y/SNiJ+ewdhRENliV0H1f04w
3gwaZ5N+htm/YKzcN/jv+6/kjzKDcbFCacMQC8JDQTD2jL/2cvszsvclwSir
ab0zoD/hr1Lx+3yzQLEqs3/BEDuOeGplT3hsD8aWsXrOz81Y/S0EEeHjE6+n
U79aCKQzdY9+0iL/oBWCttH5Os/MCb+6IVD1C35nWEX8QQimB2bldXNl9j8E
PWRfqhY+Z/WKEDz6U3rAOZ/w6RkCNd4+7df6VG/mhCBYOCX8ggPFi9wQXOkc
Vn4ogtm/EGypf9t/vgXJqyAEK97Y77QKYfX0EMw+uqr8eSX1V4agcOOhPboz
WPwbguNhM66KntN620MQtWBpWOMJwqtSKKYF+1+vzSd7pRaKjIwzh20khC+t
UCxOnjRnjzHZD91QDHxf1DNdneSLUBh13fgxndXbTUJRaaWXcFOP6LMJRfij
Hy/mLCB5eYZiavX0bzvOM/0PRYtWQO3eDWRvuKHoHzd29pVJhJfMUNT3i46+
V9tE9IfCzORHWLYyqy+GgrPvrdBWjdm/UMjiVq/wZ/6qIRS/Ej7NL3cketpD
sWzriO8Zo5j9C4NFCLf7kXnEL7UwbMl52BW8guorWmH4LFN17PaAfq8bhtQB
SwbN7zxB9Ieh/Gb6CLfZtP9jEoYlOTOeJwxk+XIYxi0oOZfqQPrsGQbOgIc2
x0pY/B8G4WAn3xUh1OaGYQ53Rsy47xQPZobh21Dt6H2vGP7DsNd2qTr3H6sv
h+FwzsTjj3ypXRmGukGrv7w5SvJpCEOtf+N4p1Us/wvDzI4hSavGsf3jcIxM
yLs2cjDxRy0coVszL4bISJ+1wvGnj/vTD4NZ/heOlFN9K5s7yB4hHH03GlgW
3KfxTcLB2f65zwNV8mc24cjJRBGPm0X0h0P7Nad1/F22PxOOHovN7cxOE764
4cgrbfMv0iL7khmORUt/LTDqT/F4QTi6Z1mMNd5F8i0JBzdjzrnpacz/h2Pr
kiS1lf2Y/QuHjsHgKc0iymfaw6Gcrj8Yc1n9iYMSo3Uvp16g+VQ4qOl7YOjU
HmQf1DhIN4+uuyqifEaDA5cKfsOQf6xew0EBrrlq6pF8tTlwKrAIzIpn+SIH
Vp7hmydPJDzoc1C/Tf45vT/xHxxU3zthJfcke2HMgaeJed679aQvJhxcEwTp
ZG4h+2TJQWmfuZhvR/GcDQdd2UZb1lgRPU4ceD/sKfx2h/JnTw7qklQdmrhk
HwM4GHuNf/sYyy85HORLnvzLbib8xHPweKZWlr0R2QMuB4Fl+l3DU8nfSTm4
OFlgGnGD1ds4yOvxeNWVElp/LgdDM+2HJPLJ3xZwoLbBdkLzaLI/RRwYbkyO
KlhI8irhYG5ob58/SbSeCkXbbsr5y2x/u5KDSYVKPcceIHzVcGDksKRuazSL
7zhIMjw8f0Ak8beZg3XBg8fXjqD4oF3x+xllj5y0iT8dHOytF0x4nET2RSkC
13+qXcx/SfmTSgTcTj72Si5m+WAEnveoafm8jtoaEdi4Me+iiTmLDyPQ8/2n
XyOzCM/aEVi1/k9UKDuvoRsBq4HVNUPaiP/6EWhrmphcfob5jwhsWr+72Wwf
2W/jCKiUB0YvnUl4MonA1DNvRtZ/Iv9jGYEja/JGvCui720icNzMwaspnvTH
KQKHV5UusGxl8VYE+vX/curmXwnJPwI9/hYdRAn5G04ELn9bHb7ChfgZH4H/
cvOef3pM8uVG4Fn8WMcFQ4g+aQRyY4oevl5D9jEzAltSxw/mdlB/bgTmFquq
WrH8qyACfX5pXVW6RPakSDH/rvEZHkNZ/SYC5nzb+SeaSV4VETC7Xf5jUzDz
5wr+VF9ONq8l+moikDq5y3haFtmfBoW8lLas7RhF8XJzBFxW3Cp+e5Hl+xGo
uqC86P4R6u9QzO/u6RW/n8X/kSgZmzGl+Q7NpxIJ9UsF51tNWD4YifItM7Uf
DCf8aETiS+bMin9H2H5FJN49S97qMJryVe1I1G7UsljKJf3UjYShhY9/P2WS
l34kzrh3KofXsfp+JLr9W/7i2T7iv3EkWq6NL+N/YfKPxOoPiSMDjGl9lpEI
u1dg/5dH/LOJRNrj7FmB7Uz/I2Fv/7D40w76vWckKl/EhoVcJnkHRCJxmrDf
rZ/sfEIkmkp/8h6vJ3nFR+Jr7LcpCSUkT24kTsd9rn0WSPG3NBKXBS1vvDcz
+UfCalvdCt0TtP7cSKQe+DHWX4fOBxVEonfbV/nkn6QvRZHYdf+P1InF+yWR
qDbym+FvTfyuiITe05nvd2wgf1MZCdN6pfpJcrK/NZG4sj1Ds1pI9DZEQltL
x6LmF7WbIzEsc9WXf9NJPu2ReBW9LviRNel3RyQeLDq9t+Eb23+OwjRllePn
JpE8VKLQ7+vD3qfDmD+MQlrlzK8/fcj/aERhinN4b6dXLD+OgtuBcT7Cclqv
dhSWLB70siSX5KcbhUN1TuXZHjSefhQ0ggx+TAkh/44oXAtpPKVvS/7GOAqX
9Herdw+k9ZhEIT6s/LhsH41nGQXr9tGahf1IP22iEGEunrZhHOHLKQrhp5vH
vbYnfHtGYWdoW7/B3cgeB0SBG9nU5jGC7R9EodNhR92IDYSH+ChoTlzwRmzO
8lFF/6/+/+17R/5TGoWDjmXOTiy+yYzCZFH3fw/6EH5yo5CaNFhgZ0v8LojC
Yt3+efIswmNRFASc0a9f5LP6fBT2mo0fsSeW+FOh4K/2w7u1mURvZRTMv/wX
XG9E9qMmCgsOSM03uhA+G6KwdZGe8ZsVZG+bo+A6tG3p3duUP7RHoXZQiYvV
QqKvIwrD3PemV72m+E0pGk4xg7r/ZvU8lWhMe9x6Mm0njacWjUHahVuMlamt
EQ2dWa0hd98TvVrRMBbsMh78hfCmHY2wz93qZDnkP3WjYfTlYq8e68m/6kej
Lu/Xrh4arH4UjcXPHv2Kv038Mo6GptDAu99cit9MotFzvHvaZF+a3zIaw57K
9kw6x+rL0ViqPW7jnkvM/kfjVrn70kE/WL0xGq/mzh5hkUL4DYhGV/7QT8Lx
rP4SDfcxS/7ztyF+x0fj+7nSC90bqD7HjcbffJWyRYMIn9JoqO3PmHh7I8kv
Mxp89eUurbNTSP7RKOrxtc6iH6tXRGP5sZ9JsW8J70XR2NLbcsjHRFa/i8b5
Y16cbObvK6Kh/NPjpt5D6q+MRvBP9xuXVjH7H40XEYkBv2YSvxqi0X8Y79ek
Hkz+0YhO/Xs15yTpd3s0RG6XDtxwIPx1REPp8cxuU+ew+lcM+vG3Bs9g9VmV
GBRvfGWXs5D4oRaDoPDbr3VHk75pxMBgttwouIDtV8bAbkXhmqWniV/aMaib
sW/5xP9fL4/Baq3Jxx6z+F8/Bm9uf+95OZLZ/xh8mrp5nNV5wp9xDDZp9Ntx
J5DtJ8Vg907z70dNKV6xjMGW2Qce/i5n/j8Grevlx9/tI311igF3i92MLddY
vhWDksqg4ac0CU8BMfi2M+yiLcMDJwaXV5xzuBtI8UJ8DFJUb+65OYjo48Zg
gNmOiT6htH5pDN6/Dj2bkcn2m2Ow/NOITb1X5pD8Y7D9ofBmHwvKnwtiEJN/
aEbLd9LvohiEmMuXzZtG+VxJDFT3zz/p7kXrrYiB+pubbuaepL+VMehzwOng
tqfkX2pisC7IL6a8ke0nx6Bx/N5Jm7+SPjbHYIHvnqAjc5j9j8GEqPYHe9to
/R0x+Dfhg7TnCpb/xUJ70a3G7j1IXiqx6JZSnf3pBssHY7HEf7Zzv0iypxqx
SHuGF7dbqa0Vi4MrgjrtIjNI/rH422FcOERAeNONxZqQ+uaNI0g++rEIvB41
fuB+tn8Qi56qTbfj84ke41gc7/ZjXsoF5v9j0cHXvDzoEfk/y1ikPp5WZDaI
nQeIhbXJ+QWSSxSfO8Ui5N+kP3a3iF+esUi8X6DhEEvfB8RC+bz36H9KlK9y
YnHt15XMD8cJX/GxeHLcsvfVg8z/xyLFa/aBV8nkz6WxMLx2N8//BKvPxEKi
G7TIr5H0L1fBzz05VzwH0/cFsfDgzFhrdIvoKYqFywP/39ckRG9JLNRv7+iu
doT0ryIWjeX2wteXCZ+VsVC6//Hi6DbS15pYTH7fMHrVCsJLQyxu9r8ZJNak
eKhZsX71edtP7mb7XbEYM0v9rbEW+a+OWHRqm/70G8/qf3Ho2L5+xfAY4pdK
HLTv7pr79SLJTy0O2XFPt51zI/+pEYcxQ82PvhjP7H8c4nzK9XzTiB/acWgd
+EiySIvsj24cdjVUnklRp379OFRcWe8yf72I5B+HlVtNh81eSef9jONw77zq
zzfppC8mcXBZf7NvoAqz/3Gof5rt4WtJeLWJQ1DH+sF12aS/TnGI/buoqTaV
fu8Zhy+GqTMdulM7IA4xB8d9G36OnV+Lw/qlQTsHG5J9i4+DdafxcLVqwgM3
DuUWIVEmGcQPaRwWGg2ZHssh+jLjMHvn/Du+frSe3Dh8mBx3fms58/+K9dpE
D/O7Q/QXxUFk/3HPJ2WKH0visPOA4+K0qeQvK+JwsGDrhOcDaPzKOFy6WnLR
xpn8TU0cNh+zO9/rKq2vIQ73r6l8iHxN/qE5Dt+ubJKfiWP6HwdOSrSH3Xvm
/+PQaaA243UGOy8ej7GetTOqthD/VeLR74n7u+3trB4cj/M3b258OJbwohGP
D+UdE3J703ha8Zh2vLVqYHeSl3Y8gjo3vlE7y+qF8TjQODE/0p/0QT8e47I+
nF3NzmcjHj4VrkObllG/cTyyfaKnVoLJPx7ryp8ba30gf2oZj43fZa9mpLH6
UjxeiVbnJopJH5ziscB79TrNzRRfe8bjqeXr1KtvSX8C4rE8Qx6ptpbsESce
yv56ya8Taf74eFS05fa668v8v4L+nf0f3cgh/ZDGw35Bja+POztvEY+9Vbn/
LrLzK7nxuPt6kW+SgO1Xx+Oe4NSj6a9IHkXxmP8hMTPwAzuPGY8X/DJuujvV
Cyvi8Vb8rufklbS+yngMXNLLlv+C+f94dOVefT4wgfS5IR7vv07e+rH+KMk/
HrmaTcfrO1m9Ox5lSm5tf4bSfB3xCD42pMxMzOx/AvKaY0MSjUjeKglQ1fb9
9+s8xVdqCUjJ/KY85zPxVyMBL3zERcariZ9aCXD4+nXVZCHJUzsBYW1JsqkT
WL08Ad/DXRZVJJK90E/Apol7X61j5/uRgLseqt7zXJn+J+Bl7djA5n/0vUkC
7q21GNa5nPn/BJhm+Ke0OFL9yCYBH8Z21AdPIzw6JcD5RUvU9DCyn54JKO6z
9sHeITRfQAKuf/boWt2T7T8nwL5Hw40GL9K/+ATMy+k83TKS5M1NwMUf+skx
bH9OmoCCI8WH0k1ZfS4BNds+LHD3JLzmJiBkrEn131qm/wmQ+2S9fVBM9qFI
MV9nTP/jlwhfJYr1XJ199nw3wk9FAubY9XyvJaHfVyZAs8+HTm1lsj81CTjf
Q/NU7lcm/wT8U/XYV7qa+NOcgHEPTEbdWEXyblfIS+tbnpkn0dehGN/Pz3ZU
IKv/JWKREwKMqig+UkmEMGBoi14e4VstER9M08beX0P1BI1EGEYhyOMC2x9L
xOBrbvcfTib+aCfi6DLXm07bqT6hm4jgEyMq9rD9CX3F9/xzt8UL2Hn5RFwa
tkG07CXL/xPxoFQ5aWE0q6cnIvDV8lMHDMj+WSZiTNa05T2nsf2VRJhnGWY5
BtD6nBJRfXru7Q0xLP9LxKjj7y6dSCL8BiTCXV/Wc4AH1Sc4ici5OzR/BjtP
HJ+In7d2jFp+g+IJbiK63D3TqjRY/S8RVa9Cp//TY/tzibgaPomTkEv05SZC
bcByp/ma7LyGgv4xrX4vLzL9T4Tj1DaHFHa+qyQRpbNXpXbTYfF/InRGpiUE
LI8n+SdigCFnudkVwlNNIra8z03Zy/KdhkQMeX5i5cKxLP5PROUvH4uzfPJn
7YkwSTqyeOB7sscdiZhQqTw3wJTJPwnTt19Uf7+d+K2ShN3bl7VV7aHzrGpJ
2Jll55yfT/5LIwmnt48YtbuR4g2tJJzKfL7cs4T4rZ2El6evjOnsQ/GHbhKK
n9//eSqX9Fs/CaapnS5jg9n+YRKOcLJGvNtC3xsnwX39wegeeSz/T4JKWc3X
2Z+Z/JOQ8u/Zs/ybRI9NEs7qVFQfBdV7nZJgofStZ5OI8jHPJDxauMbkqgGN
H5AE3Sj90/OesvMHivXd2P7qZCKL/5MwYaQkf+Yxsj/cJJgP9ahUfkj2S5qE
193XrO+XQPzLTAJP8Haf+UKST24SgqVuPRzKWfyfhN83L5a7SEg/ihT8OhXd
Y1YvFv8lYUXxh+xT71j8n4QE55Z7PW6w+m8S1nhUzdv9gvBao1iv9c2OZ7rs
PGESvs24F7ignNrNScjeYqjTVkj8bU+C0xnt8amPyB92JGGet55SyEl23y0Z
Iz72M8sfxOp/yVhVbftYKGD7gcm4WZ0/3D2U7ItGMnoZqLp4XWTng5JRtDzo
5dpxxC/tZFSL3U58PE/nn3WTceGo4eOWYOKPfjJcx4+d7pBN/EAySj49/I/D
zocbJ2O8ntXv9aB40yQZEn21f6WdtF7LZAw/VO+axu7f2CRjl2bRvgvq1HZK
RsoEq9FD15E/8lTQl7bLRIXdlwpIhrqHQ0piD3afLRnLT6/PGr2Nxo9Phmfs
1QAlD5b/JUNz8LPUySzelSbj+eCks2UxbH86GWPujh7R5kz6mKvgz94hsrFJ
VK8pSMb7V/d7Pt5M9ZaiZAQGV/e7VeRA8k+G09MNy15X0fcVyRCXbb4/RcL2
s5KRd/zmFc3N1K5JxuqH0qRD3iz+U6x3fVtc/+hMkn8y/pb5ecycwPL/ZLw8
ntWv2z0W/yfj2rgRa4JOsPOPKSgZWTzSrTvhRyUF3JE1q/zzaXy1FHSznV7l
1kb2QSMF/2atTBx6mn6vlYJdzzju9k+IPu0UjDr64fdlb7ZfloKDX/bnDb1O
9OmnIH7KgOX14TQeUjBmqlTv+TvSd+MUZPUfrj8rj/BqkoKlR3tZevrTfJYp
cL6+zvhQAttfS4GZUBYmqKfxnFIw/uCcHVNHsP3GFDzinjOuzyT/F5AC/ylv
RIsWsfp/Cp4WVnFHXyN9jVeMl/Rg5ms9dh4xBft6axtVNlI8JU3B0CGZy0dv
Y/s/Kej3ou7wvHLS39wUeCYcP5+Sy/x/CubusLFeb0n9RSlIjezz8fEhtn+b
glNbgsfpvHtL8lesf/K8n379CW+VKbh/9sXZDAeybzUpmHX1S8PE0+w+SQrG
3U7PP+lJ+tqcAtct3L7nB7D9bsV8/ZZyC8yoPtGRgnbdRiOuGcWbSqlw66d1
vv4w5cMqqciaNSHEKo34oZYKi3OGUzJtiX6NVKhtWtd3ygu2P56KOwNaH/T/
QPLVTkWv63uWP81m54VTocz3L3tyh/Id/VQM6XYuVux3mOSfCodG2b8rdcRP
41Rol4+3CmX3r0xScSA6a7INu09qmQqX0DeV9r/Z/noqkgbEfL+7hH7vlAqr
wcZxjsY0v2cqPqtn/zWIofN5AanwPbh6ZFoVO7+vaPNWGdd3Y/qfiuCt+nGX
17D8LxXGAtVlNaHkH6SpeBZXXSAYQ/sBmamoKtEvLlnH8v9UVB++2hh7gX5f
kIr9ffLOO4+j8YpSMX7rklsGZfT7klTwfu9YNqIn0VeRiqjPW49qdFJ8U5mK
Ct+I0XMuEz01ivnf7KyYO5D0oyEVR4oHzjhwh/DdnIryVT/DM+uIP+2puLKT
kxjRQvLtSIX/m81BS2+z+5tpGG/k9sI+m8X/aSiV5bgU/CL/o5YGw/1yR/4Q
+r1GGhJsX9hMXcv0Pw0iJbfHHd2Y/09DRsy7lmAjFv+n4XPNpvi3s8ke6Kdh
d1l20JWrFD8gDZlXXudkK1G8aJyGlKO6N86z+9Qmiv7OvsdDQtn+bxpUQi5k
ah5g9b80BHk+z/h4juyjUxq+6tn30j5O83umwbpb6ZDFjN8BivU+LNrd1p3V
/9Lg01vX59kyojf+//r1XRZuaCX5p8G3s+uUexh9L03DCtGs7V0NLP9LQ9Yk
s/l9exN/c9Ng/83F+/dPWl9BGjq23yg8ZEv8KUrDyJmceFUlsl8laZj7dVzi
xjgavyINafY9HFdVsvw/Dc9DTLa+/ET145o0ZM+aW2P7kPDVkIaXyu47Rl6h
eLQ5Dc9q37nWTWfn/dIgzVyQ2keb6OtIQ/3eZ9Vf2wlfSlyMXTR18aoh5G+V
uaiMbY9tG0zfq3CB2ev9lqnReS1VRfvtIW2dcWx/iIszZdxt2klkn9S54Hdk
Go0+RvZAg4sTj30lH5UpHhjFhdLKW8P3jGL7h1wUuRyrsWX4mcjFuMCy++pT
iH/aXGxZteKU5QSKT6ZxEZwXWR/7k+UXXIS4LzLbdZjs5RxFu2++vetd5m+4
uHPLacx/Z8j+GnDxZf7t+s8BZD/BRelOJ36HAeHZiItiSWa3tUmEP2MudAZO
dF9wiPRtHRfjJwSN0zlFeDThwtx+XN8dq0l+ZlxsTZvQNmgg3eez5CLwmG/I
q9+kP9ZcSLrzD5Q3sfsBXHwudHD7MZziW3suevdZJ744k+1ncRFbvuBR6X3i
txsXMx7bjllykp2nV/BHqFbRVEP88+XiYcmnYaccWb2DC7cXL3M+11K+FcLF
6gt+oV9PsPoXFy8X2yqtOEP8iuZi4HFDi2UF7DwEF1c0OD1fthC/krngPNpf
LdhM8uRy8X7F2pDqeYQfIRffHKXvg6aQfKVcnN1TkjN1B+UP+7nwK5SKEi9T
PpDJxaSIgWtXNtH4OVykz/p6u99tildyuWjM2j/+JntPIp+LqpjkQdlPWH2V
CxuVe89juhFeC7ngXjL91qs//b6Iixf65/Rcs0l+xVx01zeL09xB85VwMebA
rU/zrIjfZVxEKIv7xRqTfajgovZh4M6x7DzgXS6WHtxqHP2C8F7JxYcFw5+s
UCP7XcXFkKmffLL0WL2Wi+xTyZODA0nedVwMujB0n+E9Vr/losSjepTbbfKv
b7mwEPW7a6tD/rCZi1N27ekbX5D82rhoKjCyjX3KznMq1rfu3vSjtcTfb1xk
OboObLvH8n0ulv1b8m7zb+JXlwKPT9ZtVH3Azr/xUD0mZ8MvJZK/Mg9qQ0xH
OLH3MlR4SOq2/PfmxzS/Kg87O2LexrUQntV4sDAsxucMok+dB0lYbOSZCcQv
DR4u3/i0fc1fmn8UD1ZuT/qvZv5Fi4d9AwsuPZ1P9mwiDye2JqeVfyd8avMQ
dHB3ZN1wom8aD9dOmGt2GhF+dHkQ5I9uf/yOfj+Hh487U+8Z6NH4+jyM/Hsl
4dZ94qcBD4PU3uQNPU/2Ajx8vvE+e882iteMeFiw/NOrqF8sH+GB/1/zCXsQ
vet4aBDs+jnnKrvvwEOV9VClxI9C0n8epu7/a/K5nNWreYhRnTb/73Y+6T8P
b/1ulrzqy/JXHk79697H6yitz54Hg2nd1JWNiZ9OPAz5tDkII0k+bjwEjux2
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
El5dihLaeWs7dn5D8S1Vieb5e9InTiH7O6fEGq8eXo1akXwvKjHr8kiPv7tL
vHUlHAtbPZ78iv6frsTX8mvMJ2W/ZIYSZ9/u7JN+nsaXqUTrrxP/eNdA4vMr
Eb648O5jyW/3VPhTRZ+hp+Iknp8Sn+te8X//B+krR4k+d2f1G7+a5JGrRPXc
+KzKa+T8L+z14S+6/E4S70PI369ST6/RpJ9CJWbPen2n8z2yP7d4/ByVm1Lh
INlfiXg8qxJRkC77893j4fU0tcvJHrS+LBuPH+seetRSSrz8eLx4tqDKf/n0
/VXjUfrIP4Gt58vz/3ig79pe9WtR/Kobj6g/6plT5HqrQTw2/Lw99vVrss8m
8ei6o2+fDjNI/83iccU984vOT9b/xMP78e/Gtztlf3k8ZppfRlQqRvptH4/8
A+FzbjSV/h+PYspH0U1bUXzwjsesSdtTkn6R53/xGHDx7pQa8rygdzzajP0Q
kviU5nPfeOR+72UI30/yHRSPTs0+qPJekzyHxeN0zMi2V/+i7/OPh4dXqdfD
J9B6dXQ8arudH6o9RvFlXDxGTXoQ80meRwbGY5eb/m1xef4eFI++czt3eCfz
wcHx2FL9ZuqF53R/VjzcYus1HVuf3j83Hv+17OlR+IretyAe8fUK9w9Ilf4f
j/txhYbKI+X5Xzzudj2bN1L2g62Mx/amOb9XlvFjTbyIB+OavDop+3/iUer7
is2+myi/uDEeJSP/3LTmncTrj8f1ku7as5n0/G3xuHP7yflYlZz/41Gw3Hww
5Jv0f3H/6HHbEon/qYrHwIIjo4JXy/1/PEoE+Pc7JfkpTcLenrdu+qwe5TNt
8TiU/avj3m7p//G4VWOY7+RXsv83Hr3etPultyeNJ0n8/4+O74p1pPV2cjxW
zPizu9GXvj8lHjtubl2grkvflyr+7/Nw1+s0et65eFj3vu/3No7WmxfjMVd3
anWCxCe9Go9zpU+MniDP99Pj8degWrvmyf6rDPG9AVPHWJ7Qei0zHic6pDfL
eST3//EwnXfXlYmh730aj1rmtVVf5tP4XsRjun+44tu/ZK858Vg5cut4U0WJ
7xSPKt2b3px1lOJpntDXsBbt+m+n+/nxCBh0Y0B3H/KvQvF9YzcfKFZb4n+r
MOxM94xu8rynuAq5htJD27el/UUJFRyRMdd3rSd5lVShs2LV93LXJF6QCtcD
mthKjaT4UVqFjUrPNcmTyf/LqnBX490nRuYzy6sw6YL9aocZNN9UVOHv975u
Ra3JniurxPrN8euCspSPqqpCYfNTe+rnkXyrq9BmuNJ6fiH5Z00VxiT+XXug
zAfUVqFa2d8fdpL10nVV6BLYOHxgAcnbQ4WRH26HXV0h8WvF+18mBo7xp+tG
KpT8I6pHoVHmI1S41fv+1ys7aT3pqUKJE92nK1ZKvDshn4I7/3aT/WAtVGg1
bfqoukPo+71UKOe4kWupSfbVSsirzN2cA59p/dBahXPH2id0k+fDbVXYW2FY
ySEDKN62V8FvatWYVfL8sqMKQ6/MjT5bKPubVYhMVf5T6RfSR1cValc+Gblv
gMx3qrBkUf/QladoPD4qFO+TNsQvWfJXqdDxUNwdv3Cyt54q+Nf9tYZvD3ke
okLb1KLnuftpPuwrvm/op4iLkp/eV4XM3SeGXZXxfIAKb1/VOZTYWJ6XqFDJ
W5UVJvGnh6jw55PhU4b3lvhOKtwbezi8lz/5l5/Qx+3xPaJfkz78VeivPHc5
vjHtt0eqkJOzs+xBq4yvKly5pApcIfFmAoT9dH32bFYOzQ/jVDh7v8ja+Ant
nyaosDXFbZZV1p8FquA7sq9twCSqz5iswr694yJeXiB5Bakw4Le2oz8epPlu
qgqVC1sF/ynrT4NViCiZ3evbPvLfGUI/QV/ySgyW+zUVVGeWBi2SfD4hwt9s
G7Kt/cif5gr7Wdv51oYOJJ/5KpQd3jrggawPXaBCUvJlvzw3sqdFKrEe+ruJ
1l3Wd6uQ7dk1LEHisy9V4fao2dvmTKPxh6rQ6cVe29dOtJ4IU2FIBaNzyAuS
/0oVLr2vMj2lLa1PwlUY4X3decBC+l+jwvi/3wSf2UbfG6HChJWtPO5IfOdI
FdZvfJgdIteT64X/T9Gkru9A9rFR6L9V8b8RRfYepcLBE7/0TlpC9rdZhaeb
19YZuo2+P1qFlQcci2Y3JP1uU2HqiuhzhjL0vh0qVC2oVmxuPNnrLuHfw3eX
ipL4VTEqmH77d1dDO8UXhQozrgx+UjSX4rlSyKtV4Mh6GyifoBLy/Fiqi2Mt
2ZtG2E/ggRp3u1N80amw5qlz8rYWFH8MKoyOnLelWCb135uEvy/9afFGye9u
EfJpMGJkteN0bRPyS31TvGck6d8h/G/Qqm+HAmT9urj/e2WdexTpd58Kl3+s
7uhZluSToMJfF1/6vipN+khUYZCiveGIhewzSdhr6Uqx50aQvR0W/vX15JwR
st8qWYX2kcv6OcIpXhxTYdr+0Sve/x9/mrDvfSeTtn+n359UYc6I1Y92S7zB
VBUuPh2/pyCA1gtnVGj+p7XRtCESr0aFb2ndp6n70PPTVAjL1pdUT6Triyq0
eLyuYxW53rqsQjPbmRORtWg/eFWFE4PC+wb4kX9dF/5a4fXTN5XJHtJVUDe2
3Okk9/u3VKhYbWbZT270/wwVzIOfT6uzm+R9V/jjmbM/rbpB68dMMb7hPftk
fCR5ZQn7qN0717OAzrMeqvB6eF7rjyNIH49VCCz1fGmPkyT/pyJ+xjkKR0p8
pGwVqqyN6BRVlfzlhQp9R/7RZ81xktcrFQ58+Nyjnlyf5Aj72tLJZltD/v1W
hQdetUq/K5T1O0Jf9SwRW2Q/3QcVmtxb1e7Pv+g6T4Xzk/99UbCf6r8+qzCx
7cn6b+003+arEP29QsD7dcQvVKBCRqWsHinjSJ6FYr5M+LGwocS/LhLzz+es
LaPbSf5PNZqc+pHb9iCtB4qrcaXP9KSEWPK3Emr8e9vj+PznZB8l1Tg/oViF
59dkf6Aaczcmd/heicZbWo0VN8Yt8suS9YJqrFw5+M/Z08ify6txrbgtyBZN
9lRRjbqh1tjElhRfKqvxYq1flX0yP1VVjS+Dv9x+HEXfU12NyKISKclZ9P01
1Zja53vngPUkj9pqtC1hMXpWl/lGNT51nHglNpye56FGQfz10WvaSfxiNYzb
lxY7u5r00UiNylsPXDnvQ/bbRI2wNlWG3j1M4/dUI2N/7ETfU/T8Zmq8Mfme
855F9tJCvC9s8Nq1Mp54qTGswif4+NPzWqlRx2/cLkdHsqfWaqTvKN6u+RiS
Z1s1TnZa+2t+afq+9mqs2WM2TS5O4++oxrs+P7R7IOsb1Gj488SF2xfS77uq
kTL/r5gFm2S+Q40ShtGq8u9J/j5qLLu8odTsCpJfWrz/1LLTlXbR83uq0WDn
ngN3/On3vdV4tnPmyAGlKP70FfKYZvbwmUr+4qvGW39D2V1r6f4ANfYOajdz
4A+KR4PUWGyd9Dy8Fd0fosaDV1ktNtST56fifR86DDC3o/jnp0bwi25fn10m
e/BXY2jZVap8JclvpBqaxhtHV5L74dFqRFy5Wn31eXpegHhf9L4RJ9bR/DhO
jc7jvnTaq6DnT1CjZ6/TLf8bKflD1PA9EXl12mL63slqbDoZVz3yV7kfUyP/
8psOU85S/J+qxqKqkY6A/+vPFPb0U9GuphVJnjPE87rE7nkdRvqZpUaZyhUO
l3MjfYSoEdO8bHJAJYlPKPSX0zp/6t+0fpivxpi2njn6qzKfK/zt0Zh92b3o
epEacdUc631aSDxLNRKMZ24OOkH+u1SNdisTyrl7y/MeNTqUCwzXPKbrMDV6
Teias0P2068U/vvE9HLHNbKfcDUGzRlzqn0d8s81arTPe9luyyh6foQaF5RD
NmpPSbxcNe4bOjvqmGk+Xa/G9FvzVnvJer6Nanyu+GbTo4Pkr1EivixOLl3h
m9w/Cv8v6u+u30P5mGg1zoUO6v9dzu/b1MhKDT+rvEH62yHix+EG43ofkPgy
ajTWtzd9S6frGDXGf+4YFuxN84dCjajpP+sfV6H4r1RjfnZ4uXKJND+o1DjR
5pzfsOtkPxo11g99kt12Mfm7Tg31oMd7YiW/sEGNfbkFnp+2SLxvNRytv71z
niP9WtS4XONCr8v36PttQn57V3S485TisUONAeXfDYk9R/LdI/w198GHLxK/
YJ8abTrOik74SvcT1OjXr+qCJ3J9k6jG2UVlkv2KJJ+MkG+3oiWhh+j9h4V9
dF/Ur15/kleyiKdzl9XoIvk4j6nxfJZn/uhJtL5JUWND4E8HfOT+8qQay1MD
hwSm0v41VdjnnPwmO5rT+vuMGG+7xYtqSX87p8aqyF59xo6ifsg0NX5f8blu
sDw/v6jGYN3a5om/kL1fFvpy5l+Mnif5utXY0kP/V0WJJ3ldjD9px39zp5C9
pov49/vYmHaSv/KWGuY1A9wuXqH1ZIaIl5u87lfdRfq4q8b+yGxn4nLZb69G
5pzp1T060f4vS9j79r+mZiTJ+hs1brQbbPQ/RvJ9LPwXj2dGd5P9+GL+K/pR
5+gOel628Lc1uz8s2i7nfzV+LPJfff1XWl+/UmN15JdDr/fR73PUiLbd2bTS
Sc97K/7fMv1lwRKSX66Yryat8Bixne5/UOPqzkyNujeNJ0+Nr/+kDq1+gZ7/
Wcx3q8uV++sgxb98NXL2RdRXGqlepUAN1eGa9tedSR+FatQ6EHx6xb+0fyxS
w//A4mI/y/ozNw16/u2ObfXJXotrMODIb5aAAtkPpIFO/6qXugrZb0kN9nmt
9jh6kfzXXYPmyoOVc8eSPZXWYG2Pa/cKytD3l9Vga8fSo9Lu0XV5DXI3RTdY
tFmeH2jw9uLg1GM36bqyBji3LPOZ7I+uqsGdcjsMmdfJX6tr8CDN/k/L45Tv
q6lBcNxNR24oxdvaGjScuLNRWYmHXleDb6XNN8dL/AQPDepbs31Kj6HvbaBB
yMTs0PWjSB6NNLhwLn/e1yCKh000eFyjZOQniR/vqcH4OW4eX+V5TzMNsrZn
pOXJfqQWGszY8rSUW3WyVy8Nqm9M/OduE7LnVhqUrTX5syFJ8qNoUKd8vQ1j
i9N42mpwtMKSSYe+kjzaa5A0Z2vyrEiK1x012HK1oinfKvm0NDB6flrnLs93
u2qgDLm9u5/M93prUOvR/Fkayd/mo8FETULA9IGy/0ncD7ww5n083e+pwY2K
K3bGTyD999Zg+5h3O1L8SF59hf77LM5vMlDiI2owJ3yIqlk+5QcHaHDrdnAb
j2e0vh6kwW/m37ZuWkL2N0SDs8sWBr5uL/HTxHjmFvwX+Z3mYz8NCjL7F5nn
03rEX4MxiV9zK/8gfxmpgc3z3c9Tf5V4sBpMXrQto7eVrgM0qHv70qpftXL/
r0HchNcmnZK+f4IGl+ZtbxjQSdZfanB1tfu01Vn0/MkauOtv5k37Rc7/GnTb
erSxZSfZ41QNVsxcUL3VdLL/YA0uX+iQrDtO8pwh9Hl+8KMH10g+szS4d/LR
xE4PaH0RIvRTqtX83U0kPq0GnxP6fnNOoPrG+Roc/rPmrqtz6f0LNHg4L6HU
T+vJnhYJ/7mgOKVzk3xmGsS2G/licBTFj6UaNF5Ytc22xRLvRYP9tdxKDHCj
+2Ea+AUnbpqokfhPGnitedY3KJvGH67BrAfFtqc6ZT+4BjW71C937wpdR2jQ
rnGGrXoq+XOkBh36VLjgfoHsc73Qx5Sxzc+UkudF4v/Pm8W9fUf2EKXBct+e
nlk5sn9MPO/YBuP4XNJ/tAYVKqZNH/dE1pNq0HR/sm6hO71/hwZlpsypVroU
yX+XBtnpTaZ1G0/5mxgNPMP+bfc0UuLNaXDsWtkmYkH1/6+VGpyacbrjSUj8
bg1M6ztk3vyZ3qfRINC/Z6uffpd4NBpUvn3s/Z7Zcv+vgaPu/BXd/qb4YNLg
+L8+lbN9yP4t4nl/HB/iOEbXNg1WXbmXuH8SrZcd4vrxk7B2r2X9igad4mb6
xJeh9eo+DcLjhzSztiN7TtDgS9NPM4q0dJ2ogeKfbwOWg+SbpIH3+4MfLjen
+HxYxJu+txIaFsh+Vw1OdjBfXt+Pro9pkBoR5v1unOSP1uBgv/9m1vhN7v81
uN+mDEal03lnqoifU0MHV5H4Nmc02Blep+nxWmQ/5zT4K7R3tYzdNL40DaKR
eMlWhuLZRfH8FkuNKyT+x2URb96vmFF1MOnjqgZtY7v9daA45ceva5Cj6Rs/
vzXFi3QNWt793mbDWIoHtzQIeH0nKNSN5vMMDa5odk6cJfO/dzWIOrbZEJUr
z9uEftpYzPbNNB9naTB90nHNRJkPeajB7Nndz+eXJXk+Fv6w/sDo50dpPnkq
4kGYqmSPheQ/2SI+VR6wVRNC73+hwbJhd5p8akff90r43xJz6OA5pK8cYU89
Wlt2yP6ht0IfBY88E45LPmYN1gxVty4ziOz5g4inqjWb9EUknzwRzzKXNJ+8
mNbfnzUI+9LrrVXiU+eL+JR5JFDRndZnBULeiy6PSawk+/2FvRbMu2/uQddF
GgzzvN7HNJHs102L5V6THxT0pfEU1+Jq2OVRbjH0/BJazHi7umenSzS+klpE
B0dVynoj+SK0+Dnn3T9P71F8LK1FtTpTz+q7SrxQLex//Ji2ogutX8prsTH5
9wpDfCS/sHh/s59qPyoh538tdv8Wum5YO7KXqlp87nl15+XuJI/qWnRv/frR
m19pPV5Ti3L37715JvngamuREr15V6Oq9Py6Wgz5b9Xna7vp+R5ajI3+c1Wq
3O810MK3U8uht2uTvTbS4sap893GdyB9NNHCdDDC+bQsxQNPLf4dvKHqvk90
ntFMiyXty57s9BvNLy20sHTuM6rBIJKXlxZPNx6q6Z1Hz2ulhf+NhtXzm0p+
RC0a9FsxPc307/+/biv+n/Fi2CKZn2mvxaO3f6Z8lvuLjloMXbCu/p2d8nxT
i3uKTr+s0lO876rFm3eWkidlP5y3FnE+T45OkP0RPlp80NV7lfdA1j9r8a39
nfmXZH1qTy1Ofks85ifn495a9A4Y4zMrUub/tdh76fXW3TbZH63FuBfJa6wW
8v8BWmxza6Otki77pbTo1vm/fq/d6DxpiBbH7pc+OK0L2fMwLdpunnymz0z6
v58W7dOCFm5fSPbnr8WUjz6rNgVRvB6pRebCrV1eyPl9tBZvtXMn+RXR7wOE
fGr/nvxO1juN08KrrVfCT7vl/l8L96DPh4fJ+vxALRYsya6dc5vizWRhbxer
VZtbm/QXpMXgQnU5UwWav6YK+WxOv1V9BcX3YCHvDj9WRst6lhlanJ34T/JS
2Q8wS4vRFVuM0g6i8YVo0etS8xHDb9P/52qxZkCnT/Xmkz7na5HeUV2j8WKq
t1kgvqfxvTJXalB8WqTF7PbLx65fSd+3WNjH826ln4WRvpZqcX/wj0lvv9J4
Q7XYc23M9PVD6X6Y0MefS0f8fYv0uVKLhBZNd5VcSL8P16J4k1O3tx+Q878W
v7+5Yvoq+dkjtDj/5WiFkXclPoQWa0Mjbiiq0/PXaxFVcuTO/2Jp/7FRi0h+
P0qLi/z/m7VowZ8frcWPxuz92/7n+3Zo4c2/f5cWNj6+GC2y+PgV4prLR6lF
CJefSosvXL4aLR5y+eu0WMf1YxDv5/ozaRHA9WvRIo3r36bFK24fDi2Suf3s
0QLcvvaJ8XP7S9Dib26fiSLecftN0uI3bt+HtfDj9p+sxTvuH8e0uMX9J0WL
QO5fJ7XoyP0vVfgj988zWhzl/ntOi67cv9O02M79/+L/xIfL/xM/rv5PfLmu
xXEef9KFfnh8uqVFHo9fGf8T3+5q8YzHv0wtrvH4mCX8mcfPh8I+eHx9/D/x
96kWrXh8ztbiTx6/X4j38fj+Sgsdj/85/zM/vNUigs8fuVoY+Pzy4X/mnzwt
+vH56fP/zF/5Wgzj81uBiE98/ivUogKfH4uE/fL5002HT3x+La5DDJ9/S+hc
5+eSOvzH5293Hfbz+b20DlVd5n8dil6z9UF5HXby9UNFHabz9UVlHa7x9UdV
HUL5+qS6DsP5+qWmDk6+vqmtw2G+/qmrQzu+PvLQYRVfPzXQoRZfXzXSYR5f
fzXRYS1fn3nqcIqv35rpMI6v71ro0Iiv/7zE9/P1YSud6/qxtQ4l+fqyrQ5N
+fqzvQ4z+fq0ow7BfP3aWYdEvr7tqnNd/3rrcJWvj310GMvXz9ChOV9f99Th
NV9/9xby4+vzvjrU5Ot3Xx2O8vX9AB028/X/IB2m8P3BEB128P3DMB2+8/2F
nw5ZfP/hr3Pdn4wU8uf7l9E61/1NgA7V+P5nnA5d+f5ogg67+f4pUIevfH81
WYc1fP8VpENHvj+bqsNqvn8LFtd8fzdDhz18/zdLhxS+PwzRYR/fP87Vue4v
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
DPiN93/lCPvh/WFvDShKYf1juWK+4v1lHwwoxfvP8gxYyPvTPgt/4f1r+QZ4
8/62AjG/8P63QgNG8v64IgPa8f45NyO+8/664kY04v13JYxYxPvzShqxkPfv
uRuRyfv7Shux3qX/z4g7vD+wvBHtef9gRSOMvL+wshHPeP9hVaNrf2J1o2v/
Yk0jxvH+xtpG1/7HukbX/kgPI8J4/2QDI4J5f2UjI6rx/ssmRph5f6anESd5
/2YzI47z/s4WRgTx/k8vI87y/tBWRtf+0dZG1/7Stkb05P2n7Y2I5f2pHY0I
5f2rnY34qSfrb+0q/s/7X72NuM37Y32MSOT9szCixAvWX9tTPI/33/Y2uvbn
9jXiFu/f9TWiiPf3DjDiHu//HWREOu8PHmKEO+8fHmZEGd5f7GfEMt5/7G/E
Vt6fPNKIp7x/ebR4H+9vDjBCzfufxxmxkfdHTzCiIIb1TwcasY33V082oh/v
vw4yYjvvz55qxGjevx1sRB3e3z3D6Nr/Pcvo2h8eYnTtH59rRB7vL59vdO0/
X2BEf96fvsiIEN6/vtiIT3Gsv32p0bX/PdSI6bw/PsyILrx/fqUR13h/fbgR
3rz/fo3RtT8/wujavx9pxFDe37/eiJK8/3+j0RUfIErYC8cP2GxEW44vEG10
xR/YZsQvHJ9gh5A/xy/YZUQqxzeIMaIbxz9QGFGZ4yMoja74CSohP46voBHx
geMv6IxYyfEZDCJ+cfwGkxEnOL6DxYgvHP/BZsRejg/hMGIex4/YY8Rqji+x
z4gWHH8iwQgNx6dIFN/D8SuSjCjP8S0OG13xL5KNyOH4GMeMUHL8jBQjsjm+
xkkjJnH8jVQjdnF8jjNGeHH8jnNGHOX4HmlGPOb4HxeN+JPjg1wW/sDxQ64a
UYHji1w34j7HH0k3YinHJ7kl4hfHL8kwuuKb3DWiJsc/yRT+w/FRskS84/gp
D42YwPFVHhsRwfFXngp5cXyWbCMucPyWF8KfOL7LK+FPHP8lx+iKD/PWCAPH
j8k14neOL/PBiB95DH8mT+iP49N8NuIdx6/JF+/n+DYFRjzk+DeF4n0cH6fI
iAyOn+NmQjGOr1PchEccf6eECUc4Pk9JEyI4fo+7CUs5vk9pEzpy/J+yJoRy
fKDyJjR2wQ8y4QDHF6pscsUfqmpyxSeqbsInjl9U04SRHN+otgkmjn9U14St
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
fsAooV/OH7jZgrOcXzBafD/nH9xmwRPOT7hD2DvnL9xlceU3jLGgN+c/VFhc
+RGVFqzi/Ikqiyu/osaCFM6/qLOgLednNFjQnPM3miyu/I4WCyZz/kebBYs4
P6TDguGcP3KPBfGcX3KfBRUvMf7JBAsyOT9lopAn569MEu/n/JaHLYjl/JfJ
FnhxfsxjFvhz/swUCzpxfs2TFlTm/JupFld+zjMWaDh/5zmLK79nmog3nP/z
osWVH/SyBfM5f+hVC4I4v+h1iyv/aLoF7Tg/6S1hD5y/NMMCA+c3vSvsg/Of
ZlqwjfOjZllwgPOnPrSgAudXfWzBYM6/+tSCLpyfNVvIk/O3vrC48ru+siCA
87/mCP1yfti3FoDzx+ZacJnzy36wYA3nn80T8Y3z034W+ub8tfkWV37bAgsa
cf7bQgu+cX7cIosrf66bFRs5v25xqyv/bgkrdJyft6QV/py/190KA+f3LW3F
bs7/W9bqyg9c3vo//MFWtOf8wpWtrvzDVa04w/mJq1td+YtrWrGB8xvXtmIY
5z+ua8UfnB/Zwwor509uYMVCzq/cyIpgzr/cRHw/52f2tKID529uZkUm53du
YUVHzv/sZYWF80O3srryR7e24jLnl25rdeWfbm9FX85P3dGKNM5f3Vnoj/Nb
d7W68l97W/Ef58f2saIU58+GFZ/cGb92T6sr/3ZvK0I4P3dfKwZy/m5fIV/O
7z3AipKc/3uQFds5P/gQMV7OHz7M6sov7if0x/nH/a3ox/nJR1rRg/OXjxb2
yvnNA6wwcv7zcVYUcn70CVZX/vRAoQ/Orz7ZipWcfz1IjI/zs0+1Yibnbw+2
uvK7z7CiBed/nyXsgfPDh4jv4/zxc4X9cX75+VZX/vkFVkzl/PSLrPiZ89cv
tmIB57dfasWUFVXrbq4vz/+teJPhXWtbP1rPhAl/HZaa1Vv2I620IqVy2IFL
cr4Nt+JO6+4tzivofH6NFYf2PJz/0p3WHxFWbFtdrMtSWX8WaUWd0uN3PmhO
9rbeioYLh57uskme/wv5FhYztGlF3xdlRfbmlOJPvCV/pBUHhz+4un0x+Wu0
FW2Pvq+cMori7TYrEpMyAz1KkP/usOKJW5P591vSemyXFflbI0dtM9F4Y4T+
9k/+kFKJ9uMKK94+tEwPnEv2pLRia7Z7P5NOzv9WvIrYcjnqK803GuE/hWnK
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
9jlL41PZkXbRfaLPRhq/xg7P25lTWrWk+U0n7v86qNdCOb8Z7DDeeZLX9Fk2
zf9ivPbp2U8qkX1Y7FhT62Xj+i8l/r/wt0o/BxT9RfHVYcfxe2+062U/2B47
ylbxn3i4FM1H+0R83HdrazmZf0yw49PDLtX/TJPn/3Y06J7zYUwJWf8n/PfG
sxXLbtH9w3YsnxQypNpZel6yHbGnf7EMeknx4ZgdR97fG/EsQ57/i/hwqOKb
oSVJfyftmPBTcEblfeSvqXYEnP1edEnuf86I7/VYEWqeQ/Z2TuiryYTdk+fR
89LsyIzd8NumhhL/346f9gTv/XxK7v+F/W6/3yjLRvnfq3ZY9Q/3Nm9I/nLd
jvztL9ZVeSf59IT/jAuecHpUNM3/wj8HWA51kuvBDDuG37ZfyC2g/9+1Y8uW
DSPiZf9Vph13Poba1g6W+H/i/ov3Hxb0o/njoR1L1m20rxhN9vPYjuoRtZ8m
bpH5f2E/vrmHfZ003mw7+kZFtpr7XfJz21Hht2nx00ykz1d21MDeQ/f2k73k
2DE6qGPyt0my/1/ot8/nPsq35M+5djzZufj2YJlf+GBH3oyOoQOGkf3m2fHq
0ZYN7kVy/29H/8n/dnkXS/m4fDueO6pvMd0n+RbY8fbN6fSaybSeKhTxw/7E
22cO/b7Ijn/OWhr+e8pM878DeyqePJTWmJ5f3IGmhzK/1nOn7y3hwD+Vdsyz
yn6Nkg6UOZ0+R7Wa4qO7A7fDnN9UZST/nwP75ztKT+1EzyvrQKeXo+9cXCzx
/x3YOf7fH7mFsv7fgXOfs5LztlI8qezAgezo4cvPUfyu6kC1Y3qzXw36f3UH
3pwvHDvTTeL/O9BuaVSVo7IfrLYDmY6ULF1fGn9dB95H/v3Pwer0fR4OHJna
+VvaQfq+Bg7sC9uytGVNel8jB57e/qt1q700/zZxYNqQ0edXyvW6p3heq4WR
Zy7Q9zZzwHZ+6emQ/yi/0MKB3fuLhp1Sy/2/A0uCB5Sud1Py/zkQ/erv1ult
JX+pA8fN58YVPllD878D7748a1DHSvNTewcmdL3w25eZNJ6O4vuLjn/6aqD5
u7MY/5mol3kNKL53dcD+x6qagy6SPXg7sGL+uvqVv1I88XHg2pRSd1/8JvH/
HNgb53stKZL8p6cDu5YMHdn1Mem/twPxjZ95ND9Gv+/rgOrFqfWz7pE9+Dpw
+FCF7xdkvmGAAzM3pr1LaU3+NEj8/s6DY/OnyPy/A+vmXri4/BXdH+bA0dcx
UQ4tPd/Pgd9tne8teEDxxt+BE8s9zz64I/F/hT2YSnle/krr89HCPuvbnxWr
TOvFAAeybu6qOvE4+fs4YY/LfniviyZ7meBAeJ1iR18co/77QAfKv/Nbijqy
/t+Bbl7FqpbwpfgQ5IDzR/FS88zkn1MdeLvwbMqj0uRPwcKey3p1KhpP8WmG
A78pioa9Py3xfx24NK6a2/q3tJ4PceDB1r++tD9O9jZX2MOvLxxBIPuZ70Dn
Xu8erS6QfM4OfDjzWjtnrOz/F+Ov+MRa7SDNr4sdqFN07N/zlyX+r/CPiVGX
vNuSPYQ6sNVWL/fGc/qeMAdSHX/W/tpb7v8dWKyZGp5Zg/Yf4cJ+AjZuOv2J
fr/GAX2FPUdud5L5fwdGz7pVrn+BxP8T+jvzbvwAub9fL+QRFhG+vzHFw40O
jPdJxvt4Wf/nwMT8tU/XvaTxbnZgfbFe3/xuULyOdqBilRG1guMk/48D6R66
IQVupJ8d4ntvDRpa9orE/3Gg548ez/2+yfy/A+ppMyvkXKJ8msKBjEGXfjPf
ofEpHXi5p/ekiNsS/8+BhMm5cUOz6P0aBwK2l7k4qTnJUyfkFXKz7qw0mf93
oNKharE+l2j+Mjmg3Lux6bIlND6LA5Vbvvtb3Zbii03oo0uNW30qyv5/B/pp
AnzXZMn6fxGvri2ZWP8kyWufAytL7CgT4UvrowQH6inPv+s4hu4nOvC9k/+6
2hNovk8S/++c2HamluR12IHtR0bklSxH7092IND90r21xSgeHBPxeu3GStpb
JK8UEe/UikZna9DvTzqwo83HtDJpFE9THfBcVWFg32x63xkHFiXs2r7+KNnP
OeFfc1J0LSeQfNMc+Dht1+ulLST/nwM5fQaG3uxI8r7swMLriptb/ei8/aoD
x2qu/PmB7Je87kA5u8+onnvIX9MduN99kluf/RL/1wHfQwuXf3SQfWY4EJL1
QPde5q/vOnA55V31vdNoPJkO/Lmt4rnsDIqfWQ60uDHJo4eT1jcPHYg43eX6
CVl/8tiBEqUG7Tgs+8ueivEkTJn1uYbs/xPxvXi08nS27P8X8d2yIPTRN7Ln
V8LeNzXOqVSB4lGOeH9Qw9IT+tP3vnWgceOlDZvvpfiX60CzCk1md9GT/j44
kLxTVWzgBsn/J+xvYnB0vjetFz478LVT2v33i0le+Q6knQ/2+HU/2WOBA6Gl
bUEzL8r9vwNLZ3fz/8tA8aJIzAfW8PsRXyh/5eaEf78+e0c3pnhf3ImGS1Iv
V5X9NCWcSJphyZhUjORX0gm3vudrzKlL+nV3Ys+NBTvfliB9lnZiZ76qdz0L
vb+sEwdTN49ttoHsvbwTPZ7qmzVvSPKu6ESfdoMX9qxI821lJ65E5EbkyPr9
qk7U79aye78qZD/Vncj45+7Nj7ny/N+JGFWXqFLNJP+vE3fvPJ+Z+Zus/3fi
YYnZE+ock/x/TqjadMiYdI3iWQMn7oQOC3jwjvY3jZzYGvTTtH5XaT5s4kSH
jw3XD5X7T08nav6+MrKsGz2/mROfx59J0E8i+bRwYmrejPnfvpD8vJwwePp3
Kv0L9a+2EuPd3mZ84UPyv9ZOLPhauHd2GD2/rRPbr3We0XUI1ce0d+LvX1r/
fVfWf3R0Ivpa0tSc4rL+z4kJxU5U6Z5K/+/qxPu2QSWb2Wl94e3Eorn34t8m
kj/5OFEm9JCqtpK+D07Efy1tD10u8f+c+M/c+szBpWR/vZ3YceyxTutG9tJX
jC9Vu/TYcdo/+TrxJmN45NN25G8DxPPWPn+5rLes/3Nit9usG/nSfoY48e+k
rMCWA8mehznho4iZFl2F/MfPiZTduhl75Pzi78SvvWdlBUl8pJFiPE/8lv6R
Rr8f7cSJiSvXr3pJ8g0Q1/2+rFBl0vpgnBOm5AqtlBck/q8TmU8mnutQgfwt
0InzC1bVa3+U9DHZifD3AeaaX8m+goS8v03oWetnit9ThX8E9DjvLeUdLOyp
lPXg9IYUD2Y4cd1w/FnEIbKvWU7cSOmcnCLrv0OcSFt3c89WD6qXmetE/61l
e2Ysp9/Pd2JZQOd1RyU+9QInFm7p53u/mMT/F/ag6V9nUzrJd7ETuVW1Rd5r
qb5hqRNjK/uum+Yrz/+d2Fh+7aeLPeT878Sk5U+uBn0j+ax0QrlG3TQwSOb/
nfA83WjM8jw5/zsR9Gz3j2OZEv/XiWLFEiN2yP78SCdKRC9KvXWB9LHeCfdT
c3rdlngzG8V4y7+6Uu4NxYMoJ8oPH1S6hcST3OzEn4k+LVSTaH6NdkLfpnHo
mE20ntzmxJwyDQ7eN5B+dwj7bv3s//X03fFcfu//Mlo2qTclI4VERSUpXYUo
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
4h/7tm0JEcb3TxD/bKG63/BG9eL/B6clXbI=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 5000.}, {0, 0.8451849596495239}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.674918875960223*^9}]
}, Open  ]],

Cell[TextData[{
 "Check the relation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{
      RowBox[{"n", "(", "f", ")"}], 
      RowBox[{
       SuperscriptBox["n", "*"], "(", 
       RowBox[{"f", "'"}], ")"}]}], "\[RightAngleBracket]"}], " ", "=", " ", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"\[Delta]", "(", 
      RowBox[{"f", "-", 
       RowBox[{"f", "'"}]}], ")"}], " ", 
     RowBox[{
      SubscriptBox["S", "n"], "(", "f", ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " .  In Discrete Fourier transforms the freq is (index -1)/N, index-1 \
because Mathematica starts lists on 1."
}], "Text",
 CellChangeTimes->{{3.674919295480329*^9, 3.674919409146112*^9}, {
  3.67491948261966*^9, 3.674919558727098*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fdata2", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"s", "-", "1"}], ")"}], "/", 
        RowBox[{"Length", "[", "fdata", "]"}]}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{"fdata", "[", 
         RowBox[{"[", "s", "]"}], "]"}], " ", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"s", ",", "1", ",", 
       RowBox[{"Length", "[", "fdata", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6749195687347183`*^9, 3.674919585965795*^9}, {
  3.674919619305626*^9, 3.6749196674351587`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ListPlot", "[", "fdata2", " ", "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"fdata2", " ", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "20"}], "]"}], "]"}], " ", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.674919672965127*^9, 3.674919782118329*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.002777777777777778], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw8XGVYVFsXxg4MxE6sayd28aqgYrfYCYqFHYSY2IRgKw2CdHdMMp0wdCMo
divmd+aw/PxzHx64h3323mutt4YBOw+tsmlqYGBwtbOBgf6///79ffRl8edu
YRht3udV9eQRSF/Q//SUJA19PR0DX+7Y5ty0AjtM144b8dQciZxxGa/cFPT9
ReDA9kdudwV+Pf2gXbpzBfa6253IXPzv51dj5iXnPOdhxRClpbi2fL8Od5pe
zJj6WED//0YsSbi0sam4DJ6ys5bZZ7Zgwftrn1bdVNPztuNeq4dhC/JTMNYu
sElGi53QtrxQ3jovl56/C9fWzsmubdDi9teW2+4vscHJfuezdnjn0O/bjWHi
/arznqX44bwv47iXLdpf92iZ1auIfv8+jG212P5ZeR62tVL2XFm8HzdKlk9q
vS+T1nMQNcMvjaoRRkPoPv7U6AGH8H5w6IcGBwGt7zDCbrX8+G67Cl1vLnrZ
fOIReE9q5zTFIofWexQdLuebB7bKheWKXz2OFRxF/f5lSwXPpbT+Y9jc/0dM
Zfs8OHaJWlDlcBxmnfxcn2+Q0fucwMq7k685pLxAVOG2k8v7ncTxD3v91AES
er+TOHs3QdnqZy4qH3cKzuSegvU9u/39jgnofU8jXISSfjoNOu/g5460sYfj
ieHp46f9O18H+EVXL5/3Igzz/zvR9GFrR5htfunat62W9sMR3U6lrzVLrIR9
/ZDxrSOcUPg+WtbeUkP7cwahtREzO1rrEBGpX6AzKrmSvqayfNqvs8hIXG2Z
4VqC8iPX3Z59PAubCR3KN8tzaf/OQdxgFj1gnQZtevtsHS47h+fTys73D4un
/TyPsWHDDd7t1WDg768nKh+fR53p/iNhb/Nofy9gfxc7T2/7TMyoWO56z+4C
al8uezbryC3a7wsYY2863uaZHGu5oUHLZl/ENtP73j0Limj/L6L64UpzhyIt
2McZX0KnqXOWH/LJpvO4hGN2BpLa7ARcddmYm1FzCTtmJtfc6V1M5+OCNX1N
48f+VwH/PfEvjyW6YMCxu0dMVGI6r8sY5xocG70hAmkL2zUdeeUyavdsuvzu
sIjO7zKmdrSayT+Ui7yRNj2r119BmvXiB0+fc+k8r6C8z5s7UUE6vGmfNe7B
iKuwNvU2+RGgpvO9ipXT56/dFKhGq/fdmFe+iqY7Vo2u/8ql876G7u5BtQe/
KtBfe4g50msonCLotam/ls7/OrhfvFIlY+IwLUF8Msv3OprfOjkrbU083Ycb
WPJ09fjV56qx+u4AtxNHbsAma/9+p90hdD9uwOTZj/HDr8px4LRD8Cjzm2jC
WzS7cpqc7stN3FuWy32Yq8Jl/fZ1cYXti/BEl+1ZdH9ckdOmq6rjBDF8Z47K
e1jniguLww56+OTSfXLDjvGx2xLy8pDSz+XVyhQ32F5P6WN7O4/ulzvMH7Qd
YzcgGVqD8qZtrrtj8PX588Mtcum+uaNM8p+YM1uOk0d6t68c7YGAe7I2vP9y
6P55oLoFbLz65eNCteh++l0PxMfXSHJM8+g+eqD971iT1TU6uK8+PvjeXw+8
rBr4uP3DfLqft3A8t9W9Ld9K8VjQP+ao7S3UnhrscX2HmO7rLdSpPYRh/DKE
TlLMWKa5hbGlYa5TCmR0fz2x7NIgx506HRKf2IuGT/fElOC16uT2MrrPnlhc
7O0RP7oAvO5DVrcI9MSa9Kq8TTVldL89MWHak14T5hRAeVVbXmnohb2+V0e0
vc+j++4F135TQtu90KGkgb0wmOn9ILDzwyS6/17o9eK0aPXXVLzYN/LrvTIv
9F1gZhhYWkD1cBsec+a8lBbw8KWk4Pyx+bdxrmh6VZdHWqqP2+gw7uamlk/z
0GTppfbLo28jzXTPtcUCEdXLbTx5YBe51YCLDvrr2+MOhlppf80rVVD93MH3
FmU1q59noPfYssEtz99BeMPiT6/2Cqme7uDXe+fRne2UGOp3Laaq/g74Z991
ONYji+rrLqKclS7j7RSY2GnyzMxVd/FoufOuYJt8qre7WFZ0Kdv4cQ7mNB4w
LJXLys8c4VH93UXA3ydLNn9WY+knN/0JY3tCpufS2Ryqx3uQhj/gzKrkYqM1
eyJ4fbjN+oGGOVSf9zDwcsQ33UQV9uie63cQD64NsP90Lpfq9T60u70SLj5M
xfH57BuD19tv8WRVNdXvfUy9t2/JgqEanEuerV8hDl3xcly3lk/1fB/Rtruf
P/6jg+sw9olIXbz2/kJuMdX3A0z2bmL/sqMODx+w/6BIyhnc9ISO6v0Btn0/
zVsyX4onbdmKxqXsFgscrLyp/h9C4zk8r04oQrzjx5gV+x8i+cT+XcNXi6kf
PIS5058rraarwXnto69QbAvX2u1KFVJ/eASj7mu9hG3LId+yWNxq1iO8tHUR
hK/WUL94hGFDVg2e2IOHIuW31TXBjzCoQ8ngpSYq6h+PsNVZ0qa+LB51CKrI
6vAYP9/czzpYoqB+8hh9tvvsOMC8P7u6U4/RdFTdVfk5FfWXx5Cc/xw/IFqE
vwPYgkOPYC+3mu6F1G+8Udr/sZlyUhnaeT29sHKhNx4803Rod6aI+o83bK6c
fRnqK0LP5us6jI5jfv7BWiODaxXUj7whv5CUNt24BOzr9vZByeMzax1vSKk/
+eCsVWK75sz5mtZF/ffsog+avtOceNNORf3KB4FCi97z8ssBq02x2a990H+L
IN7XPZ76ly8a+tglWPSJAbt7a30ROrqjm7V3BfUzX+QvMm6Y4ifF+sYDwZCV
kwynnpRSf/PFipd7fNVqOdhy7uyHA79uzS71y6d+54dDG+/ahT/QIJW57d0s
/bC58v2Rw7E66n9+MDmVt0A2gQvklCZecvJDy4lRlk3maqkf+mHupftc9d0U
CP/EMTfED90M2iXa1impP/ohS9HDpNerYiyZcm3O9lo/xPAtLIvl//qlH0bP
O24/JLgE7HXs6Q9TQWBscKtC6p/+GBcUbd5rVCbWsw3SHxfCRV4bbUOpn/oj
Putx7MWlOlQwze3pBX8sH5ljtvqplPqrP+pLhmd3GZoGfbV2T/bHirbcwnMm
RdRv/XF8fLH2w7xcvF6pPxF/dKgw6B/cK5/6bwC2dF79fbJIh6P67TQJQPeZ
JW58hYL6cQCMbw8ytlpfjO8867DtawLwSndr5aD2gdSfAyBUGExWZYbj7M/p
h5VXA9D5rF+e1FNA/ToANbpDBsURHLRgG1QA3phcaB+i1FD/DoBTx7W/y72z
cOPA859PPwTAZrDMPLJFLvXzQKhedqrUtc+FMdNtug8JxOQOmwONiiuovwei
9awxXvPaZuN+mdcVl42BKAqae+Djw1rq94Fo8lRha9y+AP267WNaXCDS4kYE
hn7nU/8PxGiz3XZD13AQvGw201ICkTJycdNHXzU0DwLR1tDnYPbfPIy80o0p
4UD49HrxzLFATPMhCLMKgrXq0kToL/fMUUHYnnsg7fhGEc2LIIy9PMyodFIl
prIbGIStGcfMCoLUND+CMCPZ7vfd5Rw0jocg+BuvmPj7nobmSRCOmIalPDpR
DYu9h967SILw7FD+6PPbdDRfgvBJutui+cYwyPznJX36HYQHGbW/z3eW0rwJ
RoI45HXReg5WFvd22mEajL5T/YowK4fmTzD+Mxij9W4hQ4Hxxzmq3cFY/5/f
8LqL6TSPgsEzLd+bbcfDVrZAg9F2smJmn9uVNJ+CYbGm6LJNBz6Y2leEqYKh
fC5PvxH7b14Fo4pv1KnJRi303b5H8ycYM9nj2s8AGc2vJzg45fGucnsFPnxe
tOHy1CdAB4vmilF8mmdPoPV4vDi0TymYZmHy+cATTEidV7xsUjHNtyeo+C1N
Vh+Q4Y/Nt2c7/J+g3cygh1cvaWjePYE5d2ax9aIEXNIvT/cE+St7vdhZVUbz
7wlk8237CV5o0bYg8PCstiH43G8TN3Yrn+ZhCPb/sP0vc3wVbnV0mBxuFoKt
ty6LnUR5NB9D4Dz39aJ5dlnozl7oENy3KOau9yyieRkC+bELu5Wu6fA+N4R3
OSQEB39K5g96xKH5GYKg0JFdAoz5GJz668rnkhC0uDHlEl+XR/M0BMZmeO8z
SIQwfbsyCsWNuviuVzvl03wNxXPxvl0TjiVD3/3UFqH4ZvGrMPiojuZtKBJ2
PBkWmClF8s6zRbPsQ3Gn+bNJDXk6mr+hGLh5j/XRlkLom294JPO8t9wMX8d8
msehKC+/JU3pkQ/9tO1ZHYphz17tzfnGpfkcin7bbz2V8blYpD+Obk+h1rzl
D9mZS/P6KcrFpds+9U+H2qLw/edFT+E5ZGPO0es8mt9PId62uThmUC7WnYlK
2nn2KaQH7o3gbn5O8/wpKow2WVy6lowypjur45/Cxu2ha19BAc33p8g87XTs
m70Iu95unGv24ilebfg1e0Qlj+Z9GH5a9KhwPyEDOy77hMFFefhGybh//D0M
++rG16WOScdhdiCHYe2JFjFXkgsID4Rhme03I80sNfTg8IpLGGZP+3mRf0ZD
+CAMGW9/9p9Rm4gz6vgNX1LD8PyVk+/IrsmEF8JwocuZY+ItlWjW5rrJrrdh
iKzL65xWFUz4IRyZD5vdGWsmgX56qAeGIz/zmHdNBwXhiXAsvXqkXB4ph5H+
+lmFI/qtU4fjp+SEL8Lx3Pr7z92f1Lgb1+5IxI1w7FmT97HLFDnhjXCk7c//
mLBfB/3b9uKEo1mnXo/LhpUS/ghH7LIXjr+H8xE4SH8Bme/ndGqYu0JBeCQC
v/rJGrYZSzF8szvvy7AIvJzXe+X45vmETyIw5NOvjq2Z+o++bXN115YI+DRt
OFUlLCO8EoGafXf2VI6uxWQW/kdgJCfAaEUXAeGXCKw8e+ewV0oimGbaBTkR
cDvSPGePdxHhmQikb7nuabqsFszhFkX8iIDV7E/+R6ZpCd9EwuxveOSPIXJI
mNPoNTYS8cc71+1fWUB4JxLp+66n7LRLwHJ2gZEI9Otk9Wgyh/BPJCynzhfX
CYvRCF8j8Vn3ePAOJYfwUCSyORXly0+UYnP/OR92yZnvj753S/son/BRJDaW
GviEBMVCP301BlFYljh3Soej2YSXolA9SFqUOEYB21tvnDApCm1rClpZf1YR
fopCvnLp78v+eXgn4c+N3BuF+jF5I9evySc8FYUPG0bN37e/AI3wKwpazZTH
ylf/+GAUxHtcg9q8EoIdv9ooVLjdvGnH8OdGvBUFTHudpmL48oVj+oYQDdHG
yvtKjxLCX9EYqhva2dM/C0xxMC0rGq9dXVrXxKgIj0VDkWmdfGBICdwZdKA9
FA1O0mtHd+tCwmfRMGs4YGAQnYmufSW1CIrGxV3ZS1R1HMJr0Whd02B7NFAG
tr0URsMubGb20Lliwm/ROPosMaB3UAU6sQ05BmWLt/o/r9QQnouBzwLhkNSf
RVjDgGcGEiGh3jd940c14bsYyL1/zdXJeWC4qfPP6TFY/zK/duePXMJ7MYi3
LZB9vpAHdvytjcGBl/1+hLwWEf6LwepTPVsNaFHKzMU9zIiNweYBLtNPnC0m
PBiDNyUDddUhcuxYs0o/0nD16u+mA7cUET6MgdGS21ylnxZBzPQoCIxB+6v+
gU1TJYQXY3B9zWhNyBklnt/UN8QY7NRazRSOjyP8GIO2W26455srwLbvwhgU
a9YYHFlcRHgyBhYRfdeMXKbFwcYHopny8sKxS2WEL2MgmHuw2URnEWIZchjX
LhbLV/9JDtlQSHgzFrMWTHTdXSTE5995p+uHxOJhkZX9gw5VhD9jcTS3prj/
2mJM6cXZ1H9OLN6uGG8VvYBHeDQW4ZKVpZPeisC2n02x2Nt9ZZeuz2sIn8bi
cNB6zcPtCWC4J9OQYvFr7s01L4erCK/Gok2oJOP2yQQYHDrfXOgeC+nF4DsX
bOSEX2Oxkntg/+CNKliwADAWO8+8WzLSpZLwbCwyXeLN3azycSXESmoqiEXL
GW/2zd5WSfg2Fjcena/Q/hRDqi+f8ljc2fe1ONJKRHg3FmNdZj44c5ILvfjh
9z0Wb6Y0uT5+4j/8G4fjhdHxQ8PVYOGocRzimy4yqptYQng4DknNQy92cZOC
AS/6hoAxi+f90d7KJXwch7l7luSPrJWjYOK7qfMWxOFa3y+jl3VVEl6OwxPf
b+hoJEQvFoDFITrQ4uqqwxzCz3E4n/7i7583YmxhDzgOMx6NXvQrTk14Og4H
nfwnTsnXopH+x2Gocxl3TpN/ekgcfn7oVybbqkBjecTBRN7myoz8NMLbcWi5
1bDiRZgCQxn0YSWNg2E3gxhFtZLwdxySE83eBzwpxD62IONg99dzzvCBEsLj
cUipfx1mmCxE5I/N+hXiz/0J+zdteET4PB6nJ/p1aqgpAgsHesQj4aCau2tQ
PuH1eKy90a1J4CIdJrD/4iE4+dNynFsh4fd4TA5w9y4YxvC15XqEHo/hf0oS
Jh3hE56Ph09rt6h74DBzrE2D3554HMz+sKJloIbwfTzev23o9I2Xh98Meio4
Hw+PgNW/C34UEt5nfl7yY3Sn1BLMZul1PKYO/tqp9N0//TwesZGeI+f3k+Ai
R8og6Hgo14290up9IfEB5uvIjZ2emZU0tgN1POLD3kW79CkjfhCPgAO+7sq9
ZWBX9zIe24+MnbzCRUd8IR52tS+eLOxSjqVswSVg3ezbDiUtC4k/JMBR4frk
bJsSeOjbsUkCVjdxvlRfwSM+kYDSV91/6YQVyGXQH9NT8TF5mKtRtYT4RQK2
PWty89RQNdjXXZ2Adrr3KWoHKfGNBIw4NVrbMr4cDLjOFx5MgK7ninfCtUXE
PxJgOfzPsIEHdXgcoAcACThwdubI3DQt8ZEEeIevMN51RYRKZvcmBCTgosEe
WbpaSPwkAc12F/c4HJyHQeyBJMB259WrtQXJxFcSMD3yx58xzP7u1sPz/ATk
aTr6XDmXQ/wlAcfy9rW43VoOtv29T4C2rOL6NfU/PpOAoxnXD8g/ROL12PSh
HQ0TYduQNNzsezHxm0TUnjc7yRmsxrglesSXCF/jKldrmwriO4lIMkmNsjmc
j2PsAE5Ev6YjR3ddqyT+k4h3Jy3K2tbykaQ/3Q2J8FluHe7ZjUd8KBG7R5ww
PcNQJvZ4jyVi/OLQK9eYftvIjxJRN6nBbcaxAsxkG2AinowzlAw1SiG+lIiX
wW2WFChjoEff60MT0SujvrORXy7xp0QsetXiSHQ/AfhfhjEIKxHfml49HlqU
TnyKwZUSxa5fBlq01MMjhmcO+vg+SmefQvwqEb1DR35RJqZi4Rg9YkpE0CXD
ZztHSYhvJWFLR+e4EYk5YNt9pyQkOOlc+u74p88n4W/8/i2hPCVUu/UIKAmu
HS37O33lER9LAvf4vY4N19QwbiwQDPmwoE/S0WDiZ0kYtHN0T9GNbKzTj/dt
SfC195w71YJPfC0JW2Mu1O8UR+BB+l2Pjg5JqOk0YLt3PIf4WxLmPzL+8+pT
FUpZeTUJaWKDZZ2t5MTnknBoIK9iS3ElmIfpKQIEhS9lHdoLid8xPx+xxv5u
OwXY6hAn4e6engUbrPOI7yVhnYnp3pI1PDBglYHASTh/duB1vnce8b8k3B87
7um7/lzUW+o3MAmv+0YML16bTHwwGe1OOD43y1NiVONAwmh7//Am+3OJHyaj
2YOPedNLcsGOt/HJ0P7m+uyNKCa+mAyjW4+GVTP7GOf9LiRncTIcb484m2oT
S/wxGVkN3YTB5/PxJbX4+m+bZKwre9Z+ilUO8clkzKux3rbBSYxpTPVOPJeM
CU8XCEvUOcQvk5GwPPjQuDFyOLGAOxmRzmOy75QoiW8m4+K0Oc61USJks+Wb
jFGOJ/lFEWXEP5Ph6xv/ZPs9LZqyDSsZs24OmXjIUkp8NBkdX6W08O6SjXkL
jjZ0rGfq+lfO19FzCoifJkO9wfSayDQJDPgvnd8sBWe1X8snTqskvpqCkbrR
n7cmSyDXw+2+Kajvf7ro1LJ/fk4K2l8xmZA1hI+O+uVNSUGZ4aVLiqI64rMp
WLPiq3Ng81SsagS8OPfo2e0dRhLityl4cGXhvJPMvLqT18Z24IEU/Lj2bopw
j5b4bgrmbuz5xbdPOfTsc8PlFFg5eTQNmSwn/puCdUGaX47zqsG6I34p+PCg
3Z4mqnLiwylw64BOUxqisG24zIi5MxCKvHsemBBC/DgFCBpTcq1jPgL07Sov
BQOmcZLcbATEl5n1dtBsD+MoUMt0v4nvUnDb2Pb4PCcF8ecUTPQY4zLgSxyG
Od9M3d8mFZ+7Drv0qEpOfDoVp3bM6eLxtxx68Zdp0XgSNDhSe7yc+HUqSjst
/FjzNBt69lw0KxVFJ2sH2i6QE99OxdjvnW8sGJCCj/rjWJ+K3tfCeb2NtcS/
U3Fmo1+a04NgTNLDl6Op+N3mYMEbYwXx8VS4xrZVv/iejtOGg/VLRNvlM9fH
KOXEz1NxbsuHNqp2hWC785NUBPnNTrnl4U98PRXDqs+9HCgvwB/zH29ecVLR
bNbanWvipMTfUxHOfX0ypb8ac/X0tyQVM+b8mGbRvpT4fCqa+luZWO6SwMWJ
Jdjw8J2YNNpdQ/w+DRtxw2i+YSrEeveqYxqGzzQe8eJOFvH9NDT3nmo8e5IW
hixgSwPHYknFyFQ18f80FLb16TqyGQ8MOd38xzwN3msvlWbfySQ9IA37xJ6V
nf9ywNK3rWmImc3b38tUQPpAGmxjrOz9r3Kg01+/02nYcPjsqqGD80kvSEPZ
pocfvNunoAdrX6VBp4ja8PBwLukHaTi8Ym3486WV2MQS3DTwvByG+63LIz0h
Ddw2k2ZP2ZkGPVtgLiB+BVqsW7RBS/pCGo5qWtz+LEtElYN+oKeh9EY7mzoP
IekNaTDheUrDGH45mCVIaYi4l/838EU56Q/pyB3b39/aogy2+nHUNR32gqm/
ursVkR6RjrShXqvP5xQjXKVbx8xghDfLXZDFySV9Ih1d/aw7X/eswNtXnGmD
FqXDaNmOQS/6KkmvSIfZ8psXY6ZrMJ4lmOmYdKbVsd838ki/YL7eOSI5c68G
rLvonI4hCQYtTHzkpGekw8IGpRsvMXyXtYfSccPsyZQOF/JJ30jHEkfjgUU9
I/GThafMz48RaG2HaUnvSMepMq9BuTf4MLPXM5p08L8ZpUVUyEj/SMeB6Nwj
NzNEOH/HnIG86ShpVlj/YYmI9JB0LF8enrZirQSC2DF6yIYWr9796O1fQPpI
BhYs/X3xzE012Mf1zsCGjrrCzq+FpJdk4HXd4JvCeCUW68fv5AysXLr7xZpH
OaSfZKC10P7SnLECuOnp6ooMjIyv6V32Lpn0lAyELArv+TxFCc1AFmAhco3N
kbqrUtJXMvBkAXfa+pfJYNHBpQwYtv8YK/pzj/SWDDT7kxIwmxNL9ksGMj8v
PDtvXx7pLxn4LzS85F1uMRrbSwaKr5rsmda5gPSYDIS6pGiqF1WjXA/HczOw
zm2gscf3AtJnMjApo127DQz/GqB3f99koM2P/tkG6cGk1zC/f9dAX7uutbBm
L0wm1nrumBL1IpL0m0yskQq/rnQUIuSFfgBnYqUu8+baIinpOZlwG/rLcpR/
Otjtm5mJAwbrFn/vU0L6Tib2zZNkPEvLBQs31mUiL7X5DGVICek9mWh28PCR
q49LcERPzw9ngmPiO+KFTEj6Tya6pMckv1yRj4QN+gmcCeG6scNU3bWkB2Xi
o99Y8d8QDb6dYCcmnhff3GjTV0X6UCaKlve3muORhunsAzNhZnXspGFzJelF
mYg/2ND8bCkHbDstykSTv+blxY/ySD/KRD1voMDzowBcPbr6lImFb673Pm0p
JD0pC86KGOs/t2rRvFFAgHtu4Hj791rSl7Jgba3JeLdViAXN9B06C+ryy85O
mbGkN2Xh+qjbhpJvcui7wca5WajjfruVu1RM+lMWPl3+POIapwDsddmchbgr
H4qK7cNIj8pCpld9zdFV1TBqFHSwYVPpvHFReaRPZcHN56vJyeHRWMMWcBZa
vf70cOg3CelVWdil/H3flsH79zz0gCgLOosTY05uzif9KgumBWNfbV2mQHGE
nmBmYXWZQdmQh5mkZ2Uha4tvL91tLVh5qSILw/oPtyr8oSV9Kwvd/BZ8/Dta
A3Z8NGSh6tISR+1mGeld2VDNiDtV+TkVLN1icMyo5q0jk4ZwSP/KhuEnTas4
Zy2e99XfwGy4q8d++naslPSwbIzYe7aVbVUhRjQeMA74DDh2W6ggfSwbmNWp
ghMqwEF2YGYjuNRWGGinJb0sGz0cZn4d4RQHtjycssFzqo2duoNH+lk20qfu
7tLUnoNG+z0bV52FkQ8eCUhPy8bm9317JRgWo1F+ycb5tXdHLRugJH0tG2fj
Xgyoti6Bgz49IcvGtjOvDY2bVJDelg2PC3Wv7XqKkFnThXliNhpstpb2XCYn
/S0bvQZPq7m7thCNaTgOGn60/+/R8yzS4zgI2CPYa8vgm4FMt+7dnoOhd5r+
VbURkz7HgdsNY6+dO2Qwb2y4mDWuffhDfyHpdRx4netbXR4hgk3Y9jWrhnJw
as3Anocua0m/42DEMI28yE8Alp5O5GDtx/8cyyyCSc/jYJrP/bXL9xUgNGfx
lGtzONg4w9SyZp6a9D0O9nd9PUcurYJ0jV5Q4KCoE2ffhuly0vs46HbwlHde
dRTY1W3iwNalU9OfIXLS/zgYlfsy2n2bGu2ZaVNiy0GnYQnrLJurSQ/kYPj4
l07yV2Kw9OoEB5ZeuyyNP2pIH+TA+UOT0gdBZVjhes+O4Uiw+JjWstnSctIL
OSgN/7GrWQ8pGuM3zP4Ua39clcpIP+Sg1+2ZRw0nZaPRnuegxcCD7kOPq0lP
ZNZf8ODQkKRYJE7RE3oO5gwbsPxQupT0RQ4kwoNzOn2VoJEecFA1aUJPK9dS
0hs5+BXR9d3tgTp816cPBBwc7If/Tm4XkP7IwZckbmrTygSw7EbDwZ+I1oIZ
nXikR3Jg9Nh3sHS5CDP05VjOgWcX830vJ7iSPslBSrNPpVaGPGxpBHgwD/t2
4/KzONIrOVjXan3nt9fzwcLbBg6Sw46cC2TmfaN+yUHzb3YiU00+/HrpCTUX
jt8O5qQvkJKeyUX5+eunf4yVgZWLOnPRvtutH0OaqUnf5OKS25/soOhU1OiP
l+Fxdw6k++TY/NM7uTDIHdtk5EQFWrAFz4Wh50bHMakS0j+5yFhetTNougAs
PJvOhcNZafW4vv/0UC5mTnho4RgjgyULsLjYOS9h0Zy4BNJHuSgd88h8cIwK
rNyxhouF/YeG5TL4v1Ev5aJG+qVF5gUObvzWE1ou3o1cNWBDspz0Uy5W9jDc
KrPXQH/7DA5xsXvb2i9PV/NJT+Vi3QQfzU+hEiy8cOLi5dKHkc8fFZK+yoXH
up1j1vEq8T5EXyBccNQO3WN7ZZPeysXnbc5pO5j70BgP4iJzXpKN3D6Z9Fcu
XNuJDok6yTCBBThcdFizdfCxMwLSY7lM3ZxJ9PXToVH+5sL8Xc+VreYHkT7L
xRbNbVEbKy5ONhJKuEQEj6n/oiW9lguntQ/nTh5Vh/v66pBy0e7xlOiDR/7p
t1x0qREdWHu4CizdLOCijY9twKaCPNJzuVjicMJFWKtEyXX9BnJRO/DUkFWf
xKTvcjHt+CGHkIkasPLtRy4GXXyvOvVaQHovF38HvbnfYl45+rEAg4thMyS1
TZupSP/loYmrLvBdjhx6cL+wHQ84OWGv4YUS0oN5cC+eXS59WQKWLvXkMTzP
oWHnBV/Sh3n4890yobOXEBeZ6mUoNxY5lb1Y3rOQ9GIe7PkXB3Z8LG9M90zg
oUW7OunVCCXpxzxENvk62TVVgBx9+c7m4btnr8xO2kzSk3lwyx2VsqaTBno1
VruUh80rkqfdSy8ifZkHp79Dfu+U5IGF+xt5uK6M6WFzOZP0Zh6aJx/t+9cg
BCN76BkyD7wfWX5vIvmkP/OQH7m+VXZAAVj57AQPrkcm+FTdjCY9mgcznjz8
ZFQV7PTLu8DDvXEOM07U/tOneRh2KCjrsHEB9GiXgbywOzdmsYVEQHo1D/tU
J3/y7ikRy8aXeOgi3drUKERC+jUPtULr29WZpcjVp/ee8mCgfJvW9/U/PZuH
oa8q+y6YV4lG+YcHUXuRw91etaRvM+vvMnlL9G4uuv2UvZXweeg3vsszy/5Z
pHfz0DBs9bcTA/PBtis1s79bls7r7pJH+jezfvmuSZ/ShNigh1vlPAReKdiU
dKCC9HDmeV3XPi0fKIYDKyDxcOWY0PS4exXp4zy87Ki9N6N/Klj54jsPuyrV
8a5dqkgv50GctXTflKV3kMXVvzAf8zeu7jZhfgbp53woktt9q/HWgj0OYz72
LRW1tW+tJj2dj7KCQLvj61VooocLJnw4fF9qXBqYTPo6H5f/zKgrclNjIEso
+Pho5jbWpqma9HY+XAIGfO6epIaFvjtP42PpHIdtxmbFpL/zsbnBsruRjo/d
rIDDh9DK6eIKXyHp8XxMt+g8+vK5VLByNtOXJmybIjt+QkX6PB9vhl5J3iiU
4WkQK5ijbPulbidkVaTX83HH+u2hd82roTdvxtjxsc1nzyz3kWWk3/MRELNx
UEmHVLzW00dHPtKzOWnb94pIz+djVdjO5JbZfHRgAT0fSl7rNxeqpaTv8/E5
a+XD+CsaNMYn+Tjneslu5ys56f18NMw0GlPtK8FKVkDhw+Rw0Zi8dRmk//Nh
mH/w+Zb3SrDqVjQfySLRco1JPvkBzPsJvw8KbSXHbZb+8DEq8mVex6Za8geY
82hYXmOUmIzEruwFhE/t4IgLJwvIL+BjgP+bxIX2TD3r5cQCPo6J93etm1tA
/gEfgccujVTP1qJhvB5Q87FEWGLZ/w2P/AQ+ln95UDXGPR/sOPrAR9WdhaHX
71aSv8DHtKMLl/RalYOZrIDBR8H6arfsZwryGwQw9314wWhxIfTq3GlDAZqf
NL1Zff1fvlUA8evQlvLjCTjLCsYCJG9rr80JyiM/QgDraYXHjx0sgP93/QIF
OJUX+jftEYf8CQHk1TOO3/DKB1tupgIovGK1o6s05FcIMOXNdT/7Nzo808NP
CFDuKfDwPphE/oUAz+4+bzF0fiH007fJUgE6ouUOz3Ip+RkC/ArNLul4jaln
VkAQ4NWnoRvflj0lf0OA0F51kWUNEujVxal7BBAYHHj9u6uO/A4BHMM6C9bc
LQf7uOMChL+47HTdQkn+hwDthh3/+yM5Fjf14/e8AK5+n5tP/FBJfgiz3mN3
UywXKsAMI6YhCGDz6dOCobczyR8RwPn1jQcjB/GgYuOdAnw5u2+G+LqY/BIB
Vg4+VbVknQYsOmB4gtyu3dHJ+zPIPxGgosjE/sVfHhrlfWb/Flt1azDnk58i
wGrfk671e1IwkW0vArwx+V7mOEpO/ooAe8vrL452LgULx9UCZLRZrDrVWUN+
iwD8D3a/FrZQ4pSeTpcx59msMqfySBn5LwJMDmqIq++dh/tL9BdGgLSvU2+6
uBWSHyNATEhGsPdqNdL08vQ3AQo3vZl28LCW/BkBnExW6P4UyVBqyyIOPDzm
/0yVoSK/RgjrBpf2kekJYOFGJyH42RMSk5twyL8RYuLOFq/631PBRE8H+wnR
q82bhmHMcxr9HCGSm/WKDf2UhdmsYCnE33Z2j7gL+eTvCDFAtaJPzgIddurl
1alClPf/HL7mcBn5PczzT5zY0cdei4tj9Q8UYobt7NMWednk/whx+3TXetPw
ArDtdLUQb1a7mygX5ZIfJITZxdkOdqk6iPT0Y7sQxrwDSs3QQvKHhHg6d7/I
dks69GoH0/HhGNVTfKi9kPwi5v/3TJLenZaPtnp50EGI9G7L7sytyCP/SAgV
t/mN6ZcKwKbPrwhhX2Ue6zNTRH6SEP38R5m3GJWNxni5EGv9zfz3nM4lf0kI
Xdwk6TKXEhxiDRoh+kQ+T4+6UUl+kxAHpz5o0cEuDQwYYgpYiCB514gxf3Tk
PwnxTbK1j3lOEeJYeUuIXwcPu+f1KCI/Soi8qjOj/5rKoVdr+kqEyD475Nw1
5rmN/pQQRh3Mbaf00uDLIrbi4Njv5YmKNA35VULsGfnaxnVQLrqzgp0Q3AkL
3JoM15B/JcTw3u7XTptfBUu33gvRweyc+ZosGflZQqx7Fep6iuE7G1mDRIjO
JVHzp5uoyd/KgfrHMatEz2I4sgecgxU3QmZ1fJVMflcOBqmbTzq9WgtvPTrt
noPRW9K6vNpSQP5XDnZvmfs671Ag2PIYnINt/jv3RkRUkR+Wg7gtPfvsrq0F
CyfH5yDWr8T8MKeE/LEcVMRl9Wtow0XTRsEMGSXKb7GhGeSX5WC1W8M+E8ci
MMONWWEOQs7593y+roT8sxwcXBpwqVk4B/NYgyIHrQWFnyZ8EJGflgPXv8XF
EaJk7Gb/5SBxuFj3dHYi+Ws5sDL43KLujiuu6sflsRxopy9akT2zhPy2HIy7
ODVucoEQYXp6eY5ZX86WqujryeS/MfvT+17E2DAeWHfDNQdru9qpm2vE5Mfl
oLrpoqWG17R4w8bfc3DL69mjtdP/5S1z4Hj/QDMbIcMbRrMOF36K0oT77hWS
X8fsV+ylZuNbKjGONQhyMC/jTWDs80ry73JwbW+9olmOBqtY+JyDRXZ5k3eX
p5Gfx6x3s+h78bhcHGMLLgefxyjspwlzyd/LQeA6s+GvE4pwRy+XlubANn7Y
QDdtDvl9OZh81NTAKboIenfmdH0Oer41XBPB9KFG/y8HC3Q7cm975aFQ/7pf
cyDSRXQ/eIZPfmAOWs5st+9IWilYeNBMhBRzh4rFA3jkD4qgu3sg6m1yOHo3
CvRIfWqWW+8oI79QhP0DTUbbBBZill7u6ysC553mv3NyHfmHIgw03fBz6ewK
bGUPRIR7U43+chuKyE8UoXtw2X73Gh3OsQNOhF29Uh6ldtGRvyiC66ANfbsu
yQTb/uaJ0NN914rWQTryG0XoYmfjer2ZFnw9XVglgnncUv++m4rIfxTh8OXs
0wZ2MtTq5aptIvQyLnYbyuDdRj9ShBLjG4kCFwFasgK5CP3kfXu+3islf1KE
lqc6PzC5EYxhHVmHBa+qlC1yV0WRXymCvaPOUJJiA/Z4L4tgW7BsbnWelPxL
Ee4KVilH3CvHfrYBihAeKcrqtaqc/EwRFmru3wg+ygcrH/gx6136+kr7S37k
b4rwR3DCbuygVOineZcoESoi/Q2bKLLI7xSBN6DnIocoHdSsfcHsf++M3gea
/vu8oAgevQsXnIzg48MuvUAtQpMdo/MOvC4gP1SEv+PnX+8al4vO+navY/a/
+NxB6/wo8kdF6PP0zc/MowpMbDQEEfDxcXhXvpT8UhGujuhgXna2AOynK94x
+zfyvmnJcw75pyL4t+8+dXx4Dk6zgEOEOU9brj98Mpf8VDH28pdYBl8rhB5t
5LURY83tB85eZQXkr4oxMGDi1pE9BUjXX+duYmg9kizL/MrIbxXj5IiaOzNm
xIKFf4PFKEjI8+jL45L/yjzvhmpstakKf/RyyXgxHrUaZqGulZAfK0bXzn7m
fTcVoz9ryIlhWF76ZLKwkvxZMQ5fi0x2DZVhTuMGMjR6++al6yvJrxXD7UKb
t7nBqdjFDiQxYtc5Dhj+/Bn5t8z6h07+dqK9GOx4sxFDmVie6GuTSH6uGOOz
P1YOjlPhiZ4OHhVjgNQ7IvpwHvm7Yuxf59E2uYMSrPx5lvl9hnM8YtYEkd8r
xvtxtRYea5Kgr97nN8U4YNg/uexJCPm/YviPH+S0wZ0LQ9YQE8MqyWyE3w4J
+cFiGK1c0nZEuRZs+YaIIevwUtX+jZT8YTFa8g+ZFwQWYFljw0Jzz5OCfFk1
+cVidG6SdPnuiSdolIfEsKl98DertJj8YzGGCQduOPNZjVvOekIths8l/6Hb
rXXkJ4ux70yN2vpnEuL1dliJGDc6uHyRQ03+shgbjC2v7LEsALu8F2J86BL4
Z6ZLDfnNYhwPWNjbPY+Hr/px/oX5+tYCy7ImReQ/i+G4ceqVzEV8sPS3KYOj
vdrNLTyTTH60BMVXdDFe/cIwjb3QEuRxpmZwlqjJn5ZA9yS79nJqMjY1AgQ8
bhOevHcAn/xqCQZuhGSmQA0nlnBJcOvn1rk9W/z7PJcEFz9sfNqjIRs++nY1
RQLx8fN9J2YWkJ/N/P6abeJJHXPAwnsLCUIyOo7xkZWRvy2BcMG3s36lSajS
y2ErJcjadu76+foQ8rslOFmzymGOtBqsHbGVWY/FgXLrQCX53xJwHwTti/mh
Aetu75fA7PHDPZ6dq8kPl+DajvLtIxfnYj47QCS4Y3Ag93uTEvLHJfB1eV7v
aMHDnkZAjg+FK68+m6Agv1yC3YJAh6zsWlxjP54ogV9WdVCgQTr55xK4Ph2X
k8zwEFYe92O+39A20ulMHvnpErR2SvXr5aOE/K3ekJHA4XCJ79ukcvLXJfhk
at1yWCQPb1l7WoLNTbidZzH73SjHMuvVpOx+3bQUje1ZgmOtxh0rnqsh/13/
/an7pi97ifFsg5HgeMOv2IPO//x4CebdGb/lV2UBWPmvSgL/IWumtG0VQv68
BNaf9x39+U2J440EGN+35CQE7yghv56po7HnrrYzKMRdvb36U4JJnwZcX35F
Tf69FO7WzfYsUKeCvX5tpChxWrGx4l0c+flSBI6fVLhDk4wiPVzrJkVF84Nb
e2fJyd+Xorjo+f7S0YVg5Y1BUtz3m+bWZpiG/H4pyk4V6z69z0Yf9gJKYTJj
5KwFnSvI/5dCffn95dfGzHxmB7oUsycsPTHXKIbyAMzXz4KHDR+gxTaWIEkR
L/DYNOxGIuUDpPD87mfRN0yK80NYBoyo3OP33jYPp7yAFAbzJd0P9dGApW/W
UqTsCyvcwdyfxvyAFAPsBcouI5QQ6OXOI1KsWzAvdv0gIeUJpHAMv1B2+Vs6
WHvLWQqngzPW7HoipnwB83XbCOv9cilasQuUQiax7fdffCXlDaT4OEVa9uG0
CsPZhi8Fd5ut5/eZ//IHUmTc82uy+IYALDx9IsXwjoMPTgvOoTyCFAMHOQwY
HpuHA6wgIcVa6wFtty5UUz6BmePug1536hiPRvtDCvuw405VP6spryDFvaae
PsI6PqL1nw5USPEhwebAVwYXNeYXmHW3WXI3bawS7OOKpbgsnKblKrWUZ5Bi
TO6OfojOBjt+nzP7c9tIXFdYQvkGKTScd91i9yjQhW0IUhworwj6UJRPeQcp
FqaeOPMpSt0o7zaVoWLWDoN5zHs05h9k6BhpZjU3phxWLGGVIavHuRYV9SrK
Q8hwTvtY57UqHKxd30eGV/MWO+kmV1A+QobPe+6/chihAdtehsuQeIgTNHJr
FeUlZDiRcP/O9cwMZOjh+GQZhpzvuHh+nYryEzJ4j/8kNZRmgZWvzBkc5v94
oKi7gvIUMuS53OwUmF+Av3q7Z4UM21srSlyaFFK+QgaP9NWfW7ZXgLWbt8hQ
PjXJdH9gDuUtZGg6dc2VXltVmMsSGhn6+UjeTd6gpPyFDOeb3zW8bFkKa1Yg
kqFIY7/NhKekPAYz1wM2Wl4qTwRLz11keDOte/48Ix3lM2ToPPLdMX9TBULY
j2/LEBh7c6ijPZ/yGjJ0Su36yExRicaPd8rAsdP1OSCVUH5DBqs7hvIdw4vx
8o7+gTLE7nzvvbw8n/IcMtTFWOy4XFCBxvgRs74litFPi6oo3yFjeOz+jq8V
ZWikHzLM/Yvnq34WUN5DBvv8JcvbqURYzgoIMuj6BS37YSCl/IcMRp1X97T1
zgFrb1XKcKOJ+c9VufmUB5Fh23eXZ1fqq+G5Wd9RmfWaZcz+4Pvv8zIy3HO+
fCF+kBLsdfkpQ2bOuy2L/hRQXkSODQfy2y9k5otOD69ay/GoY0x6wZRkyo/I
EbXxprvwixrf9HJEVzkcAnZfKO1eRXkSOXhRa3s1WGSAle8HyuEV0fd97nM1
5UvkeLvNTTHTVIPpLMGUo/efrGsSZTHlTeToZFQT3jVZDDb+MVOODzmvAg9t
klH+RI5p5u+qLv7Q4QxbIXJ4/vciynp2NeVR5Kj02vVtYnYRfPV0a50ceZu7
Glx/e5vyKXKMfPxnxQehGqw8uUsOl3ajpvzZ4kl5FTmenRBxqtomo1pv5x2R
I/Zv0zZHnhZTfkWOmaOadGluyQcbX3CWo/O7VQ6ze0spzyKHfe8mmS+yAvEf
S0DkSHL8O/OKZznlW5g5oLvfZVt2Jho/Xi7HKZPI2ibG8ZR3YfYjtM0QZUMS
WPklWA7BmSGiiqJ/nz+SY2zE1JLjFXJcZ+P1cnBePXSLCpRQHkaOK4dl8jMv
89Bov8vhW1SRddRGS/kYOQ7clL7jjMuDQs7+Q1pqx98yCy7lZeR4+IJ//UAJ
F+y4LGK+HlTbb3iWhPIzcty1X75uerUQRixAZe6Dt6Um5Woq5Wnk0Nm0KX4x
WgJTlvDLcfboFRPjBinla+SImXO+xxJ5IVj7sokCpjlu9Z/7ayhvo0Dqn+wv
DU+YPsQaUgpsmS4b/W1/CeVvFPj4rbZ/7/BEsO2gtwLBT8Wbf9VcojyOAnde
HhuXZ8pDih4+D1PglO2itn11AsrnKPAw/s8Kvr8WrNw0SYEIiYPQzrWa8joK
hq+fuJojE4BVx+cqsGfZesm5p1rK7yhQV7Br3JjYGPRlCaECcc63HEb2KKI8
jwJZu6f+lCYrwL7uZgVeXj12KrmbiPI9CpRGccqD5pdgO2tYKDDWwa1zZnkW
5X0UeCP5tWm/QTlYOn1KgR5ZwU9Xdf/3+S/m99V5rjwjLgIrP19SQPa1POOz
l4DyQAo82HLt7/tfBRCyf95CgQn164vkpzmUD1Ig5mhU291TmPdgP/6uQIlz
9E8/QxHlhRRoI8w75HexHK1ZwqCAc6e7R8Jfcik/pGB4ZGlD39ZCNMZLFYg0
4qVKBykoT6TABVHYgGv8p1jMymsKrIqsmWl2KJnyRQq8fiPM65FRgoOsQajA
86hut0LLCilvpMDCndemvXuUDDa+UalAfdWtG63/KCh/xJz/vslOi1boEKM/
3jcKVN47XbDUsJjySAyvnfd1ns/bXLBw6IcC66wnZ/zc8S+fpESP2bGpJfEi
fDJhASUMR+/x3ROqpLySEvPcro45/FsNVm7vosRHy/dpltEKyi8p0etyr2dJ
t7hg7ekBSthfuRl5dn0e5ZmU8Hrx4ePxBXysZw0kJYo+OUW4LM2kfJMSt27d
WO37Jh/s7ZuhxPyCSNn7H6mUd1LCblFY6pQyIR7p6ZGlEpGbbbcKrTwp/6TE
tzsvrnR+x9SzXk5cp0RscGXs8AGplIdSYu6dsoHlEZVg7bddSrSKsY39yi+k
fJQSpY9ujHYfUACDRgKHu4O3Pth5REJ5KWY/+p11enpIAfY6n1Fio+j3HwXT
txrzU8zXzWwLjeOyYc4aDEosSDV6s7wlh/JUSqR8KFldW8jgbNawVeKhsFXY
knou5auUcNhht6yrKA2X9fZCkBKLcmvPOuarKG+lxOBZrz9uaF6IUPbjU0p8
qZzWba30399nUGJyXL5X+7FSNMarlPhjvGZbWps0ymMpkVXyJvA68/+9Yseb
El07tdj4Z1cC5bOUuNSzfpBJfQ7aNQomOBy5t66mUwHltZQILqr5PLS2DmNY
AVoJ8X9LzE+cFVF+S4mRBaU2Y0bKwdqNn5SQyVtvM7spojyXEgmeAz/NE9WC
jecYqPDz10nPTr4ZlO9Soeu2EPexO3Tw0pdvexX8mycbDDqZR3kvFbbHZoeb
1WWBhbu9VLDbMm+oc76a8l8q3OFI/TWPMpGvl4eGqvDe0/nYuKs5lAdToaTf
nv7b+paCtVMmqrBy6J37xlcklA9jnudl/fvvUjF6NgqUkJduThu5gUN5MRWi
LZ/5LvguwAzW8FFhmFvP++3axlF+TAXr0ZWHoofXgh3nm1WwmP/l8cZOIsqT
qeDeSbx+899SOLOBJBWut5rUL+CrhvJlKqyOP+6+2kcKVi4+qQLPesnaTHMF
5c1UmPMnOsNZlAeu3l69qMLSENfs3/tyKX+mQs/o0osVh9SoYf/8jwqHgmaL
FXPElEdT4a7RtrgvI1Ro/PMgzL3Zk//KbV4F5dOYe3aldEeNeyqGNBoCqCm5
sCFhRS7l1VQo96harm7rgcaPD6ig0802SLpdQPk1FQ505YZkrCzHXtY+UmGA
4WjLa+s5lGdTQRsf+eDo7ESwcQutCpdWBljnhAgp36ZC/2NxezbbFYE9jgoV
xgsfbnmsyqS8mwobyn1rW9mKodTDl9cqTB4+JG8Pwz8b828qFNpLymUd7oKl
+w0qBJlMzFy5K5PycGoMsGhjsH7cM9Lj1NAkJZ8NuJpN+Tg1Ph3+dXDmazXp
c2r0uTV4JbeNmPJyaqxwqN+edqiU9Do17Pu8vNDbMI/yc2qou/50rG+aQ/qd
GovcJ3Twf5FFeTo1uk+L2eD5XUZ6nhoL5jy8EW0ro3ydGqeH9ciuQwHpe2rs
D2ixtWMil/J2alSEO7nK9xaS3qeG6cmybuvNVJS/UyNkZW52y6oY0v/UyO+f
nhRoIKM8nhrPJfazj6ZqSQ9U4yDG+v3O01I+T41+aYKup0OiSR9UY+iLTV4O
SXGU11Pjbv7iwOkuOtIL1djXx3H5vgn/Pp+rxvU9QaZxGVrSD9W4H2A6SmyW
Q3k+NWy67/221jOD9EQ16ltFL094LaZ8nxpLPBaus+Jkkb6oRmzl6kmO0lzK
+6mRcbi3V6gzn/RGNVq1rnuoSfn399fUeJ/6dnLx7XjSH9U4/nXP9LBiFeUB
Gd642UhXYCMgPVKNOX+rVtTzyykfqAZ3llvARscC0ifV+Gwe9a1lQQHlBdVY
1z1mk+oel/RKNT4UJf+5/SWf8oNqOGXsPVYk05F+qYbPxVcPu1olUJ6Q4QWT
f9XeXxhPeqYal+weP/9PWkT5QjWezWn5wJLh3Y36phrThr4RDRibS3lDNTwu
dA7jCcSkd6rx5HHul5ttnlH+UI3A8U4Fx7m3Sf9UQ8tvWWwwvoryiGqcv/zS
5VJAAemhaniemRDnfSKG8onM+8zgyrqu45A+qoZv8uk3/YT5lFdUw3BaRubS
h9Gkl6pheUd6etv3QsovqnG27I7SxyiJ9FNmP6/cPspbmEt5RjUmbs8IfGKT
Rnoq876umbbzy/iUb1Rjwpf3G0PkpaSvMnW4Z9Z8u+vFlHdUY3XAvYe/98WR
3srU/aqG9B8pxZR/VKPbH8Pdf9L/6a9qVNoEpx0ZV0J5SDXaunNv2Mz59/ke
5r7FD1vp0S+P8pHMfli8uKHy5ZA+q4bifv+GlLP/8pLM+U+YEW/lJye9Vo04
nvuBiy4Kyk+qUVrk6OzGCSD9Vo0ttp/PbJlUSHlKNapnP3g9KF1Geq4a6VWn
OtqZKClfyXzdfey4uw5q0neZet3XLr2LAZfylmpUGZmcvucuJ71XDbFu0dHE
lDuUv1TjyrOcrTIGJzTqvxqcPxmmFn0XUh5TA79RHdVfGLzeqAdr8OLGwNcC
91DKZ2qY+ffFzOqnhvRhDY7Oqgy7NVhDeU0NruW05r1OTye9WIOFV4zcj0yN
o/ymBt1ym6Ve+KAg/ViD/hl7T11wklGeUwP7KL/SD/xS0pM1WGr6wrdpfS7l
OzWoOlIdvdnYm/RlDQ7k+e69zpVT3pNZr0Fb78R9//RmDeaYjTkuYvBgY/6T
WXfHDtsOLq0i/VkD73V518ouFFMeVAOTI4vbC4dfIT1ag3bPXmu7MPy+MR+q
QcKDEcdH/ighfVqDS2ErNk/6k0N5UQ1crZ+dM2dwRKNerUFKk9w4O66W8qMa
XH31wSBBJST9WoO566sjN9TrKE+qwbv5rX3encwgPZvh+Tv33X34l0P5Ug16
uyzzH3G0ivRtDSpsBy827Z5HeVMN5vWIGby0aRHp3RoMXvK0U2tmzjTmTzU4
cW3K+LsectK/mee1mXhjRM8iyqNqMCjUpremQxTp4Rp01zgf+za8ivKpGuw+
M2LbwhPppI9rwHu3dOCRTyrKq2pwura71a0DWtLLNWgoydz1ZGcJ5Vc1mBrY
pz9vTwHp5wyuuXVky9INmZRn1eBi582T6pxzSU/XYHVdzxNzKmWUb9XAa+3v
ef33xZK+rkHE/IM74s+IKO+qwSvv3eccm6aS3q7Bom8bFvccq6X8qwYPcOGm
2XAh6e8a9Dq9aty3on95WA3WvVy9Lm6TmPR4DXoU9fJwNVFQPlYD84xW94uY
+9Soz2vwKWa/xzgHHuVlNWg7fmXWpb1ZpNdr0LP2irM/w/Ma87Ma3PozfTf3
s470ew0+t+mlGGdaSnlaDcq68HNeFRSSnq9BPxvL217GGsrXauC5+ODPAxZc
0vc1MHu50PlW52LK22rwtiRw/jlEkt7PPN/8ffdevrmUv9XA4ldIu6th2aT/
ayB+13rcoX5llMfVYL2k37AGvpT8AGa90y5121ZfQvlcDeqSvGPudNaSP8Dc
lyE8kxZnxJTX1cBlccmh1kxfafQLmP2wW9iynuE/jfldDXRlBg+FzPxv9A80
ODjv/rSRNVrK82rw02K5zSGrDPITNNgb9uL91tHVlO9l7rebWYN3tpr8Beb3
nHqren5OR3lfDcZeTj/dc2MO+Q1acN6qm/7dkkD5Xy1itn/41X1ZLvkPWvjY
HDwyt4eO8sDMvbX7+6ANYsiP0P/dx50P238ooHywFnb+p76fyeeQP6FF/7yh
vJ1nMygvrMXuTGnwuo6p5Fdo0U81ufcBroTyw1osbChfLXteTP6FFkP7jCod
WZRPeWItDiFm1EgPKfkZWmy4HO/xsKGI8sXM+zQZNXn6QgX5G1p02+G7xe1w
POWNtSiY8nXKhZdx5HdoUdjee0P9//++mxbcs97Nm8wpIP9DC/e0ky/ePoqh
PLIWsyp4cr63nPwQLbZ02rfZc4+O8slaeEa06fJjooL8ES2u9jF5ld+5lPLK
WtwKyh+a109JfokW+XYpV8sM//09OS1GDcr7+vFpAPknWkQOf2L7cqeS8szM
+STV9bEbJSY/RYt4u2EjWqclUr5Zi9/VO6IWtuGSv6JFwoBm8SnPOJR31kI7
KL+h/14++S1a7K8IS7z4sJDyz1oML/nZ/lcon/wXLTJWjEj0bllIeWgtQg5z
OmRP4pEfo8Xn7zE7uvcqpHy0Fk5Diop8Y0Xkz2gRYGB5eT+zb415aS2mXPwA
D6auGv0aLU4dzJ4Vcl5L+WktsjqENzv3XkP+jRbCkF5bfbo8ozy1FsVnix8Z
fFeSn6PFuzB7q7D2PMpXa2G1OvlNFwafNfo7WrjNGaIS+udT3lqLtJYDdF0f
xJDfo8XkNXs2WLbNo/w1s04jr4bY5GLyf7S4s/NLV54uhvLYzHkIyqYElGWQ
H6RF19Qx/w1oVkj5bC1SmkekOI0uIX9IC9fAFmeEDkrKa2thkN7EdipzTo1+
kRatdna6YH5aQvltLWS/pD5/R+nIP9Li1eVbSrcGAeW5tfCqa70gNIhHfpIW
byvD9m4/LKN8txYO8Ts/cjolkb+kxVevq1a3Qwso761FpcHgo2Ujs8hv0iIx
pXR7v+Y8yn9rMT7zgzHHik/+E1NPKyvUd05nUB5ci3oPTtOamcXkRzHv/6vJ
k/FjuJQP16LXieXCae6Z5E9p0bPtlnsVwyWUF2f282KTaQ7uavKrtEiKqTxa
3zqZ8uNa6MbNGiF5XEb+FXP+xs6Jis1aypNrEbpCUG4h05KfpcWHwpk9by+I
oXw501/OdunjYVJA/lYujglWrf26iUt581y0HHNxw2YGDzb6XcwcnerZSWwY
TfnzXCz42WxI/SQ1+V+5cHGJ8P3pmvY/qu4yOsrz6xo4UIq7FqfFKcW1yMa1
uFNcimuB4m7FXYK7u0MgHgLxjLvPBKctrs/1f8/OrPV+ZAHJzO33dX77HHp0
DXYWis5csXEI62EaND7Wcf7mtRH06RrUKHM9alNcGutjGhT48/rCa1VT6NU1
GP9r1t0vHSmsl2nQxnw3V9w6E/26BgvTvotetDic9TMNyjjLJLddcpeeXYNi
jRO3rRxjZz1Ngy8FR5ZuEvDQt6v7WN9FEYkrHrG+pkH1tXOWtboRQ++uQav3
fwbyNbWy3qZBp01zszW1pdK/a9CrRM347u3jWX/T4Nvj+a9+Vu9N4uE1SF12
qsaBxFTW49T2qFPE2apkGn28Bt93m1Y10/gU1uc0aInZHU1w0ctr0G1SZX1s
UQvrdeq9rHr9SWVvPaKf12DCwe/bb30Sy/qdBvVz5gyPbrKBnl6D7Kt3JS2r
a2Y9T+2fHlnnHWh2m75eg7iaqaX6fn3I+p4Ga7ZOiPI3jKW310DX7nyNCtHH
WO/ToOPZlT/czfKI/l4Dw7lvm+/d1bH+p0Giu12eg/oYenwNikZ+/PHlqIx8
tgbHqrYZHt7+Gn2+Bg26Xv3j1x91rA9qYA651mdQ1jR6ffV9Im6eu7PJzXqh
BqvOl+sePirD72sw5rknf89aj1g/VNun5/12tx6G0/NrcOZ9XvcAn5H1RLV9
JxQvX84fSd+vwYA8jY81fRTK+qL6/rOffUzfkkTvr8Hfq6ptfj8ujPVGDaJr
lzyUe2Eq/b/avnm6Pq5m1bH+qL5P2MiLx+5qmAfQoOuhucWb+pysR2qwyWoZ
uSjeyHyABruNVd7FjDOyPqnBjbYV9JG1zzAvoEHft7WijswMZ71SgyMjq3wa
ejKe+QENqi4sneeXw6msX2pwuPCcc0Oe7GeeQIMer9se/eV8POuZGrxNj2t9
+GIslw80qLBnyLyrjTWsb2rwXasPhW+lpDBvoMGo/SGner3N6O+vwYXHR61f
W2f0N1XH03fjj/3g1rD+qY73+8/mFs5+l3kEdf5M11cs92cq66Hq8+Uc8t3a
11eZT9BgYO5hrQvWt7A+qkFgSPVc37Z7mFfQoNrMNZU2vNKzXqpR7y8L+mzq
E8X8gjo/3i26NDI2gvVT9fnvzvRd9J1lnkGDa5ffVPLfSmU9VYsdh8veyHcm
lvkGLYyuaumfbSmsr2pxrPK9Gw82PWTeQQvHgreDIuOvsN6qRd01n3q/rpXK
/IMWWX+q2ys3oll/1WJwtaddSzZ9yDyEFtOH7a0xIe0J67Fa1AytO+nTiBTm
I7TI9oO+7MDEB6zPalGqT2zs55wO5iW0OFh/UOHQvHGs12qRJ/MfUx/p9MxP
aJHvn+JjWzRIY/1Wi8Y7quVp0TeGeQot+v5xI2VAajjruVpUWrSyxVHTdeYr
tNizu1GBz32trO9qMfL4xNgi8yKYt9CiRGDMldJPHrDeq4Xl2NPH0+tomL/Q
4nOCttr+N3tY/9Vif7u+Fwq+NzOPoUXvw8vLFhlvZz1YiznZdvYLG5vKfIYW
o47O6HOtdzTrw1qMKHP94+u4VOY1tKiyIU/B3uV1rBdrUaOIbo+6AzG/oUXE
zFEDy4/Xsn6sVe8TZ1OGz05jnkOLxSXzL1gUFcl6shYvzk/L9nKZlvkOLdoP
mVxrlXrvk/qy2n6Tk7KdvWBk3kML27ekPhVqXme9WQtX3hcLGszKyH+o/dc6
vPdYdb+V+rMWMU/qNjmQlMY8iBbpw05P9C+NZT1abc+1LdvfvZTAfIgWRRvv
GvfXNw3r01r887L30CmlkpkX0SIp+x/fXR96i/VqLX46Pe6H/gsy+mtp8b5o
5Ja/1Xub1K+16GcaU3/+3DjmSbQwH9P97rz5iPVsLf6dNOXNydoW5ku0yHlj
99srxXWsb2uRPXbnh8993cybaPEwZObVpdGJrHdrsbC5t1+m0TeZP1Hf907r
+vp+GfVvLWaWXRZxroeLeRT1/b/10tXOo2M9XIvMdfIcKtj3EfMpWqwzHPmh
1rKM+rgW8VdGJ+32PGReRQvfqixnK/jusV6u9ne/rAOen7zP/Io6P/76xd2z
1CXWz7WYm/NA0qnzGuZZtNiQq9vpmFvhrKdrMbV9s6+Hd8Uz36L29+KD74o+
SGB9XYvLZS6sD9lrZt5Fi6pbLm6rsO0W6+1a/LoTh13VI5l/0eJ5p/R3dQtr
WX/Xooihs2HGVyvzMFpMGp09yb/Dwnq8Fjv7fnf83dtY5mO0qDOiddNdXSJZ
n9eiWY+07DvGxDAvo46HkFmHFgw3sl6vxd74k7/NP5PC/IwWV/OU/DijRhTr
9zqcrxy2/nDPVOZpdChVf3b9BucfsZ6vQ/aO73q2rrWF+RodYqJGdu36Zxrr
+zr1frXyT9eSNOZtdOgwrsnpRWetrPer5+wlo7P8slPH/I0OUfNMBbatNbH+
r8P2rBfLZF5vZB5H/b7QP0JylwyjB9Bhfofu54xP7czn6FBy5Yo3fY9E0Afo
sGJCgydLn4Qzr6NDyoi3u5rns9ALqJ9Xb3GP8V/jmd/RoUX5M2G/T0imH9DB
cyzuXnX9OeZ5dOg0IlOdcZOj6Al0aLrWFjP2qpH5Hh0WmvbfDj2URl+gg7vQ
r3H6awnM++hwILu266tqqfQGOnxt9ONdg+Ye8z86ODfb9t5e/oD+QIezn6r8
crm8lnkgHXKva1Qlre8VegQdTvmnz0s5q2c+SAfb7vefMw800yfocM095tv1
KqnMC+kQpnWUrXU6hl5Bhx4xb78PaX6E+SEdkoYbVqX3C6Vf0GFuhz1fBm4M
ZZ5Ibd+6hfbsn+ulZ9Ch9zTbvXYj05gv+t864b45+b/coW/QYefdnbkv17Iy
b6TDg7izTUOam+kddGgwaPWTaZUy5k2o7VNpp3XNj1r6Bx3+tg06fPuDg3kk
HbL9ezyqZveM/ig6DOhY3N84LZL5JB0eVav+9NSMOPoIHfq4C5UZuSqKeSUd
LJlXpXYcmEovocPm53PydGvlYn5Jbb9qEwusdTjpJ3R4035FycPFbzHPpI63
weadfSpZ6Cl0GLkqZ879v9xivkmHO4ML1+n4+Qh9hbrPjFmft2fDbcw76XDk
34shjR6l0luo4/u/KuWmPklg/kmHoTMSj+2eaKW/UNfRl2GjQn2JzEPpcL9G
l+QVOcz0GDqMKNXFNmpKOPNR6vdrOhf5wRBJn6HDmcQbHV65o5mX0uFY4Qvb
G6jjRbyG+n63W3R6a3nE/JT6fYEipSeq5yHxGzro9h4YOrSpl3kqdT3I0Seu
dtGH9Bw6dFndq86MRXrmq3Som23X3V17U+k71PkTOWpg5kYZeSsd5iV9RL4q
0fQe6vPOTNwzfGky81c6FPLV6v9Lpfv0H2r/j7/wrUPOKOaxdOhaZnSTE8nx
9CDq+LpUrXTJ31KYz9Kh59hdT0+ciacP0anz7KjtWZkbzGvpUNl+cW5I3zR6
ET3yFJk3vXr3KOa39NjU9EqXQZtu04/ood28vpO3toZ5Lj3G3rSNzufL8CR6
6Hf0ze/q9pD5Lj3qXnzsqlgggb5EjyMtL5dLKxDCvJcey7eWOGc6cYXeRI8v
i2693qSuS5L/0mN0iLF3x3su+hM9Jq+72ONrpmvMg6mf9zxl9pfvXfQoeiRX
vTblQrYo5sP0iH3y6PuNLW/Sp+jRs1PVtndaGpkX06PhtsVTX3WLoVfR49Yp
573XHcOZH9NjvK/79rv3Q+lX9DhRcNmuzRvjmCfTY2ketL564wE9ix5bX28e
V1C910m+TI/Vx5+uDcyNoG/Rw1uyfLMjMcnMm+mRr/DhGv8+SaV30aOjt/uY
2nUTmD/TY1+FkONzs56hf/lfn46YyPcjEplH0+PQA3PUkGop9DBqf720Vuw5
5zzzaWr7Ld5T9NDXaPoYPZ4VDzm/M93CvJra/u279Hr32EQvo0fZZi2ef/sv
kvk1PdoP2/H8xEgT/YweBb8l3x6WL455Nj1GVF1Y8maJBHoaPTb0PqmLSLUy
36bHmS59ko880NLX6LElR+GZ14u5mHfTI2/VY+eyjzlGb6NHy9n/tv9vmZP5
Nz1u7r+dtU6+6/Q3erQu8SG80BUD83B6hO8whjxvcZ4eR/15eMyVGuVTmI/T
Y0HbXB/7NY2gz9EjS+OJmVZ+NjMvp8eB/icmX1bXH/E6epS58qTxX+dTmJ/T
I3eBoqe7Noik39Fjb8j2sW1OmJin0yPi09bH1lpmeh49aoTuTFi6JJL5Oj36
VNnXK1m994nv0ePiqFJ1auxwMW+nx9CDGwsVVdcN8T5qf/7bVJ+lfRzzd3rc
Xdvir6SNBvoftb1GX/NOb2pmHk+P+Xt/2tIuOaM/kx53fpo8J9MjE/N56nha
MLX95OIJ9EF6HK+bdfvPNR4xr6fHDznbR24wP6QXUtv78Gjj5JUm5vf0KLY4
x+e/xqTSD6n947hhSl8XyjyfHm8LXsxUtWwsPZE633J++fUPs5n5PnU+Hli+
elkhI32RHjPnjPEUz25k3k+Pqf+tzjumUkY/dD3qFGux6h+Hhfk/dX4PPzv8
zalU+iM98pe41rVBjlTmAdX1ouyU8rvcl+iR1J+z/XjvP/W+LPlAPX66mHaj
yQQHfZIB+b/P1H1LASPzggb89GPb6ecyZ/RfN2B19xERxgXhzA8acHhBrtY/
T0yhXzIguneLnJ33G5knNKB41g0rnG9S6ZkMWP51fqPA0VTmCw14V+bIpzn1
Y+mb1J9TT43+wR7OvKEBpcb/5K8/20jvZECFNlMmPf+qZ/7QgOxZNn0rYUyl
fzLgj58qTm22J5F5RAPyxF6Z83lmKj2UAbq0KYVzZ45mPtGABa/GF92c30gf
ZcDd+hHXFt7RM69owNzaoz5bTibSSxmgybt30OONGf1RDfjUbMO+KQeP0U8Z
MKzP7n27711hntGAwIPDJe9lS6GnMmD3o8Ejyva5y3yjAUs7+Ya7plyirzJg
yOqjs6bMiGDe0YC0Nc1SoiIu0lsZsKF572ELb6Uw/2hAi0evn7RpZqS/MuC/
HsVavb5nZh7SgNTv+raYPiKCHssA6+3udS8kGZmPNMB1b5TL0yKGPsuAI90H
Gaar93/JSxrQ80rSyDVJO+i1DNC3m3Q4+z0785MGnJn6+fHhfDH0WwZsv3K8
Qo2yZuYpDWhUYem6ycOi6LkMmBxa6Je9KxOZrzTg0oTCeZ2bw+i71PYtcf9m
uaFG5i0N2GesfaJp84x+/QbUm7mzYB/13i75SwP+fvJ2S7mGD+i/DDi4u5Fx
wfUHzGMa8O/Rke0afrxOD2bAzy0iBsQNSGQ+04D+miIjD3S7Rx9mwM61EZk+
DnYwr2lAp6PD3/Y4fYVeTB1f5ouV7RMuMb9pwP6jg29XXpVCP2ZA58sdPu8s
lcA8pwFrhndZdifqIj2Z+vn7X2sHFEpjvtOASmXa3OlTLYG+zICcF8vtcVVP
Yt5Tfb4BoSdjdDp6MwN6hT29erhLKvOfBpz97Uktl3ouFX9mgG9e+ZiVv8Ux
D2rAoU+N4q9Oj6BHM8DQSvtq8/RY5kPV5339rnr56VH0aQbMOzT1VaM5scyL
GhB6sEk2k1FPr6Y+/4Kw47nLpjA/asDlxofwVR9Hv2bAlKe3TvRscol5UgNm
39tirfCji57NgIL91y6c+Dme+VIDSpe8W6fTRR19mwFFPucvcaVHRt7UgOv1
T7/Y+OYevZsBTQwJnYavTWD+VF0vbubvkL2Og/7NgOdZWo5rcFrHPKoBe/74
3ZlznpUeTh1XRxZ2a1MsjB7OiP29xt/7uk5PD2dE3PmuE/QTtPRwRhT6WGTQ
relp9HBGtNN06KR1x9LDGeH44+fF+dR9STycEQs+zV2z7d9H9HBGbP3uebWN
5pv0cEYczlT7YPMSafRwRmgW/vc5LdFCD6d+37fMi1PMWno4I3K89O9cszWB
Hs6IPA/7fRfSK54ezojmUbu3Jjsc9HBGVC9z0Drjrxh6OCNOrF5S8+4WIz2c
EbcGVT6+ZtZtejgjev9XrMdf0wz0cEaM2HHk3Y6IeHo4I86if7G5v8TSwxlx
3by12qarqfRwRpifft6x2Z5ED2fEEX/Lxq/eJdDDGTF7mr1I5YQMD2dEr9Cj
C0uaI+jhjCg/dnGn6g1D6eGM6Nqr+8mCn+Lo4YzYFW7+dZE3gR5Obd+Wqyfa
nsTSw6nfF1b/yrHECHo4I44eLHDueb4H9HBGdF/6Q5+I3E/p4dR9bV5il2Gl
dPRwRuyre/PxyZRwejgjnv8wv8+SOvfp4Yw48EPc3REL9PRw6v/PcCS/mJNE
D2fE7nKbpg87mzF/TX2euQPvlm1+mR7OiFODI+tEREXRwxmxOSnWM1Y9J4mH
M+Lk3H0XZucz0MMZ0V+Xd3vvdDc9nBH//T15wIJaSfRwRhw7ULLrMaOPHs4I
o6dr8ahT0fRwRly8a5/7YM1xejgjfuoYeFYcBno4Ixa2fpZvepsMD2dEo8fl
+g89kkoPZ8RfDRrPmPf6Bj2cEX+/9R+v4kihhzPifpnfvp5Ni6OHM8L9R2BH
2cUaejgjsgyzL8mkrg/i4YzQP1v1+fX6eHo4I87N/W11b+0xejgjbE7fYN1S
Az2cEU2HRk9uXziJHk7tjylfXdfUzxEPZ0R6WN1Ted3h9HBGZHrzbfeR0lH0
cEY0vv3q9ZhK5+jh1PY9lWXFua5R9HBG9b0uTgkpoKWHM0JbNr3+0HH36eGM
aPbj5PSre3T0cEY8jB+/8fu95+nhjDh4uXhCh0MP6OGMWGoc8XMuXRw9nBFD
/guJ2T4mmR7OiO/KnjvVLiSFHs6IDsW7VVp/QkcPZ0SZi8uemipH08MZsXFe
5fHm3630cEZcbXv5U/kbkfRwRsy93Kt1v50n6eHU+Td90KwtHSLo4dT1Y/ev
0V33mujhTIidfePj2ycR9HAm9KrXenXHfhH0cCZ4Sqe9e75CTw9nwv2zhSp2
+RZND2fCzwsnD7xpSqKHM2HHe7/vv+Sr9HDqOfp+PZ2pjYkezgTf6vy5t+3Q
08OZsO/wnTJfdLH0cCY8f1WhatZ3Fno4E7pO1P35vl4IPZwJBVoWeL9xpJ0e
zoRjuX+9e2v4QXo4E45OX9mw8fMYejgTqr2/pB02RkMPp57La6DGTzV19HAm
TErqV/bP5g/p4Uy4MKume+STGHo4Ez7kW3E68nEyPZwJD17saqd9eJUezoTa
H4a1elk+kR7OhGVzPpvdu1Lp4UxYWKBF96j9cfRwJrwtndznn1aR9HAmtDNP
6jBEvbeJhzOh2KuD9kIr0ujhTGjszH7sfaNYeji1/XsVbF1jQAQ9nAmTJz01
Nbacp4cz4fuNr8Lz33xAD6e2d+FVH7WzTtDDmVDDG90kEnfp4Uz4ttpZtsQB
Gz2cCem+mYU3vE+lhzMh192/hteecY8ezoSW7Ve2KVfiMj2cCRtblTkdrp63
xMOZsO77HXufPrXSw5nw68727RpMMNHDmZCcw/rumHovFw9nQjN3rZMvdkXS
w5kw8fTjVQUz2+nhTHh/fdlUjXpuFw9nQuYDrq1Vah6jh1P7b8SO8FvZtfRw
JnROMI8pXjxjXqoJdX7/d8oNbxg9nAmvvrQ5sexqGj2cCY2q/nvo9dMIejgT
YkL61U1R7/ni4UwoWyPn055DzfRwJpTM9LD70fvh9HAm9B/hCHmTkkIPZ8Lu
TMdfZLGl0sOZ0H5a4wYvv8bTw5mwpZguOj6QSg9nQqa9Zar8Xi6jv6QJG35u
XfbzEzM9nAkHy3y+2jk6mh7OBNv+zycK9XtID2eC+dcHr/vZ79PDqfOvyrNa
hU5kzIc1qevB4IpPItPo4UzI+WXx5o6bbtHDmZBtTd9NK14m0sOp8zRbjqMP
rA/p4UwwGTwP96rnXPFwJnxcePrmlE/R9HDq7++FnZu7LJwezoQuH+/2H7c8
hR7OhKyD+nSIUu994uHU8RaoXcVX5gg9nAm3/ZUuWPbE0sOZoC/eo+PIJ0Z6
OBPaPK+XvW1lHT2c+v+tGr7M3PAKPZwJiyf0bX6yYyI9nAk7ddtmHi4dTQ9n
RpsWzt1PHxnp4cw4e/mfDi/2u+jhzJh2LGr5tbmp9HBmxOWKGDA0axo9nBmj
fiuxe/pzPT2cGbcH/THwjCcjr29GRANt1Weuh/RwZpx6mONY7hAdPZwZJU6v
LPL4fSw9nBnj+yzb9+lvLT2cGUv6bRtyqoCZHs6Mws2r6CbdS6KHMyNnj+r1
Ou0w08OZMeg3TefmLaz0cOrz/b75euaSFno4M3rENjc2LaylhzPj1Ylc3evX
vUgPZ8aFNSFpu9cm0sOZ0Xjf0i95U2Po4cxIG1TxXM5+D+jhzFh/oPKK0JEZ
/TrNMB9p1i5k0216ODNGxJ9PaTDhJD2cGX/+0zHT19oR9HBm9fx2odLMPE56
ODM+V4u6VO51Gj2cGXV6Hjj7cFYYPZwZA2/8WbLLm1R6ODOK5qnlbLQgnh7O
jCbDKyzr8vEhPZwZ/f41LEpZHE8Pp37/4xvDB/aJp4czI1urjfh8MmMelRn6
trYPybtC6eHMyBrRfPy+Jffo4dT2+Wj6u+nlJHo4M2qOHd+/dDcnPZwZeS9o
Xp35IZoeTm2v3OZn199G0cOp4+d+/WtN4zI8nBmX8/fI1q3zXXo4M3r9USRk
aV83PZwZ3ZOnbX3wOZUezow10Qf+Kpg9hh7OjJKFItdc6ZxMD2fG3NmdFiyJ
CqeHMyNLu0fdeoXG0MOZ0fD2flOvZbH0cGb0KV2peEeE0sOZUTf6a+DVVQ09
nPp83d+sSpiqoYczw7onokeKup6LhzPjxZNSt29UcNDDmVGw2SH7ol8T6OHM
6OvpOaZnWwc9nBmW3+8sa9PHRQ+n9odhCLY+jaeHM6PTgbikgxWu08OZ8ezZ
rjw3z5rp4cxITjw0fPFRAz2cOn5+9fkmPYukhzPjge3r2QqeR/Rw6rwIzzTp
7KYUejgzOvZrf67zCA89nBlXLg9e9Tg+nB7OjM6/1B3w300bPZwZhT7XHNd3
8yN6ODNWZfO3+XRFRw+n9s/od6+zdn1ED2fGodh5o2f/56KHU+fbuXX+sx0S
6eHU8bOysX5dgwR6ODPy9Kw9yFE2iR7OjFuhSb1eZ3LSw5nV89CfFY/muEwP
Z4a/8q+Lrv1ppYczw9B/8vapYyPp4cxolH753IdGcfRwFnTLf/Jit3QHPZwF
if8UHh9e9yo9nAW9m6VdvH4mox+rBUP+fD4udnsiPZwFQ5fULGu6lEwPZ8Ha
9U7/FPU8KR7OgvVjjkSvbaChh7OgYM0sf7bcGEUPZ8HNiOxtb82NoYezwLt5
Zanu2630cBYsuX5h9uQfzfRwFvyxeGvcidzJ9HAWFPlYNPO0g7H0cBY06bkn
58YsGno4C0798vfuH8+fpIezYEJyV8/XaUZ6OAv8NYf3K7PuEj2cBb7/cja5
sDKeHs6C8sOvFzc3D6OHs2CF9+LI7dXT6OEsGLBm+pbM1qP0cBbUnPfdnPVL
NPRwavuU792vaJiGHk5tv+jnWVqvcdHDWZDlt6Wfbg8y0sOpv69V6FiOjU56
OAuSvi1vWDlPDD2cBaMSHnd8kiuUHs6C3/bVP3H3TDg9nAVXchXcG9f7ET2c
BX0/RE7tbTDQw1lQf838DheWpdLDWTD26oDF/8Q46OEs6Hwl8taOLwZ6OAum
9l7u2nM/nh7OggTvkEsfB92nh7OgWt+zP43tlkIPZ8GnR83HHm6X4eEsWOQ/
nu3wsFR6OAuqu1c3LKyet8TDWVD1XGzEmhI36OEsiPhtWftBvWz0cBY8yP/U
+7yQlR7OgsMVzpgaqfd98XAWFCg6Mc+bTDfo4Sw43TUwttQeDT2cBatiH3y3
VGOih1Pfr2frdsb/wunh1PFRsu2ryh+v0cNZ8LTn69r/9TbSw1kwPGdgHiJj
6OEsmLv/wud+R5Po4SwovHJVo41FrtLDWdC+X6t2K8Li6eEsuP7vW5RRzyfi
4dTxtaXRuXMrEujhLHDUKJHr5edIeji1v8qcWbVlTDQ9nAUVLUvr9R0VTQ9n
wcORf6d/vHqWHs6CYXUjy704/4AezoKtX/IP+mf1YXo4C4wF7QgfbKOHs6DO
tW+zflx1jx7OgrS39i0D6mnp4dTvi/r2qu5NCz2cBcntxt+6tjeZHs6Cvw1l
w2YEDPRw6vMMzZw/kHqVHs6CaetDG3wpGEsPZ8FizeDZvewaejh1Pi/p2nfy
WDM9nAWpWc6NPrf1Pj2cRT2XnN174+dEejgL0lf2KnxlawI9nAXvur4zuDcm
08NZsOZr1vBQu5YeTl0f2n1pPGjtA3o4K+pmPXOycrEMD2fFm4bDkvcuS6CH
s+LjwbQBK+ol0MNZcXLHvMwPlkfSw1lRaNv15IctMjycFYvqFO5uvmOgh7PC
eHXvsI5RsfRwVjw/1TGu2aQYejj1+xZ1XblSXU/Ew1nRI/+bli36pNLDWVGq
1+DdFxom0cNZod2ZpV61gVfp4ayIbLSy0vtcCfRwVqy4dPrUyCzJ9HBWvGz3
7eillnfo4az48fths3bMSqCHsyJ8xqiQmZuS6OGsyHpiwKF86j4iHs6K+Unr
ck7Or6GHU78/an5Mwd3J9HBWlN916bpJPXeJh7PCt2tiv845Q+nh1PYYe7ps
iz8y+hNb8aLPiTy7V4bSw1lx+bd6E7t8y+hXbMWcsyMCy2qG0sNZ4Xhir76u
TAo9nPp9/zbofLqekx7OinHpTT/4khLp4azonmfpofcHUunhrDhSYf2Agup9
WDycFauSU4otf5hCD6d+39YrvSNWX6aHs6Lx4HeNLu9z0sNZ0bpNzM8b+pnp
4azoGLEmZeycjPlBVvVctb/Ymkqp9HBWvE963mDMgwwPZ8XsImsuDCpwgx5O
HU/ffd1dpYCGHk79vCZ7Lz1ddIcezorchfLfyZspiR7OipBqeUIHFYymh1P7
71nt93/8qaOHs2Jg3crPjqdkeDgrHroGXvG3SaOHs2J/0QtrW1TX0cNZce1k
rO63CAs9nBX1llzLm6NZBD2cFQ3yDl92xB1BD2dFm6G/PttZ8AE9nBXTPKce
70xNoIez4repA6Pql7pPD2dF/deP621R9yXxcFbEH+i2/miUjh7OCtuJxhdK
nb5ED2fFeP305TUWpNHDWfG2wPNNrpsZHs6K5DmhufJ/SqSHU+8lXzvlOH7p
ID2cFXELfuv0Rd3fxcNZYY9e9uCAxkkPZ0XqnfKD217X0sNZUeF4/VOftFp6
OCuGvG24aJw6zsXDWbFx/PfH3YXD6eGsmOFfljfvDRM9nBURdeJ69UhLoYez
Ym13j7/uHAM9nBWHf3Nf2ts1nh7OiiuvPlZ+syWcHs6KC7U/vbwYl0QPZ0VS
8fg2SZYMD6e23+XFDUxeGz2cFZ3zvey2N+4+PZw6X185/n33NpUezoo6DSdt
vfbhPj2cFR06FJnpUc834uFseDA7d2ivrzH0cDa8bfp17oLbSfRwNuxvPrtD
mU5Oejgb0qfNL97kTwM9nA2BSZXfDxgRRg9nw7rh311vod4vxcPZsDB6eLfh
0Xp6OBt+nPq+4s5qGf1wbLhQb87sEup8Ew9nw9I1bdr93v8CPZwNtRa/LT1u
o4Eezoaux1ZWu5E9mh7OhgoX3ydsna6lh7NhC46PKmBPo4ezoc6tnRumjYmg
h7NhRa3fQ+qN1tLD2XB6RedMCclR9HA2RG6qYSuyO5wezoara/wXbyy8Qg9n
g3Xq+GJlGz2kh7Nh2o5RfxhvZfS/tkFTr+vJPvc19HA2dGzpnri1qYYezoa/
v34rdW/nFXo4G66t2PPv7B1X6eFs+Da7z/K0SnH0cDYsX/Pu9tMrV+jhbNh6
zrRpyUUNPZz6/z9rH3+cm0IPp46LEYvL9t6hoYdT7xm7rEcOtw2nh7Phw1/R
3YvFx9HD2fDH8rx5R92MpIez4dmVVeUOnDxDD2fDoTs/nH/a+AI9nA0lro+L
Wfy3mx7Ohj7X52T+fmAqPZwNrf/M0XJ7uVh6OBs63/3lzKCPkfRwNhw7/qTN
4cI2ejgbrtRYXvZeQiI9nA3VDtws9Or3MHo4G1Yi1fIxdzg9nA3bGubq/8gS
Tg9nw6tNW8vP3mygh7PhRULX6Ps6Az2cDS3j5lt9d+/Sw9lgyrvzhDXNRA9n
g+PR+b9+DrPTw9kwbr/uwqsFd+jh1PE6bNdPeTpF0cPZ8CnXad2QFrH0cDaU
O+tvkWtgGD2cDVOG+Res7Z/h4WyIj3s//cPoDA9ng7t4tjVvCqfSw9kwZGqm
sh9K6ejhbLDvMD56HZ9GD2fDhC3enJmKaenhbCi2/sZf5ooR9HA25Ckx8u2J
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
OOnhHLiUOnD82u5meji1P/rO6/2nXkMP58C16lV2Z5vlpIdTzxUVoww7rqfR
wzlQ63nyqQ8LEunhHHj47l7+fuYoejgHVi5YpdlXzEwP58TGbP12bdh7getx
Tqzh34uPcyKB/1/W55yozp8vXs6JbxXk98t6nTP4+cTPOdGMn1/W75w4x+8n
nk59D35/Wc9Tf+b2EV/nxBRuP1nfc+Idt694Oyec3P6y3ufEau4f8Xfq93P/
yfqfE4O4f8XjOfGI+1/WA514wuNDfJ4ToTx+ZH3QiZY8vsTrqe/P40/WC534
k8en+D0n8vL4lfVDJ37h8S2ez4lePP5lPdGJlzw/xPc5oef5I+uLTgzn+SXe
z4mGPP9kvdGJ+jw/xf85cY/nr6w/OvErz2/xgE7s4Pkv65HO4PVBfKAzeP2Q
9Uln8PoiXtCJMF5/ZL1S7R9en8QPOvGa1y9Zv3QGr2/iCZ3w8fon65lOpPL6
KL7Qia68fsr6pjo+eH0Vb+gMXn9lvdOJmrw+iz90oi+v37L+qX4fr+/iEZ04
xuu/rIc6g/cH8YlOrOL9Q9ZHnTjB+4t4RWfw/iPrpeq6xfuT+EVn8P4l66dO
9OD9TTyjE5G8/8l6qhP5eX8U36iOX94/ZX3ViTe8v4p3dCKE919Zb3UG78/i
H53YwPu3rL86cZX3d/GQThTh/V/WY534+lSeD8RHOrGLzw+yPuvEeD5fiJdU
+4vPH7Je68QCPp+In3SiJ59fZP3WiYt8vhFP6cQdPv/Ieq4T9fh8JL7SiaV8
fpL1XSdK8PlKCiZOTOfzl6z3OrGSz2fiL52I4vObrP+q45vPd+IxnfiJz3+y
Hqw+P58PxWc6g8+Psj7sRDY+X4rXdKIKnz9lvdiJiXw+Fb/pxDg+v8r6sRM3
+HwrntMZfP6V9WQnUvh8LL5THT98fpb1ZSeq8flavKcTT/n8LevNavvx+Vz8
pxM/8Pld1p/V9YDP9+JBndjM539Zj1bXJb4fiA91YiffH2R92okvfL8QL6rO
R75/yHq1M/h+In5UbX++v8j6tTP4fiOe1ImifP+R9Wx1feL7kfhSdR/h+5Os
bzvxge9X4k2dWMH3L1nvVtdDvp+JP3ViOd/fZP1b/Znvd+JRnbjE9z9ZD3ci
nO+H4lOduML3R1kfdwbfL8WrOoPvn7Jerq4PfD8Vv6quj3x/lfVzZ/D9Vjyr
ul7x/VfW053B92PxrU7k4vuzrK87UZXv1+JdnSjA929Zb1fXf76fi391YjHf
32X93YnSfL8XD6s+P9//ZT1eHT9cHxAf60Qdrh/I+rwTxbm+IF5WHe9cf5D1
evV9uD4hftaJPly/kPV7Z3B9QzytM7j+IZcDJ3ZzfUR8rTO4fiLr+87g+op4
Wyfucv1F1vudwfUZ8bfO4PqNrP87YeD6jnhcdT3h+o/UA9TzDteHxOeq6ynX
j6Q+oJ7TuL4kXteJ7Fx/knqBE0lcnxK/6wyuX0n9wInDXN8Sz6uOf65/ST3B
GVwfE9/rDK6fSX3BGVxfE++r7q9cf5N6gwvbuD4n/tcVXL+T+oMLNbi+Jx7Y
hRSu/0k9woXJXB8UH+zCRa4fSn1C/XyuL4oXVv+f649Sr3DhB65Pih92YSTX
L6V+of6e65viiV04zPVPqWe4guuj4otd2MH1U6lvuILrq+KNXbjL9Vepd7hQ
huuz4o9dyMX1W6l/uILru+KRXcH1X6mHuODh+rD4ZFdw/VjqIy54ub4sXtmF
JK4/S73EhYlcnxa/7EIlrl9L/cSFL1zfFs/sQjmuf0s9xYXxXB8X3+yCi+vn
Ul9xQc/1dfHOLjTi+rvUW1x4zvV58c8u/Mv1e6m/uBDC9X3x0C6s4fq/1GNc
wfqA+Gi1P1g/kPqMCydYXxAvrZ4bWX+Qeo0L7VmfED/tCtYvpH7jCtY3xFO7
sIH1D6nnuOBmfUR8tQvTWD+R+o4rWF8Rb+1CPOsvUu9xoR7rM+KvXbjB+o3U
f1zYzvqOeGwX5rP+I/UgV7A+JD5bHV+sH0l9SG0v1pfEa7vQifUnqRe5gvUp
8duuYP1K6kcu2FjfEs/twj3Wv6Se5EIE62Piu9X2Z/1M6ksuLGN9Tby3C7VZ
f5N6kzo/WZ8T/63OB9bvpP7kQkfW98SDu1CH9T+pR7mwkPVB8eEunGf9UOpT
LlRhfVG8uAtLWH+UepUL61mfFD/ugpn1S6lfuRBgfVM8uStY/5R6ljpeWR8V
X+5CDOunUt9Sn5/1VfHmLtRi/VXqXS6EsT4r/tyFrqzfSv3LFazvikdXxw/r
v1IPc+E068Pi0124zvqx1MfU52V9Wby6+r6sP0u9zIVo1qfFr7swlfVrqZ+p
4531bfHsLgxi/VvqaS5UZH1cfLu6vrB+LvU1F6ysr4t3V5+f9Xept7nQmPV5
8e/q/7N+L/U3F16zvi8e3oVJrP9LPc4FB32A+HgXEugHpD7nQgP6AvHyLnSj
P5B6nfq+9Ani511oRb8g9TsXGtI3iKdXn5f+Qep5LlyijxBf78IB+gmp77mC
vkK8vdp+9BdS73MFfYb4exf20m9I/c8V9B3i8V0A/YfUA11BHyI+34U/6Uek
PugK+hLx+i5spj+ReqH6vvQp4vfVn+lXpH7oCvoW8fwuzKJ/kXqiK+hjxPe7
cJR+RuqLLvSgrxHvr+6v9DdSb3QFfY74fxcs9DtSf1TnN32P5AFcuED/I/VI
9f3pgyQf4MIC+iGpT7rwjL5I8gKuoD+S5RwXDPRJsntdmEe/JPVLF76nb5I8
gTpf6Z+knunCT/RRki9w4RX9lNQ3XUFfJXkDdb2kv5J6pwt2+izJH7hQln5L
6p+uoO+SPIILb+m/pB6qrj/0YZJPUNuPfkzqo2r70ZdJXsGFovRnUi9V+4s+
TfILLvxDvyb1U/V96Nskz+AK+jepp7oxjj5O8g1ubKCfk/qqO+jrJO/gxmP6
O6m3ulGGPk/yD248ot+T+qsbi+n7BBi7sYT+T+qxbkynD5R8hBvx9INSn3Vj
DX2h5CXcSKI/lHqtG1XpEyU/of6eflHqt27Upm+UPIUbWvpHqee6MYk+UvIV
bnV+i5+U+q4b1+grJW/hDvpLqfe6MZA+U/IX7qDflPqvO+g7JY/hxi36T6kH
u9GGPlTyGW4Uox+V+rAbC+hLJa/hxij6U6kXu4M+VfIbbpykX5X6sTvoWyXP
4cbf9K9ST3bjLH2s5DvcyEU/K/VlN47Q10rew41o+lupN7sRSZ8r+Q83qtDv
Sv1Z7R/6XsmDqOOB/lfq0W58pA+WfIj6//TDUp92B32x5EXcmEB/LPVqd9An
S37EHfTLUr92oxF9s+RJ3EH/LPVsd9BHS75E/Tz6aalvq/ODvlryJu6gv5Z6
txvD6LMlf+IO+m2pf7uDvlvyKG4Mp/+Werg76MMln6L+nn5c6uNuLKcvl7yK
G2Xpz6Ve7g76dMmvuOGhX5f6uTvo2yXP4sYe+nepp7uDPl7yLW6UoJ+X+rob
Y+jrJe/iDvp7qber30+fL/kXd9DvS/3djUL0/ZKHUccf/b/U491YzXyA5GPU
9mJ+QOrzbgxgvkDyMm50Yv5A6vXq+GA+QfIzbnRlfkHq9240YL5B8jRu6Jl/
kHq++vzMR0i+xo3nzE9Ifd8dzFdI3sYdzF9IvV+dP8xnSP7Gje7Mb0j9343D
zHdIHseNnsx/iAdQ35/5EMnnuIP5EfEB7mC+RPI6blxi/kS8gDuYT5H8jtq/
zK+IH3AjjvkWyfOo/cv8i3gCdzAfI/kedT1hfkZ8gRvtma+RvI+6XjN/I97A
DTPzOZL/caM/8zviD9zIz3yP5IHceMb8j3gENyz/Xz7IHcwPiU9Q5wfzRZIX
UtuP+SPxCm40ZT5J8kNufG4r+SXxC27MZ75J8kRuFGf+STyDG+uZj5J8kfr5
zE+Jb3AH81WSN1LHA/NX4h3ceMh8luSP3NAxvyX+wY2CzHdJHsmNX5j/Eg+h
jh/mwySf5MbXcMmPiY9Q9yvmyySv5EZO5s/ES7gxi/k0yS+p84X5NfETbjRj
vk3yTOr+wvybeAo3+jEfJ/kmN+oxPye+wo0vzNdJ3smNn5i/E2/hxmzm8yT/
pD4P83viL9ywMt8neSg31jL/J+VcN0zMB8rruRv1mR8Un6HuZ8wXSl5Kna/M
H4rXcAfziZKfcgfzi+I33BjMfKPkqdzB/KMsQLuD+UjJV7mxiPlJ8R3q+s98
peSt3CjK/KV4DzdOM58p+St1P2R+U/yHG2HMd0oey43RzH+KB3HjAfOhks9y
B/Oj4kPcwXyp5LXcaM38qXgRD/Yynyr5LQ8WML8qfsSD71pLvlXyXB60Zv5V
PIkHBuZjJd/lwQ3mZ8WXeJA1XfK1kvdSP4/5W/EmnmA+V/JfHuiZ3xV/4sFX
5nslD+aBhflf8SgeaJkPlnyYBzmYHxaf4kFu5oslL+bBfOaPxat4sI35ZMmP
eeBlfln8ivp9zDdLnsyDw8w/i2fxYD3z0ZIv8+BjiOSnxbd4sJ35asmbedCB
+WvxLh7sYD5b8mceDGB+W/yLB6WY75Y8mieY/xYP4wnmwyWf5gnmx8XHePCa
+XLJq3mC+XPxMh50Yj5d8mseTGF+XfyMB2/2S75d8myeYP5dPI0H45mPl3yb
B02Ynxdf40Eq8/WSd/OgGfP34m08wXy+5N88wfy++BsPujPfL3k4D7Ix/y8e
xxPsDyD5OHW8sH+A+BwP6rK/gOTlPMH+A+J1PMjO/gSSn1Pbn/0LxO94EM3+
BpKn86Ap+x+I5/GgEPsjSL7OE+yfIL5HbT/2V5C8nQeL2H9BvI8HS9ifQfJ3
HtRn/wbxPx5EsL+D5PE8eMf+D+KBPLjM/hCSz/NgOvtHiA/yYDn7S0hez4Pq
7D8hXsiDI+xPIfk99XnYv0L8kAf52N9C8nyeYP8L8UQePGN/DMn3eXCA/TPE
F3ngZ38Nyft5MIL9N8QbebCb/Tkk/+dBDfbvEH/kwT3295A8oAdu9v8Qj+RB
X/YHkXygOh/YP0R8kgf52V9E8oIe2Nh/RLySB/PYn0Tyg+r6xf4l4pc8wf4m
kif04Af2PxHPpM4f9keRfKG63rF/ivgmD4ayv4rkDT1Yxf4r4p3U9mJ/Fskf
ehDP/i3in9T5xP4ukkdU5xP7v4iH8gT7w0g+0YMT7B8jPsqDWuwvI3lFD769
lv4z4qXU/mN/GskvevCS/WvET6nfz/42kmf0wMn+N+Kp1O9jfxzJN3pgZP8c
8VUeZGZ/Hck7euBi/x3xVh7cZX8eyT+q7cP+PeKv1P5hfx/JQ3rQkP1/xGOp
+xX7A0k+0oMK7B8kPsuD6+wvJHlJT7D/kHgtT7A/keQn1fnK/kXitzzox/5G
kqf04BT7H4nnUvcP9keSfKUHp9k/SXyXul+wv5LkLT0IYf8l8V7qfGZ/Jslf
erCf/ZvEf3nwlP2dJI/pwR72fxIP5gn2h5J8pifYP0p8mAfH2V9K8poeHGL/
KfFi6vrA/lSS3/RgE/tXiR9TP4/9rSTPqbYv+1+JJ/NgEPtjSb5T7Q/2zxJf
5sFR9teSvKcHJvbfEm/mwVX255Lyqgcn2b9LXrc8wf5ekgf1BPt/iUdT1wf2
B5N8qPq+7B8mPs2Dn9lfTPKinmD/MfFqHuRkfzLJj6o/s3+Z+DUPCrC/meRJ
PUhh/zPxbJ5gfzTJl3qC/dPEt3kwl/3VJG/qgZ3918S7edCZ/dkkf+pBQfZv
E//mwSP2d5M8qrpesP+beDgv2rA/nHg4L/ayf5x4OG+wv5x4OG+w/5x4OC8a
sT+deDgvLrF/nXg4r3qflP524uG8KMP+d+LhvCjK/nji4bzB/nni4bzB/nri
4bzB/nvi4bzYwf584uG8wf594uG8WMj+fuLhvPiN/f/Ew3lhZn9A8XBeHGD/
QPFwXgTYX1A8nBcX2H9QPJwXPdmfUDycFwPZv1A8nDfY31A8nBcV2f9QPJw3
2B9RPJw32D9RPJw32F9RPJwX+9h/UTycF6PYn1E8nBcd2b9RPJwX29nfUTyc
F93Y/1E8nBeV2R9SPJwX39g/UjycF8fYX1I8nBer2X9SPJw32J9SPJzafuxf
KR7OizT2txQP58VF9r8UD6f2L/tjiofzBvtniofzYiv7a4qH8+IU+2+Kh/NC
x/6c4uG86MT+neLhvMH+nuLhvHCy/6d4OLX/2R9UPJwXKewfKh7Oi3/ZX1Q8
nBfN2H9UPJwXa9mfVDycF4/Yv1Q8nNo/7G8qHs6Lxex/Kh5OfT/2RxUP54WP
/VPFw3mD/VXFw6nzqbn0XxUP5w32ZxUP58Ui9m8VD+fFbfZ3FQ/nxXz2fxUP
5w32hxUP5w32jxUP58Vo9pcVD+dFVvafFQ+njmf2pxUPp85v9q8VD+fFB/a3
FQ/nDfa/FQ/nxTL2xxUPp64H7J8rHs6LGPbXFQ/nDfbflRuSF6vYn1c8nBfl
2b9XPJwX+djfVzycN9j/VzycF1/ZH1g8nBf/sX+weDhvsL+weDh1PrD/sHg4
dfyzP7F4OC8msn+xeDgvZrC/sXg4b7D/sXg4L6LYH1k8nBev2D9ZPJwXXdhf
WTycF0XYf1k8nBc32J9ZPJwXxdi/WTycF2fY31k8nDfY/1k8nDfYH1o8nBdz
2T9aPJwXudhfWjycN9h/WjycFyfYn1o8nBeD2b9aPJwX59nfWjycF/3Z/1o8
nBc/sz+2eDgvItk/WzycN9hfWzyc2p/svy0ezotS7M8tHk5dH9m/WzycN9jf
WzycF/PY/1s8nBdh7A8uHk79mf3DxcOp+yP7i4uHU9ub/cfFw3kB9icXD+dF
ZvYvFw/nxWb2NxcP5w32PxcP58V69kcXD6euF+yfLh7Oi8Lsry4ezou27L8u
Hs6L0uzPLh7OixXs3y4ezovH7O8uHs6LEez/Lh5OfT72hxcPp84v9o8XD6e2
F/vLi4fzYj/7z4uHU8cn+9OLh/MG+9eLh/PCwf724uG8+Jv978XDebGF/fHF
w6nPz/75Ui5T5xv764uH82Iy+++Lh1PHL/vzi4fzoi7794uH86IH+/uLh1PX
Q/b/Fw/nDc4HEA/nDc4PEA/nDc4XEA+n9g/nD4iH8wbnE4iH82Ip5xeIh1PP
J5xvIB5OXS84/0A8nBd2zkcQD+fFeM5PEA+nrs+cryAeTt1vOH9BPJx6vuB8
BvFwPlTk/AbxcD5k4XwH8XC+4PwH8XA+7OJ8CPFwPnTm/AjxcD6s4XwJ8XA+
FOb8CfFwPoRyPoV4OB9mc36FeDgf3JxvIR7OhzqcfyEezhecjyEezocLnJ8h
Hs4XnK8hHs6H8Zy/IR7Oh3eczyEezocTnN8hHk79PM73EA/nw23O/xAP58MY
zgcRD+dDGOeHiIfzYQLni4iH82EI54+Ih/NhG+eTiIfz4Sjnl4iH8+E855uI
h/PhIuefiIfzYTDno4iH82Ee56eIh/PhFeeriIfzBeeviIfzBeeziIfzwcr5
LeLhfOjP+S7i4XyI5fwX8XA+9OV8GPFwPuTk/BjxcD6s5XwZ8XA+HOT8GfFw
PjTkfBrxcL7g/BrxcD7s4Hwb8XBq+3H+jXg49fs5H0c8nC84P0c8nA8LOF9H
PJwPGs7fEQ/nQ2/O5xEP58N9zu8RD+fDZc73EQ/ng4Xzf8TD+YLzgcTD+ZCP
84PEw/mC84XEw/ng4vwh8XA+fOB8IvFwPuzj/CLxcL7gfCPxcD7M5/wj8XA+
NON8JPFwPrTn/CTxcGp/c76SeDgfWnH+kng4H3JwPpN4OF9wfpN4OB9Wcb6T
eDgfSnD+k3g4H+ZwPpR4OB+ycX6UeDgftnK+lHg4HyI4f0o8nC84n0o8nPr8
nF8lHs4XnG8lHs4XnH8lHs6H3JyPJR7OhzKcnyUezodznK8lHs6Hm5y/JR7O
h/2czyUezofXnN8lHs4HcL6XeDgfanL+l3g4HzZxPph4OB8mcn6YeDgfinG+
mHg4H55y/ph4OB/qcz6ZeDgfKnN+mXg4X3C+mXg4H37l/DPxcD5M4Xw08XA+
rOf8NPFwav9wvpp4OB8Ocf6aeDgfIjmfTTycD485v008nC843008nPr5nP8m
Hs6HrJwPJx7OF5wfJx7Oh1mcLycezodHnD8nHs6njhuZTyceTv0959eJh1PX
E863Ew+njlfOvxMP5wvOxxMP54Od8/PEw/mC8/XEw/nwkfP3xMP5UJ7z+cTD
+fCQ8/vEw/nwjPP9xMP5UJzz/8TDqT9zPqB4OLV/OT9QPJy6nnG+oHg49fk5
f1A8nA8ezicUD6eOd84vFA/nC843FA/nQ1vOPxQP5wvORxQP58NSzk8UD+cL
zlcUD+dDOOcviofzoS7nM4qH86Ea5zeKh/MF5zuKh/NhJOc/iodT92vOhxQP
p54POD9SPJy63nO+pHg4HwokyvxJ8XDqfsP5lOLh1Pbk/ErxcOr3c76leDgf
9nL+pXg4H2pwPqZ4OB/6cH6meDgfGnG+png4Hwpx/qZ4OF9wPqd4OB+OcH6n
eDhfcL6neDh1veH8T/FwvuB8UPFwPszg/FDxcD6M5nxR8XC+4PxR8XA+1ON8
UvFw6njg/FLxcOp5hPNNxcOp44PzT8XD+bCd81HFw/lxnfNTxcP5kZ/zVcXD
+dGV81fFw/nRhPNZxcP5UYPzW8XD+YPzXcXD+TGI81+lYOvHQc6HFQ/nR0vO
jxUP50cS58uKh/NjBefPiofz4zLn04qH82ME59eKh/MH59uKh/PjJ86/FQ/n
xyfOxxUP5w/OzxUP58d6ztcVD+cPzt8VD+fHMc7nFQ/nRx/O7xUP58cJzvcV
D+fHHs7/FQ/nD84HFg/nD84PFg/nR33OFxYP5w/OHxYP50cs5xOLh/MH5xeL
h/NjHecbi4dT34/zj8XD+dGK85HFw/lxlvOTxcP5MYvzlcXD+TGO85fFw6nP
z/nM4uH8aMD5zeLh/LByvrN4OD8acv6zeDg/znA+tHg4f3B+tHg4tf85X1o8
nD84f1o8nB/tOZ9aPJwfjzi/Wjyc2n+cby0ezh+cfy0ezo8NnI8tHs6PnJyf
LR7Ojzc5ZL62eDh/cP62eDg/pnA+t3g4P7pwfrd4OLV9Od9bPJwf2Tj/Wzyc
Hzs4H1w8nPq+nB8uHs4fnC8uHk7tP84fFw/nRwfOJxcP5wc4v1w8nDpeOd9c
PJwfJzn/XDycH585H108nD84P108nNofnK8uHs6PJZy/Lh5OfT/OZxcP58dE
zm8XD+cPzncXD+dHdc5/Fw+njgfOhxcPpz4f58eLh1PHH+fLi4fzB+fPi4fz
4w/OpxcP58f3nF8vHs6PmZxvLx7OjzGLi5TeXM5AD+fHc2OzEts7XKKHU+dr
j2h72/g0ejg/wgstup6o7rfi4fww1W5e/eE+Gz2cH7cvOWc8znGTHs6P7csz
N5m3KYUezo9SuYbsclR7SA/nx4+zusc02XSPHk5t38+ZT9SpGUEP54d/c3gW
TzMzPZwfN3s6UnbMCaWH86PuvX8KhfePoofz48Yt6/CyWSPp4fzwZKo4w/bz
fXo4P95vW9N/+ykDPZzaf1dH/hte8AY9nB8vnGfGD58WTw/nxzZ/jg6njkXS
w/nxZNWWpI0founh1Pnz+dGBbzV09HB+5BlZcFmbOQ/p4fz4cifzuMYj0ujh
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
uu6Oy0mpgIfjqH7slkm5nrnwcOx+m/DpjaVkeDiOmsyZ3rBvSSY8HOuPQWZ9
PWz0+8dz5DW4u9PiC/r9qzjaYtgluPjhI3g4lt+Dqswvzg+Ch+PokuGEi/7z
H8DDcWS/4GLD4CZqeDg2Xsl3fJ9t1cLDcTQk8mNZj+fp8HBsvnhZ8tJ97Ut4
OI569Br+bVfjRHg4jp4v2N+1z7s38HAsf482kLO8QuDhWH9YsWrZjEVl8HCs
ns/4BZ/zToGHY/VWUvRwuKoMHo6jVs09JnVcWgAPx+qjXm/zjKokeDiOFruk
D6wwTYeH4yjnhfZix5hoeDg23/StvDJmTAA8HMuvi0FWxR7F8HAcdbo/dEW/
tnHwcBzNu3zjoFtxLjwcR+tjp1t5ncmDh+NpwuO6i7buzoKH48m9ceuRg33i
4eF46tDvumnhuyh4OJ5O9W0yqfhQLjwcT14fb/u0jE2Gh2O/fyz9DN+eBg/H
k13BYXvbnKfwcDzVMJ3s3PK5fn049tnGRLtZzIWH48mtfZ7lbt9YeDiewtuH
td9cU+/heIrp2nbqvqfZ8HA8lfndM6yRFgEPx1MD1S6Hgd1D4OF4OjxDPNX4
uAc8HE/mmusuXttj4eF4euyXENFubgk8HE+ucXPVfa+VwMPxtC535sQKbTI8
HE+2+7MNk16thYfj6W25uk7W3KfwcDzV3NP8RmcXL3g4nrqkdmwrbkiGh+Op
3NjlZdyJOHg4ntoaF5zv1S0RHo6nzScj9xo4pMDD8TTp+Yx7HZfmw8PxZOyw
9pxzrUx4OJ7aXVgzu/6DbHg4Fr/uizu2nB4OD8fTmnavboW0yIaH46m9V/Gm
C5XZ8HA83RzZ7G90dT48HE89TBf/nDG+FB6Op1hF89/h1Gx4OJ42dutsstYz
Dx6Op6DHZlnc/hR4OJ6Krm5+Kgf7wMPxFDVpX+m0rjHwcDzVGtto47bQIng4
nlTZvq3tD8TCw/FkmW2TddlNCw/HUxvZcL6vkQoejqeR200NnJ7lw8PxZB/Y
u9v5zHh4OJ7uLTDrI77Ih4fj6dOANMdRqix4OJZPyxK+FwzKgofjiRy0w9eV
hMLD8XRmA5dWK14DD8fT5DDJM+BdGTwcT4EBx2sNrquGh+PpV0KoauO1PHg4
nvZf31xrrSoaHo6Nh9ubW9ajU+DheKqsOXWG4Rm9h+PJuqVDRm1NIjwcT93a
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
wMPJFLiz+dtNc3Lh4WSa8NfH70fPVHg4mc1fn+5tG5UJDyfT6+XOrqYzq+Dh
ZHLZVjt+/R39fqkyzTp0Zavbq5fwcDL1irrfbHaLOHg4mSo2XllfZlIFDyfT
nZrVe8pVxfBwMv336VfT+k1i4eFkEizazxlcOwceTqafnVKqVxonw8PJVDPe
qHri7DR4OJlezNTt/91H7+Fkqm3U7nZx7yJ4OJlCN+V8fLFJvz6cTOvnaz+2
GJEKDyeTzvb7z3WfMuDhZPKRnZrs3JMKDyfT9NPbSlL9UuHhZMoK33Gnskka
PByL781aVwaaJcHDyeT9Vts8tNwLHk6mYy0O7EhcrvdwLJ8EJ/d+LYPh4dj1
yT+7jKl6CQ8nk9mon8diD2jg4WSabfetmWacfn04mebtquN/KjgXHk6mTW8H
vw0Z8BoejtWXeqtL4aA0eDiZfpu3Kb2wS78+nEzy4l/j+5bFwMPJFLnXacc3
xwR4OBaf8zfPdYzLhYeTqbzZUvPjZ4Lh4WRK2nytb/Syd/BwMiWvXFbg312/
X6pMrj2XxG93joGHY/9PLFr5qctreDiZMjRybM/VWfBwMnVedelxSmw0PJxM
fd8IG+K/6T0cq5+SS8mv2uTAw8n0To4Oc9+fAw8nU49l622311XBw8l0ufab
YdXabHg4mfxtHvb2DE+Gh5Ppm/mvPK/t2fBw7PiJG9cM2aH3cDI5vw1sedoo
Bx5OplZm9P5u9wR4OJZfLiOOx2Zr4eFkuu/dr8V941h4OJk2/0ya3P1WFDwc
i9eOo+vU517Dw8l01bwgepFrPjycTAcmilMtHCLg4WRafulkolOCFh5Opo0/
7P4LH6zfL1UmpdPS6IAVsfBw7PiT7TrF6TLh4Vg/mtNOt7q8GB5OJqvosQW2
U1/Aw8nUaOyDm6ePa+DhZCr5nRycsTkFHk6moSEWBTOHFcDDsfG6eHuad4ci
eDiZzJuY107rHwsPJ5P9iNtrShzT4OFkGjj84pmf91Pg4WQqi21mVGNJJjyc
TCnvUl+7BKjh4djx5uefXMvq/5+HY/PF8LSxHS6XwcOx+jIt2RDpEAMPJ9Oi
/zz6vD32Gh5Opm4GAzLv1EmBh5Op/Uj2sjQuHh5OpqeJj8T8RVHwcDLdDqv6
faR5Mjwc67fJ68xrL3kCDydT5ZYckyMr9R5Opq2mT17d2lUBDyfTXePZQ39f
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
bNll74ggDf0PgU6yuQ==
        "]]}, {}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 0.9998}, {0, 0.8451849596495239}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.019444444444444445`], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQP/Z3/1/iK2yl7XWeb1IzMt+93uChXm2y5C+Vb2
Sq8S4+uY7tsnGoUaaK10tt96wGDP676zUHkv+wP2Gb8ui5+1/7Py4yXfpAD7
zP680r3eMPXB9jYtdVfqNG7ZH9+1o5ftQ5j9VKbmPRZzjkD1R9n7bGmJYjpx
137S6XqP/bWx9u4fOj8H9VyAmpdgP5191ir3azvs9fMWM+5hTbK/xNZ0j+PK
Zaj5yfadoY77n/68ZD/lG1v8DJ9U+zK5xn2Jc49B7Uuz1ziRfb5x0h37X3VZ
e0omZ9jzdk1g2yd1E2p/lr0+u3flk3tX7OPZz0kG3sq2777tb8qRtRfqnlz7
x5otOo+Prrc/2m9YrquYb/9BZcXHn1VH7AGI2ZUF
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->{280.66666666666544`, Automatic},
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 0.0038}, {0, 0.4889978071971571}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.67491967819515*^9, 3.674919724068262*^9}, {
  3.674919763467808*^9, 3.674919783331439*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fdataPad", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"Length", "[", "fdata", "]"}]}], ",", " ", 
       RowBox[{"fdata", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", " ", "0.0"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"2", "*", 
        RowBox[{"Length", "[", "fdata", "]"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fdataPad", "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "10"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{"Abs", "[", "fdataPad", "]"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Pad", " ", "the", " ", "list", " ", "with", " ", 
    RowBox[{"zeros", "."}]}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.674919944907011*^9, 3.674920045303688*^9}, {
  3.674920156437031*^9, 3.674920190168357*^9}, {3.674920745639986*^9, 
  3.6749207459562473`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.05095637728918944`", "\[VeryThinSpace]", "-", 
    RowBox[{"5.006203005471216`*^-18", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.2135443409680331`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.17603269005535965`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.2900065159888687`"}], "-", 
    RowBox[{"0.38815309880601157`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.15449043518041897`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.17163520744071822`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.10315845231141521`"}], "+", 
    RowBox[{"0.20253130536262107`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.48898747695782624`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.0031784936758364915`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.2086776849702325`"}], "-", 
    RowBox[{"0.35143563677915984`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.08440669450093172`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.13712092131460452`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.35709702918650393`"}], "+", 
    RowBox[{"0.2983557160263703`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.2056187485586945`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.15676936504356326`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.674920031685783*^9, 3.674920046423378*^9}, 
   3.6749201037767076`*^9, {3.674920163517138*^9, 3.674920190712412*^9}, 
   3.674920747563196*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw8fXlYzd33dgghhJBMGR7KmEwhuREyR6UiVEpzmjV3muc680QqhSiEEEJR
ZA5FUWQolZC5CO/5Xd+13+ef59r2+ey911r3GvfQOLs9mx26KykpqU1WUvq/
///vv/Yl//Z9X/tt2LEl9A+4tEorYP65h9RWwfhW251h3V9SWw1nS3SL36fe
o7Y6SpY4/Xo8nLU14Jzm4Xd5Lfv9KBhEh1WFaT+jthZE3aOK9feXUXs81hVG
b+1eUU/tiVjVnvB1c3IltSdB0lt+bNWTImpr41GvyBcqVY+pPQUJ5kuvNnY+
ovY0+I+JuGKbfoPaM6Bd4foggl9HbV30T+T2uqJZS+1ZmNl7beDbF1XU1kPS
841zVVwuU3s23uhET3tTfpLac9A+MfdzZxBb/1wc4/X68snmAbXnIX2uash8
Izb/fAyIfbI8uzdbrz5aXDesL3t3m9oLYK31q6ChP5t/IQwHZaa8s7pD7UXY
JJ6XEFTUTG0D+H52zqw8eIvaixEuLrzf+zcb3xD2Eg/XMT5sfUuQd3PJ8zHV
TJ5AsJ/OpVkLqM0BMk++3riimcl/KQytW1NG9yV+cpZi2N5L5oZnG6h/GWra
T97pb8y+X4bcxnyDgfbV1L8cDaW3RuvdeUL9y1F81tS4OOU59RvBYfaAF9Z3
ab0cI1R0Gp4ct4WtbwXeLaiP0Dp2hvpXYOYxHaVPzqx/JZr0XL2OfSR+cVbC
Vd2Dnx7I5LUKja0b3i724lH/KswI1Jvl8PYu9Rtjp540fcRTkj/HGK/lm5YH
1TL8rMYg/aUb9xy4Sv2r4eOhdKvxaiH1r4Gtwfk3opGEZ84amI3WOzPzP4b3
tRjnI/Ya+6CC+tdCN+XQqZNW+dS/Do2O22I/ed6k/nXQH2hhcH0Pk996XLRf
Kzv6rpT61+PFqA+iEzmMvxtgr5c+9tdB0g/OBmxauNJ8WzbTl43obrt5essP
9v1GDE/LaXT/wfTTBDXzyzS3aRG9MEHpd8GFWzNO0+9NoMzzX3zRjPhfYoJ1
R01nmXJe0/eb4HDF1TVk9xH6fhPGvv01Syee+MvZhG7X1qBhAbVLNkGy4XGp
/DHTj81was47G2Nzhb7fjBt9hj4YOJvxazMi1x5z5x4gfpRshu2sUzsLq5h+
mMIpsWiUk5DaMMVyWd8ZHuPO0/emmJi4cmWeEfveFPW3/qsoAZO/GQ5K7vS5
9h/pJ8zwuucSB8EYhlcznDnz5tYNPRq/xAz9/5waa/qG8d8cra/G7+8vp9/D
HL6Pe0u2/yT7wjFH496J3ERboqfEHE2V3PJj15l924KZdcdS5j8l/cYWbIie
EGxXTeNztmD+IfPK8/2pv2QL1j5L556Z/pS+t4DZpVdV297QeLDA7AWHNWcv
pX6OBZwz4qf0lV6j7y2QMmZ+rmozW78lDNJl2UPk5+h7S2g2B9w0/XGBvrfE
6FWG/bLraLwSS3CXLm29/ZTGU7ICp3bhK/V9DD9WGKCbvK3XUaaPVrio55iw
tozwXWKFwzKP4zuUCI9KWzHZ4lHXijrCI7aio2f9G9N3xfT9VuR1rv363rmc
vt+Krvaw6UM87tP323A9/NMAHw2Gn204EXY/ZpYHjcfZhn0bw3YdciD5lGzD
htroq4P3M3tsDeP7G16EehE9sMbBf4fXWX9j+mQNm8LL/PUKr/a/761xO09W
sriBrX872jz7WI7vx/CzHeNj839WzyF8c7ZDljAu8CuH4W87Hu0WFEbJib9K
O3BtZObaeQ9In7AD+hKXdasmM3u6A3viBMFbzK/T9ztw0mn3u/1/mfx24sJa
c+nqUrI/2Il56d0CWwcy/OzEvXM3Jnb3o3bJTuzsCLi2biXzNzaIvtpzVZBF
+v/aWjZ4yNepaionecEG5/1cd+mYEn5tbLA85G9c74WMPzbYmffIY9cFkk+m
DdSGmwvK+76g+WzQ6hRTlmdK9DTYQHvS5olzNBh+bDFhwPOJ68cSv7RssSPs
Vp+WerI3sMXvD9Ir7s9Jnja2GGVzwNaN0c+xRfdpTfF3OfR9pi1uRXw7M+4k
w5stNA4JUt8Mr6H5bVGntd/w/lymf3aQvX04QDWU7L+WHRziwltzMxj9dqiT
maspJZA9t7HD3chzFxcOJv/FscPz/aHmwUnEz0w7hFucVVVm8i2xQ/dPD/0+
qNL6GuyQXW40csUT4o/SLmhtLzuTkUb0au1C5yiPQqNRBTT/LuROH5hqn87m
34UnawZ3zs+k+Ti7MGnT3H76/mz+XTBpdcyorGT2dhfcunioyyT8N+zCnq1i
jzwZ85/2sG5o9/I8RfzUssfYvVWr7swmfMMeveacMO62jPTbxh7LoqWllWKK
vzj2GKaketapifQx0x5X7mmM1XxPeCyxR8F1I+Nnd2n8BntMX+EbOOkQ8/8O
0CvLPnWoN8lHywG6OSeXa04j/w0HRObdFGx1yqX5HXDmyv5TUeuZ/B2wceoN
Q9OjjH4HtDzXuao++SLN7wCTvqU1nLEk3wYH+M569ujzCuZfd2PASyWtQ5rE
H63d2D7EtGPeTRofuzHc4Hnq9XsMf7sxWDhhsIUl8/e78b6at2lC/2yafzfK
7ynNe3A5j+bfjSHhmVW3+RR/NezGm+o9Ss/yyZ4oOeLD2Mj+R+6TPLQcETLQ
/M+LdGbPHOEw8c7y4z1pvTaOeNA6qKG6P4uXHDFvgHW22jPCR6YjVBbPEKzo
S/FKiSNqc5a5fZE30vyO6Hb0ntPg/sx/OOHi6SnZuR1kX7ScMN1wt8dkM1of
nFA0dW33fT9ofTZO6NvvgPvVf8y+O+GAZvPb4KdkHzKdsPjpoUeVdWdpfifY
PHa76LuV9KnBCTNjtdXq5rL40Rk7in0Mn+aQPdFyxqLzHn/EG9n8zsgabDLn
j4TN7wwvvWNF+/zIXnKc8XbPk+kRO0lemc74enu3kfJWil9LnCErbvwTMYTw
0eCMwoojbbWWjP8uGK2fWbtkMdlvLRf8pzTjUXpP5o9dYPlfpk5T1CWa3wXX
9F44X/Ug+8VxQd959wxGCYmeTBcYmdXGOgxg9toF99/dvZR0ivSjwQWvrqsN
6raVxZeumDGPm/D7IM2n5Qr3+ft3vQhk/tAVSwYYKd+bRuPZuOIRd//a3FEs
vnDF7Asrnm2YS3jMdMXLP7fPV7qxeMEVqgY58vhoZn9dsbzU4Jn9Gha/uuHJ
Js1mu1dkD7XccGel05iyZubP3fBtzLbSUzvY/G5w/eX03+VZr2h+N+zgxVaE
3CQ8ZLohbFnbmhUehN8SN0iNnpVa8pn+ueGuT+Tu+ynETyV3uP++tXLCPpKH
ljtycqeqHxxM88EdPZPmR1+vpvFt3DHYcEn7gQksXnZHUtOZofGDSH8z3fGu
wmXXbB+K/0rc8dOoq+aQN7M/7ii0PaydfZn5Pw+IlN/O7axi9s8D460d7b17
kT+DB959LC3OCKbxbTzw4gXvdpEGiw89oP32vfONn2QvMz0wxoZ39M51apd4
oPLhx+uT7EhfGxTfV9Tt/KrF6N8D/qStN7wTCU9ae1Cx0/pZwQT6Pfbgtptk
Sqn1O5p/D16qbTOKTmDx7R44pMpTRpeRPmfuweWAEJ+fgcz/7cF7qy5MaaDx
G/bgt5HGyzQ/lk96Iua+Z9JzXcKbmidcmmY1XZhB69PyhLlfz4K48zS+ric2
OP1Ue7iY9BWewILfUddDCV8mnij++FtrUSPpv40n3r0PyZg6lNbr6YlI9VCf
iu2kLxxPHG+qGnLx1aH/tbmeuCzvIZppSPlspieeXPZJfzOA1lfgifXxXi/u
Hmf+zRMnP4YM8N1L7UrFfPYdv3d/pfU1eMLRrOqL+nzqb/fERdcnXwpdWfzk
hR6DNPfXa5M+qXnh1Ibm4D86zB4q+m8M6lxmQvPreqFrzJ3OnYMJP/BC64qR
m2YpEx5MvDDpa9dAFab/Nl440L1z76ty0i9PL7xxETk2TCd7zPHC1JKDaibq
5B+4XtgULvIUFBH/Mr2Q6qV8wzGd9KfAC5e2J/L1NtD3JV6KiP9rltcC0tdK
Lxj+yzv+axLR2+CFM75Dmlw3kfzaFd+7JBbZeTD990Z25iCLffNI/9S8Yay/
sqKpnOyJlje+Ve+faHuf+nW9cbXk5YuNfsQvKPqnS3iP9jH6vbG1TunAkZxT
RL83NpxdNn+AN/kjT2+8nnC79uwMFp97o++bp73tv1F8xPXGk/vr/8RmMXvi
jZYZVVMtzWj8Am98tpq20sWV5SPeePRw/v777+n3ld6ocEzJ6fOe9LfBGy9T
k5M9WP7c7o0lC9ouPmD5spIPbm5tkN7nUjyi5oPJ1ZOH8LPIfmn5oC0lRuVN
Aa1P1wf3Ltufd5tEv4cPSs61BafZU/xi4gPDTjclpZMUv9j4IGrX1XUPmoh/
nj5QedPp5J1N+sfxgccxg6uTl5H/5PrA++3ZgyNzmD/3Qf3aHVnvGki/Cnxw
YFX5pAu/CQ8lPihsybi09QvRU+mDu+ldy6rvMn33gWXrk0a7X2RP2n1wxunp
nW+RLH/2hVvrmF9H2sheqPnCdO+I3uN6kny1fGE9LmahXzjhQdcXH56Pr359
hPAFX8TH/+k+fjutx8QXauuEpfczWbzoi/7xWdndL5A+e/oi0Wz6wyOh5A85
vrB7ZGFQPovqDVxf9N2elPZkOeEj0xfPHpopea1l+PeFUf5os6kbaPwSX/S4
H7t65nriZ6Uvypa595gTxuINX2w0/Xv+iBXJp90Xi1fNSdldS/hQ8oO81iJQ
NoD8mZofvB+/eaZlzvDvh48msyxOriJ+6voh79amurkfWX7gB+fhm9SHvntD
9PvBM8fyodyG9MvGD13Lks1adQg/nn7ok3urWOhP/Rw/3I46JIp0IH5y/bCp
1M114laWz/jBLvTTuqkxZC8L/HA55szyVAuWz/qh16IPLthJ/ZV+SNoX8fLR
b8JTgx9ELj+eHbeg9bb7YWaMgSzUn+Wv/vgwv1virDk0npo/fGtOnpmcx+Ix
f5zpvkataQ7hXdcf55Rzo9RTmf3zx4y1K/4+4hG+TPyxzHHdk6mNRI+NPxJG
f5++YSjJ29MfhzN+LhmoRvzn+ONktlH8Zk/SD64/Ii41//v7gcWT/li0b/qa
rtO0ngJ/uIdkzZn/hMnfH5PD6kuXdiN7UOmP35/H1N/ZQfhp8MfYu33iFj2h
fKDdH7129HvZfIzVv/ai3zClgnuvaX1qe3H+rGH7wcMsH9kLj3/8pTrjCb+6
e1HU0nas33kWH+zFX+ls121W+4j+vQiYkzmo8w3h1WYvCt0rS3dNIP567oV5
0rBu2WtY/rIXZf6/jXVTaT7uXsw7mJb+VJvFM3uh8/d54Vwv8icFe3FAJfWE
ZAmrR+yF+9XPJr2yyT5U7kX7x85BP6+RfjfsBfeg6Z+nvxj+Fb+/9Wv6oAss
/wqA/sQfg+o+kfzUAnDqOH/qyjFEr1YA7m+ZGde7nb7XVbSPbx301pDZvwCc
OfbpZMwo8m8mATjolpF235naNgGw8Zo5zySG6PUMgEdj8+HV6pT/cgKwBcKg
570Y/QEIvpdyOLwPjZ8ZANNuYdEtL0n/CgJQ9354V3U52ceSAHw5r52i9prW
WxmAnW+7Je+dzPx/AFSr24sqgwiv7QGYsnf6o15nWP4diOoRJp/KzUleaoEw
1vmrPd6dxYOBcAs3mPr4IuFNNxDpeSaDd8Ux/Q9ElJLjnUuVhAeTQPTY/UzD
8xCLVwPhZBcf3/iUxT+BWHj8198ZjL+cQFQ9HHggjkP5BzcQPlUuPYUqpD+Z
gXhU/zIxoZLymYJAeBcnut39fJzoV4zfeU7HsIPsVWUgGiMM/UsmMvoDkTH4
VYq9A/GrPRDnxl444eBJ+FIKwpjuU6cPNWf4D8Inf6P6vo0s/gnCgY32efxh
zP4FYfcUP73QTOIXgjBrbW5cArO3JkFomtuZusiH9NEmCId1+92arEb1As8g
tB7qs+7pfapvcIKgWdwyRC2T8McNwpr3Pb1OjqF4KDMIP7vH++bWUjxaEITQ
W/d2dSkx/Q/ChC/tJ6oDafzKIIzMnfr9/lmqvzQEISe631u7acTv9iBsHxh2
espZVv8LRmFIdcxoVp9VC8a/M67bc68RP7SCkTLQWCvkB6M/GKW+koGdCSz+
Dcakz6tGnfOm+NUkGBPspo+4mUTxjk0wMgL5y/SNiJ+ewdhRENliV0H1f04w
3gwaZ5N+htm/YKzcN/jv+6/kjzKDcbFCacMQC8JDQTD2jL/2cvszsvclwSir
ab0zoD/hr1Lx+3yzQLEqs3/BEDuOeGplT3hsD8aWsXrOz81Y/S0EEeHjE6+n
U79aCKQzdY9+0iL/oBWCttH5Os/MCb+6IVD1C35nWEX8QQimB2bldXNl9j8E
PWRfqhY+Z/WKEDz6U3rAOZ/w6RkCNd4+7df6VG/mhCBYOCX8ggPFi9wQXOkc
Vn4ogtm/EGypf9t/vgXJqyAEK97Y77QKYfX0EMw+uqr8eSX1V4agcOOhPboz
WPwbguNhM66KntN620MQtWBpWOMJwqtSKKYF+1+vzSd7pRaKjIwzh20khC+t
UCxOnjRnjzHZD91QDHxf1DNdneSLUBh13fgxndXbTUJRaaWXcFOP6LMJRfij
Hy/mLCB5eYZiavX0bzvOM/0PRYtWQO3eDWRvuKHoHzd29pVJhJfMUNT3i46+
V9tE9IfCzORHWLYyqy+GgrPvrdBWjdm/UMjiVq/wZ/6qIRS/Ej7NL3cketpD
sWzriO8Zo5j9C4NFCLf7kXnEL7UwbMl52BW8guorWmH4LFN17PaAfq8bhtQB
SwbN7zxB9Ieh/Gb6CLfZtP9jEoYlOTOeJwxk+XIYxi0oOZfqQPrsGQbOgIc2
x0pY/B8G4WAn3xUh1OaGYQ53Rsy47xQPZobh21Dt6H2vGP7DsNd2qTr3H6sv
h+FwzsTjj3ypXRmGukGrv7w5SvJpCEOtf+N4p1Us/wvDzI4hSavGsf3jcIxM
yLs2cjDxRy0coVszL4bISJ+1wvGnj/vTD4NZ/heOlFN9K5s7yB4hHH03GlgW
3KfxTcLB2f65zwNV8mc24cjJRBGPm0X0h0P7Nad1/F22PxOOHovN7cxOE764
4cgrbfMv0iL7khmORUt/LTDqT/F4QTi6Z1mMNd5F8i0JBzdjzrnpacz/h2Pr
kiS1lf2Y/QuHjsHgKc0iymfaw6Gcrj8Yc1n9iYMSo3Uvp16g+VQ4qOl7YOjU
HmQf1DhIN4+uuyqifEaDA5cKfsOQf6xew0EBrrlq6pF8tTlwKrAIzIpn+SIH
Vp7hmydPJDzoc1C/Tf45vT/xHxxU3zthJfcke2HMgaeJed679aQvJhxcEwTp
ZG4h+2TJQWmfuZhvR/GcDQdd2UZb1lgRPU4ceD/sKfx2h/JnTw7qklQdmrhk
HwM4GHuNf/sYyy85HORLnvzLbib8xHPweKZWlr0R2QMuB4Fl+l3DU8nfSTm4
OFlgGnGD1ds4yOvxeNWVElp/LgdDM+2HJPLJ3xZwoLbBdkLzaLI/RRwYbkyO
KlhI8irhYG5ob58/SbSeCkXbbsr5y2x/u5KDSYVKPcceIHzVcGDksKRuazSL
7zhIMjw8f0Ak8beZg3XBg8fXjqD4oF3x+xllj5y0iT8dHOytF0x4nET2RSkC
13+qXcx/SfmTSgTcTj72Si5m+WAEnveoafm8jtoaEdi4Me+iiTmLDyPQ8/2n
XyOzCM/aEVi1/k9UKDuvoRsBq4HVNUPaiP/6EWhrmphcfob5jwhsWr+72Wwf
2W/jCKiUB0YvnUl4MonA1DNvRtZ/Iv9jGYEja/JGvCui720icNzMwaspnvTH
KQKHV5UusGxl8VYE+vX/curmXwnJPwI9/hYdRAn5G04ELn9bHb7ChfgZH4H/
cvOef3pM8uVG4Fn8WMcFQ4g+aQRyY4oevl5D9jEzAltSxw/mdlB/bgTmFquq
WrH8qyACfX5pXVW6RPakSDH/rvEZHkNZ/SYC5nzb+SeaSV4VETC7Xf5jUzDz
5wr+VF9ONq8l+moikDq5y3haFtmfBoW8lLas7RhF8XJzBFxW3Cp+e5Hl+xGo
uqC86P4R6u9QzO/u6RW/n8X/kSgZmzGl+Q7NpxIJ9UsF51tNWD4YifItM7Uf
DCf8aETiS+bMin9H2H5FJN49S97qMJryVe1I1G7UsljKJf3UjYShhY9/P2WS
l34kzrh3KofXsfp+JLr9W/7i2T7iv3EkWq6NL+N/YfKPxOoPiSMDjGl9lpEI
u1dg/5dH/LOJRNrj7FmB7Uz/I2Fv/7D40w76vWckKl/EhoVcJnkHRCJxmrDf
rZ/sfEIkmkp/8h6vJ3nFR+Jr7LcpCSUkT24kTsd9rn0WSPG3NBKXBS1vvDcz
+UfCalvdCt0TtP7cSKQe+DHWX4fOBxVEonfbV/nkn6QvRZHYdf+P1InF+yWR
qDbym+FvTfyuiITe05nvd2wgf1MZCdN6pfpJcrK/NZG4sj1Ds1pI9DZEQltL
x6LmF7WbIzEsc9WXf9NJPu2ReBW9LviRNel3RyQeLDq9t+Eb23+OwjRllePn
JpE8VKLQ7+vD3qfDmD+MQlrlzK8/fcj/aERhinN4b6dXLD+OgtuBcT7Cclqv
dhSWLB70siSX5KcbhUN1TuXZHjSefhQ0ggx+TAkh/44oXAtpPKVvS/7GOAqX
9Herdw+k9ZhEIT6s/LhsH41nGQXr9tGahf1IP22iEGEunrZhHOHLKQrhp5vH
vbYnfHtGYWdoW7/B3cgeB0SBG9nU5jGC7R9EodNhR92IDYSH+ChoTlzwRmzO
8lFF/6/+/+17R/5TGoWDjmXOTiy+yYzCZFH3fw/6EH5yo5CaNFhgZ0v8LojC
Yt3+efIswmNRFASc0a9f5LP6fBT2mo0fsSeW+FOh4K/2w7u1mURvZRTMv/wX
XG9E9qMmCgsOSM03uhA+G6KwdZGe8ZsVZG+bo+A6tG3p3duUP7RHoXZQiYvV
QqKvIwrD3PemV72m+E0pGk4xg7r/ZvU8lWhMe9x6Mm0njacWjUHahVuMlamt
EQ2dWa0hd98TvVrRMBbsMh78hfCmHY2wz93qZDnkP3WjYfTlYq8e68m/6kej
Lu/Xrh4arH4UjcXPHv2Kv038Mo6GptDAu99cit9MotFzvHvaZF+a3zIaw57K
9kw6x+rL0ViqPW7jnkvM/kfjVrn70kE/WL0xGq/mzh5hkUL4DYhGV/7QT8Lx
rP4SDfcxS/7ztyF+x0fj+7nSC90bqD7HjcbffJWyRYMIn9JoqO3PmHh7I8kv
Mxp89eUurbNTSP7RKOrxtc6iH6tXRGP5sZ9JsW8J70XR2NLbcsjHRFa/i8b5
Y16cbObvK6Kh/NPjpt5D6q+MRvBP9xuXVjH7H40XEYkBv2YSvxqi0X8Y79ek
Hkz+0YhO/Xs15yTpd3s0RG6XDtxwIPx1REPp8cxuU+ew+lcM+vG3Bs9g9VmV
GBRvfGWXs5D4oRaDoPDbr3VHk75pxMBgttwouIDtV8bAbkXhmqWniV/aMaib
sW/5xP9fL4/Baq3Jxx6z+F8/Bm9uf+95OZLZ/xh8mrp5nNV5wp9xDDZp9Ntx
J5DtJ8Vg907z70dNKV6xjMGW2Qce/i5n/j8Grevlx9/tI311igF3i92MLddY
vhWDksqg4ac0CU8BMfi2M+yiLcMDJwaXV5xzuBtI8UJ8DFJUb+65OYjo48Zg
gNmOiT6htH5pDN6/Dj2bkcn2m2Ow/NOITb1X5pD8Y7D9ofBmHwvKnwtiEJN/
aEbLd9LvohiEmMuXzZtG+VxJDFT3zz/p7kXrrYiB+pubbuaepL+VMehzwOng
tqfkX2pisC7IL6a8ke0nx6Bx/N5Jm7+SPjbHYIHvnqAjc5j9j8GEqPYHe9to
/R0x+Dfhg7TnCpb/xUJ70a3G7j1IXiqx6JZSnf3pBssHY7HEf7Zzv0iypxqx
SHuGF7dbqa0Vi4MrgjrtIjNI/rH422FcOERAeNONxZqQ+uaNI0g++rEIvB41
fuB+tn8Qi56qTbfj84ke41gc7/ZjXsoF5v9j0cHXvDzoEfk/y1ikPp5WZDaI
nQeIhbXJ+QWSSxSfO8Ui5N+kP3a3iF+esUi8X6DhEEvfB8RC+bz36H9KlK9y
YnHt15XMD8cJX/GxeHLcsvfVg8z/xyLFa/aBV8nkz6WxMLx2N8//BKvPxEKi
G7TIr5H0L1fBzz05VzwH0/cFsfDgzFhrdIvoKYqFywP/39ckRG9JLNRv7+iu
doT0ryIWjeX2wteXCZ+VsVC6//Hi6DbS15pYTH7fMHrVCsJLQyxu9r8ZJNak
eKhZsX71edtP7mb7XbEYM0v9rbEW+a+OWHRqm/70G8/qf3Ho2L5+xfAY4pdK
HLTv7pr79SLJTy0O2XFPt51zI/+pEYcxQ82PvhjP7H8c4nzK9XzTiB/acWgd
+EiySIvsj24cdjVUnklRp379OFRcWe8yf72I5B+HlVtNh81eSef9jONw77zq
zzfppC8mcXBZf7NvoAqz/3Gof5rt4WtJeLWJQ1DH+sF12aS/TnGI/buoqTaV
fu8Zhy+GqTMdulM7IA4xB8d9G36OnV+Lw/qlQTsHG5J9i4+DdafxcLVqwgM3
DuUWIVEmGcQPaRwWGg2ZHssh+jLjMHvn/Du+frSe3Dh8mBx3fms58/+K9dpE
D/O7Q/QXxUFk/3HPJ2WKH0visPOA4+K0qeQvK+JwsGDrhOcDaPzKOFy6WnLR
xpn8TU0cNh+zO9/rKq2vIQ73r6l8iHxN/qE5Dt+ubJKfiWP6HwdOSrSH3Xvm
/+PQaaA243UGOy8ej7GetTOqthD/VeLR74n7u+3trB4cj/M3b258OJbwohGP
D+UdE3J703ha8Zh2vLVqYHeSl3Y8gjo3vlE7y+qF8TjQODE/0p/0QT8e47I+
nF3NzmcjHj4VrkObllG/cTyyfaKnVoLJPx7ryp8ba30gf2oZj43fZa9mpLH6
UjxeiVbnJopJH5ziscB79TrNzRRfe8bjqeXr1KtvSX8C4rE8Qx6ptpbsESce
yv56ya8Taf74eFS05fa668v8v4L+nf0f3cgh/ZDGw35Bja+POztvEY+9Vbn/
LrLzK7nxuPt6kW+SgO1Xx+Oe4NSj6a9IHkXxmP8hMTPwAzuPGY8X/DJuujvV
Cyvi8Vb8rufklbS+yngMXNLLlv+C+f94dOVefT4wgfS5IR7vv07e+rH+KMk/
HrmaTcfrO1m9Ox5lSm5tf4bSfB3xCD42pMxMzOx/AvKaY0MSjUjeKglQ1fb9
9+s8xVdqCUjJ/KY85zPxVyMBL3zERcariZ9aCXD4+nXVZCHJUzsBYW1JsqkT
WL08Ad/DXRZVJJK90E/Apol7X61j5/uRgLseqt7zXJn+J+Bl7djA5n/0vUkC
7q21GNa5nPn/BJhm+Ke0OFL9yCYBH8Z21AdPIzw6JcD5RUvU9DCyn54JKO6z
9sHeITRfQAKuf/boWt2T7T8nwL5Hw40GL9K/+ATMy+k83TKS5M1NwMUf+skx
bH9OmoCCI8WH0k1ZfS4BNds+LHD3JLzmJiBkrEn131qm/wmQ+2S9fVBM9qFI
MV9nTP/jlwhfJYr1XJ199nw3wk9FAubY9XyvJaHfVyZAs8+HTm1lsj81CTjf
Q/NU7lcm/wT8U/XYV7qa+NOcgHEPTEbdWEXyblfIS+tbnpkn0dehGN/Pz3ZU
IKv/JWKREwKMqig+UkmEMGBoi14e4VstER9M08beX0P1BI1EGEYhyOMC2x9L
xOBrbvcfTib+aCfi6DLXm07bqT6hm4jgEyMq9rD9CX3F9/xzt8UL2Hn5RFwa
tkG07CXL/xPxoFQ5aWE0q6cnIvDV8lMHDMj+WSZiTNa05T2nsf2VRJhnGWY5
BtD6nBJRfXru7Q0xLP9LxKjj7y6dSCL8BiTCXV/Wc4AH1Sc4ici5OzR/BjtP
HJ+In7d2jFp+g+IJbiK63D3TqjRY/S8RVa9Cp//TY/tzibgaPomTkEv05SZC
bcByp/ma7LyGgv4xrX4vLzL9T4Tj1DaHFHa+qyQRpbNXpXbTYfF/InRGpiUE
LI8n+SdigCFnudkVwlNNIra8z03Zy/KdhkQMeX5i5cKxLP5PROUvH4uzfPJn
7YkwSTqyeOB7sscdiZhQqTw3wJTJPwnTt19Uf7+d+K2ShN3bl7VV7aHzrGpJ
2Jll55yfT/5LIwmnt48YtbuR4g2tJJzKfL7cs4T4rZ2El6evjOnsQ/GHbhKK
n9//eSqX9Fs/CaapnS5jg9n+YRKOcLJGvNtC3xsnwX39wegeeSz/T4JKWc3X
2Z+Z/JOQ8u/Zs/ybRI9NEs7qVFQfBdV7nZJgofStZ5OI8jHPJDxauMbkqgGN
H5AE3Sj90/OesvMHivXd2P7qZCKL/5MwYaQkf+Yxsj/cJJgP9ahUfkj2S5qE
193XrO+XQPzLTAJP8Haf+UKST24SgqVuPRzKWfyfhN83L5a7SEg/ihT8OhXd
Y1YvFv8lYUXxh+xT71j8n4QE55Z7PW6w+m8S1nhUzdv9gvBao1iv9c2OZ7rs
PGESvs24F7ignNrNScjeYqjTVkj8bU+C0xnt8amPyB92JGGet55SyEl23y0Z
Iz72M8sfxOp/yVhVbftYKGD7gcm4WZ0/3D2U7ItGMnoZqLp4XWTng5JRtDzo
5dpxxC/tZFSL3U58PE/nn3WTceGo4eOWYOKPfjJcx4+d7pBN/EAySj49/I/D
zocbJ2O8ntXv9aB40yQZEn21f6WdtF7LZAw/VO+axu7f2CRjl2bRvgvq1HZK
RsoEq9FD15E/8lTQl7bLRIXdlwpIhrqHQ0piD3afLRnLT6/PGr2Nxo9Phmfs
1QAlD5b/JUNz8LPUySzelSbj+eCks2UxbH86GWPujh7R5kz6mKvgz94hsrFJ
VK8pSMb7V/d7Pt5M9ZaiZAQGV/e7VeRA8k+G09MNy15X0fcVyRCXbb4/RcL2
s5KRd/zmFc3N1K5JxuqH0qRD3iz+U6x3fVtc/+hMkn8y/pb5ecycwPL/ZLw8
ntWv2z0W/yfj2rgRa4JOsPOPKSgZWTzSrTvhRyUF3JE1q/zzaXy1FHSznV7l
1kb2QSMF/2atTBx6mn6vlYJdzzju9k+IPu0UjDr64fdlb7ZfloKDX/bnDb1O
9OmnIH7KgOX14TQeUjBmqlTv+TvSd+MUZPUfrj8rj/BqkoKlR3tZevrTfJYp
cL6+zvhQAttfS4GZUBYmqKfxnFIw/uCcHVNHsP3GFDzinjOuzyT/F5AC/ylv
RIsWsfp/Cp4WVnFHXyN9jVeMl/Rg5ms9dh4xBft6axtVNlI8JU3B0CGZy0dv
Y/s/Kej3ou7wvHLS39wUeCYcP5+Sy/x/CubusLFeb0n9RSlIjezz8fEhtn+b
glNbgsfpvHtL8lesf/K8n379CW+VKbh/9sXZDAeybzUpmHX1S8PE0+w+SQrG
3U7PP+lJ+tqcAtct3L7nB7D9bsV8/ZZyC8yoPtGRgnbdRiOuGcWbSqlw66d1
vv4w5cMqqciaNSHEKo34oZYKi3OGUzJtiX6NVKhtWtd3ygu2P56KOwNaH/T/
QPLVTkWv63uWP81m54VTocz3L3tyh/Id/VQM6XYuVux3mOSfCodG2b8rdcRP
41Rol4+3CmX3r0xScSA6a7INu09qmQqX0DeV9r/Z/noqkgbEfL+7hH7vlAqr
wcZxjsY0v2cqPqtn/zWIofN5AanwPbh6ZFoVO7+vaPNWGdd3Y/qfiuCt+nGX
17D8LxXGAtVlNaHkH6SpeBZXXSAYQ/sBmamoKtEvLlnH8v9UVB++2hh7gX5f
kIr9ffLOO4+j8YpSMX7rklsGZfT7klTwfu9YNqIn0VeRiqjPW49qdFJ8U5mK
Ct+I0XMuEz01ivnf7KyYO5D0oyEVR4oHzjhwh/DdnIryVT/DM+uIP+2puLKT
kxjRQvLtSIX/m81BS2+z+5tpGG/k9sI+m8X/aSiV5bgU/CL/o5YGw/1yR/4Q
+r1GGhJsX9hMXcv0Pw0iJbfHHd2Y/09DRsy7lmAjFv+n4XPNpvi3s8ke6Kdh
d1l20JWrFD8gDZlXXudkK1G8aJyGlKO6N86z+9Qmiv7OvsdDQtn+bxpUQi5k
ah5g9b80BHk+z/h4juyjUxq+6tn30j5O83umwbpb6ZDFjN8BivU+LNrd1p3V
/9Lg01vX59kyojf+//r1XRZuaCX5p8G3s+uUexh9L03DCtGs7V0NLP9LQ9Yk
s/l9exN/c9Ng/83F+/dPWl9BGjq23yg8ZEv8KUrDyJmceFUlsl8laZj7dVzi
xjgavyINafY9HFdVsvw/Dc9DTLa+/ET145o0ZM+aW2P7kPDVkIaXyu47Rl6h
eLQ5Dc9q37nWTWfn/dIgzVyQ2keb6OtIQ/3eZ9Vf2wlfSlyMXTR18aoh5G+V
uaiMbY9tG0zfq3CB2ev9lqnReS1VRfvtIW2dcWx/iIszZdxt2klkn9S54Hdk
Go0+RvZAg4sTj30lH5UpHhjFhdLKW8P3jGL7h1wUuRyrsWX4mcjFuMCy++pT
iH/aXGxZteKU5QSKT6ZxEZwXWR/7k+UXXIS4LzLbdZjs5RxFu2++vetd5m+4
uHPLacx/Z8j+GnDxZf7t+s8BZD/BRelOJ36HAeHZiItiSWa3tUmEP2MudAZO
dF9wiPRtHRfjJwSN0zlFeDThwtx+XN8dq0l+ZlxsTZvQNmgg3eez5CLwmG/I
q9+kP9ZcSLrzD5Q3sfsBXHwudHD7MZziW3suevdZJ744k+1ncRFbvuBR6X3i
txsXMx7bjllykp2nV/BHqFbRVEP88+XiYcmnYaccWb2DC7cXL3M+11K+FcLF
6gt+oV9PsPoXFy8X2yqtOEP8iuZi4HFDi2UF7DwEF1c0OD1fthC/krngPNpf
LdhM8uRy8X7F2pDqeYQfIRffHKXvg6aQfKVcnN1TkjN1B+UP+7nwK5SKEi9T
PpDJxaSIgWtXNtH4OVykz/p6u99tildyuWjM2j/+JntPIp+LqpjkQdlPWH2V
CxuVe89juhFeC7ngXjL91qs//b6Iixf65/Rcs0l+xVx01zeL09xB85VwMebA
rU/zrIjfZVxEKIv7xRqTfajgovZh4M6x7DzgXS6WHtxqHP2C8F7JxYcFw5+s
UCP7XcXFkKmffLL0WL2Wi+xTyZODA0nedVwMujB0n+E9Vr/losSjepTbbfKv
b7mwEPW7a6tD/rCZi1N27ekbX5D82rhoKjCyjX3KznMq1rfu3vSjtcTfb1xk
OboObLvH8n0ulv1b8m7zb+JXlwKPT9ZtVH3Azr/xUD0mZ8MvJZK/Mg9qQ0xH
OLH3MlR4SOq2/PfmxzS/Kg87O2LexrUQntV4sDAsxucMok+dB0lYbOSZCcQv
DR4u3/i0fc1fmn8UD1ZuT/qvZv5Fi4d9AwsuPZ1P9mwiDye2JqeVfyd8avMQ
dHB3ZN1wom8aD9dOmGt2GhF+dHkQ5I9uf/yOfj+Hh487U+8Z6NH4+jyM/Hsl
4dZ94qcBD4PU3uQNPU/2Ajx8vvE+e882iteMeFiw/NOrqF8sH+GB/1/zCXsQ
vet4aBDs+jnnKrvvwEOV9VClxI9C0n8epu7/a/K5nNWreYhRnTb/73Y+6T8P
b/1ulrzqy/JXHk79697H6yitz54Hg2nd1JWNiZ9OPAz5tDkII0k+bjwEjux2
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
El5dihLaeWs7dn5D8S1Vieb5e9InTiH7O6fEGq8eXo1akXwvKjHr8kiPv7tL
vHUlHAtbPZ78iv6frsTX8mvMJ2W/ZIYSZ9/u7JN+nsaXqUTrrxP/eNdA4vMr
Eb648O5jyW/3VPhTRZ+hp+Iknp8Sn+te8X//B+krR4k+d2f1G7+a5JGrRPXc
+KzKa+T8L+z14S+6/E4S70PI369ST6/RpJ9CJWbPen2n8z2yP7d4/ByVm1Lh
INlfiXg8qxJRkC77893j4fU0tcvJHrS+LBuPH+seetRSSrz8eLx4tqDKf/n0
/VXjUfrIP4Gt58vz/3ig79pe9WtR/Kobj6g/6plT5HqrQTw2/Lw99vVrss8m
8ei6o2+fDjNI/83iccU984vOT9b/xMP78e/Gtztlf3k8ZppfRlQqRvptH4/8
A+FzbjSV/h+PYspH0U1bUXzwjsesSdtTkn6R53/xGHDx7pQa8rygdzzajP0Q
kviU5nPfeOR+72UI30/yHRSPTs0+qPJekzyHxeN0zMi2V/+i7/OPh4dXqdfD
J9B6dXQ8arudH6o9RvFlXDxGTXoQ80meRwbGY5eb/m1xef4eFI++czt3eCfz
wcHx2FL9ZuqF53R/VjzcYus1HVuf3j83Hv+17OlR+IretyAe8fUK9w9Ilf4f
j/txhYbKI+X5Xzzudj2bN1L2g62Mx/amOb9XlvFjTbyIB+OavDop+3/iUer7
is2+myi/uDEeJSP/3LTmncTrj8f1ku7as5n0/G3xuHP7yflYlZz/41Gw3Hww
5Jv0f3H/6HHbEon/qYrHwIIjo4JXy/1/PEoE+Pc7JfkpTcLenrdu+qwe5TNt
8TiU/avj3m7p//G4VWOY7+RXsv83Hr3etPultyeNJ0n8/4+O74p1pPV2cjxW
zPizu9GXvj8lHjtubl2grkvflyr+7/Nw1+s0et65eFj3vu/3No7WmxfjMVd3
anWCxCe9Go9zpU+MniDP99Pj8degWrvmyf6rDPG9AVPHWJ7Qei0zHic6pDfL
eST3//EwnXfXlYmh730aj1rmtVVf5tP4XsRjun+44tu/ZK858Vg5cut4U0WJ
7xSPKt2b3px1lOJpntDXsBbt+m+n+/nxCBh0Y0B3H/KvQvF9YzcfKFZb4n+r
MOxM94xu8rynuAq5htJD27el/UUJFRyRMdd3rSd5lVShs2LV93LXJF6QCtcD
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
xJeh9eo+DcLjhzSztiN7TtDgS9NPM4q0dJ2ogeKfbwOWg+SbpIH3+4MfLjen
+HxYxJu+txIaFsh+Vw1OdjBfXt+Pro9pkBoR5v1unOSP1uBgv/9m1vhN7v81
uN+mDEal03lnqoifU0MHV5H4Nmc02Blep+nxWmQ/5zT4K7R3tYzdNL40DaKR
eMlWhuLZRfH8FkuNKyT+x2URb96vmFF1MOnjqgZtY7v9daA45ceva5Cj6Rs/
vzXFi3QNWt793mbDWIoHtzQIeH0nKNSN5vMMDa5odk6cJfO/dzWIOrbZEJUr
z9uEftpYzPbNNB9naTB90nHNRJkPeajB7Nndz+eXJXk+Fv6w/sDo50dpPnkq
4kGYqmSPheQ/2SI+VR6wVRNC73+hwbJhd5p8akff90r43xJz6OA5pK8cYU89
Wlt2yP6ht0IfBY88E45LPmYN1gxVty4ziOz5g4inqjWb9EUknzwRzzKXNJ+8
mNbfnzUI+9LrrVXiU+eL+JR5JFDRndZnBULeiy6PSawk+/2FvRbMu2/uQddF
GgzzvN7HNJHs102L5V6THxT0pfEU1+Jq2OVRbjH0/BJazHi7umenSzS+klpE
B0dVynoj+SK0+Dnn3T9P71F8LK1FtTpTz+q7SrxQLex//Ji2ogutX8prsTH5
9wpDfCS/sHh/s59qPyoh538tdv8Wum5YO7KXqlp87nl15+XuJI/qWnRv/frR
m19pPV5Ti3L37715JvngamuREr15V6Oq9Py6Wgz5b9Xna7vp+R5ajI3+c1Wq
3O810MK3U8uht2uTvTbS4sap893GdyB9NNHCdDDC+bQsxQNPLf4dvKHqvk90
ntFMiyXty57s9BvNLy20sHTuM6rBIJKXlxZPNx6q6Z1Hz2ulhf+NhtXzm0p+
RC0a9FsxPc307/+/biv+n/Fi2CKZn2mvxaO3f6Z8lvuLjloMXbCu/p2d8nxT
i3uKTr+s0lO876rFm3eWkidlP5y3FnE+T45OkP0RPlp80NV7lfdA1j9r8a39
nfmXZH1qTy1Ofks85ifn495a9A4Y4zMrUub/tdh76fXW3TbZH63FuBfJa6wW
8v8BWmxza6Otki77pbTo1vm/fq/d6DxpiBbH7pc+OK0L2fMwLdpunnymz0z6
v58W7dOCFm5fSPbnr8WUjz6rNgVRvB6pRebCrV1eyPl9tBZvtXMn+RXR7wOE
fGr/nvxO1juN08KrrVfCT7vl/l8L96DPh4fJ+vxALRYsya6dc5vizWRhbxer
VZtbm/QXpMXgQnU5UwWav6YK+WxOv1V9BcX3YCHvDj9WRst6lhlanJ34T/JS
2Q8wS4vRFVuM0g6i8YVo0etS8xHDb9P/52qxZkCnT/Xmkz7na5HeUV2j8WKq
t1kgvqfxvTJXalB8WqTF7PbLx65fSd+3WNjH826ln4WRvpZqcX/wj0lvv9J4
Q7XYc23M9PVD6X6Y0MefS0f8fYv0uVKLhBZNd5VcSL8P16J4k1O3tx+Q878W
v7+5Yvoq+dkjtDj/5WiFkXclPoQWa0Mjbiiq0/PXaxFVcuTO/2Jp/7FRi0h+
P0qLi/z/m7VowZ8frcWPxuz92/7n+3Zo4c2/f5cWNj6+GC2y+PgV4prLR6lF
CJefSosvXL4aLR5y+eu0WMf1YxDv5/ozaRHA9WvRIo3r36bFK24fDi2Suf3s
0QLcvvaJ8XP7S9Dib26fiSLecftN0uI3bt+HtfDj9p+sxTvuH8e0uMX9J0WL
QO5fJ7XoyP0vVfgj988zWhzl/ntOi67cv9O02M79/+L/xIfL/xM/rv5PfLmu
xXEef9KFfnh8uqVFHo9fGf8T3+5q8YzHv0wtrvH4mCX8mcfPh8I+eHx9/D/x
96kWrXh8ztbiTx6/X4j38fj+Sgsdj/85/zM/vNUigs8fuVoY+Pzy4X/mnzwt
+vH56fP/zF/5Wgzj81uBiE98/ivUogKfH4uE/fL5002HT3x+La5DDJ9/S+hc
5+eSOvzH5293Hfbz+b20DlVd5n8dil6z9UF5HXby9UNFHabz9UVlHa7x9UdV
HUL5+qS6DsP5+qWmDk6+vqmtw2G+/qmrQzu+PvLQYRVfPzXQoRZfXzXSYR5f
fzXRYS1fn3nqcIqv35rpMI6v71ro0Iiv/7zE9/P1YSud6/qxtQ4l+fqyrQ5N
+fqzvQ4z+fq0ow7BfP3aWYdEvr7tqnNd/3rrcJWvj310GMvXz9ChOV9f99Th
NV9/9xby4+vzvjrU5Ot3Xx2O8vX9AB028/X/IB2m8P3BEB128P3DMB2+8/2F
nw5ZfP/hr3Pdn4wU8uf7l9E61/1NgA7V+P5nnA5d+f5ogg67+f4pUIevfH81
WYc1fP8VpENHvj+bqsNqvn8LFtd8fzdDhz18/zdLhxS+PwzRYR/fP87Vue4v
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
DPiN93/lCPvh/WFvDShKYf1juWK+4v1lHwwoxfvP8gxYyPvTPgt/4f1r+QZ4
8/62AjG/8P63QgNG8v64IgPa8f45NyO+8/664kY04v13JYxYxPvzShqxkPfv
uRuRyfv7Shux3qX/z4g7vD+wvBHtef9gRSOMvL+wshHPeP9hVaNrf2J1o2v/
Yk0jxvH+xtpG1/7HukbX/kgPI8J4/2QDI4J5f2UjI6rx/ssmRph5f6anESd5
/2YzI47z/s4WRgTx/k8vI87y/tBWRtf+0dZG1/7Stkb05P2n7Y2I5f2pHY0I
5f2rnY34qSfrb+0q/s/7X72NuM37Y32MSOT9szCixAvWX9tTPI/33/Y2uvbn
9jXiFu/f9TWiiPf3DjDiHu//HWREOu8PHmKEO+8fHmZEGd5f7GfEMt5/7G/E
Vt6fPNKIp7x/ebR4H+9vDjBCzfufxxmxkfdHTzCiIIb1TwcasY33V082oh/v
vw4yYjvvz55qxGjevx1sRB3e3z3D6Nr/Pcvo2h8eYnTtH59rRB7vL59vdO0/
X2BEf96fvsiIEN6/vtiIT3Gsv32p0bX/PdSI6bw/PsyILrx/fqUR13h/fbgR
3rz/fo3RtT8/wujavx9pxFDe37/eiJK8/3+j0RUfIErYC8cP2GxEW44vEG10
xR/YZsQvHJ9gh5A/xy/YZUQqxzeIMaIbxz9QGFGZ4yMoja74CSohP46voBHx
geMv6IxYyfEZDCJ+cfwGkxEnOL6DxYgvHP/BZsRejg/hMGIex4/YY8Rqji+x
z4gWHH8iwQgNx6dIFN/D8SuSjCjP8S0OG13xL5KNyOH4GMeMUHL8jBQjsjm+
xkkjJnH8jVQjdnF8jjNGeHH8jnNGHOX4HmlGPOb4HxeN+JPjg1wW/sDxQ64a
UYHji1w34j7HH0k3YinHJ7kl4hfHL8kwuuKb3DWiJsc/yRT+w/FRskS84/gp
D42YwPFVHhsRwfFXngp5cXyWbCMucPyWF8KfOL7LK+FPHP8lx+iKD/PWCAPH
j8k14neOL/PBiB95DH8mT+iP49N8NuIdx6/JF+/n+DYFRjzk+DeF4n0cH6fI
iAyOn+NmQjGOr1PchEccf6eECUc4Pk9JEyI4fo+7CUs5vk9pEzpy/J+yJoRy
fKDyJjR2wQ8y4QDHF6pscsUfqmpyxSeqbsInjl9U04SRHN+otgkmjn9U14St
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
fsAooV/OH7jZgrOcXzBafD/nH9xmwRPOT7hD2DvnL9xlceU3jLGgN+c/VFhc
+RGVFqzi/Ikqiyu/osaCFM6/qLOgLednNFjQnPM3miyu/I4WCyZz/kebBYs4
P6TDguGcP3KPBfGcX3KfBRUvMf7JBAsyOT9lopAn569MEu/n/JaHLYjl/JfJ
FnhxfsxjFvhz/swUCzpxfs2TFlTm/JupFld+zjMWaDh/5zmLK79nmog3nP/z
osWVH/SyBfM5f+hVC4I4v+h1iyv/aLoF7Tg/6S1hD5y/NMMCA+c3vSvsg/Of
ZlqwjfOjZllwgPOnPrSgAudXfWzBYM6/+tSCLpyfNVvIk/O3vrC48ru+siCA
87/mCP1yfti3FoDzx+ZacJnzy36wYA3nn80T8Y3z034W+ub8tfkWV37bAgsa
cf7bQgu+cX7cIosrf66bFRs5v25xqyv/bgkrdJyft6QV/py/190KA+f3LW3F
bs7/W9bqyg9c3vo//MFWtOf8wpWtrvzDVa04w/mJq1td+YtrWrGB8xvXtmIY
5z+ua8UfnB/Zwwor509uYMVCzq/cyIpgzr/cRHw/52f2tKID529uZkUm53du
YUVHzv/sZYWF80O3srryR7e24jLnl25rdeWfbm9FX85P3dGKNM5f3Vnoj/Nb
d7W68l97W/Ef58f2saIU58+GFZ/cGb92T6sr/3ZvK0I4P3dfKwZy/m5fIV/O
7z3AipKc/3uQFds5P/gQMV7OHz7M6sov7if0x/nH/a3ox/nJR1rRg/OXjxb2
yvnNA6wwcv7zcVYUcn70CVZX/vRAoQ/Orz7ZipWcfz1IjI/zs0+1Yibnbw+2
uvK7z7CiBed/nyXsgfPDh4jv4/zxc4X9cX75+VZX/vkFVkzl/PSLrPiZ89cv
tmIB57dfasWUFVXrbq4vz/+teJPhXWtbP1rPhAl/HZaa1Vv2I620IqVy2IFL
cr4Nt+JO6+4tzivofH6NFYf2PJz/0p3WHxFWbFtdrMtSWX8WaUWd0uN3PmhO
9rbeioYLh57uskme/wv5FhYztGlF3xdlRfbmlOJPvCV/pBUHhz+4un0x+Wu0
FW2Pvq+cMori7TYrEpMyAz1KkP/usOKJW5P591vSemyXFflbI0dtM9F4Y4T+
9k/+kFKJ9uMKK94+tEwPnEv2pLRia7Z7P5NOzv9WvIrYcjnqK803GuE/hWnK
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
9jlL41PZkXbRfaLPRhq/xg7P25lTWrWk+U0n7v86qNdCOb8Z7DDeeZLX9Fk2
zf9ivPbp2U8qkX1Y7FhT62Xj+i8l/r/wt0o/BxT9RfHVYcfxe2+062U/2B47
ylbxn3i4FM1H+0R83HdrazmZf0yw49PDLtX/TJPn/3Y06J7zYUwJWf8n/PfG
sxXLbtH9w3YsnxQypNpZel6yHbGnf7EMeknx4ZgdR97fG/EsQ57/i/hwqOKb
oSVJfyftmPBTcEblfeSvqXYEnP1edEnuf86I7/VYEWqeQ/Z2TuiryYTdk+fR
89LsyIzd8NumhhL/346f9gTv/XxK7v+F/W6/3yjLRvnfq3ZY9Q/3Nm9I/nLd
jvztL9ZVeSf59IT/jAuecHpUNM3/wj8HWA51kuvBDDuG37ZfyC2g/9+1Y8uW
DSPiZf9Vph13Poba1g6W+H/i/ov3Hxb0o/njoR1L1m20rxhN9vPYjuoRtZ8m
bpH5f2E/vrmHfZ003mw7+kZFtpr7XfJz21Hht2nx00ykz1d21MDeQ/f2k73k
2DE6qGPyt0my/1/ot8/nPsq35M+5djzZufj2YJlf+GBH3oyOoQOGkf3m2fHq
0ZYN7kVy/29H/8n/dnkXS/m4fDueO6pvMd0n+RbY8fbN6fSaybSeKhTxw/7E
22cO/b7Ijn/OWhr+e8pM878DeyqePJTWmJ5f3IGmhzK/1nOn7y3hwD+Vdsyz
yn6Nkg6UOZ0+R7Wa4qO7A7fDnN9UZST/nwP75ztKT+1EzyvrQKeXo+9cXCzx
/x3YOf7fH7mFsv7fgXOfs5LztlI8qezAgezo4cvPUfyu6kC1Y3qzXw36f3UH
3pwvHDvTTeL/O9BuaVSVo7IfrLYDmY6ULF1fGn9dB95H/v3Pwer0fR4OHJna
+VvaQfq+Bg7sC9uytGVNel8jB57e/qt1q700/zZxYNqQ0edXyvW6p3heq4WR
Zy7Q9zZzwHZ+6emQ/yi/0MKB3fuLhp1Sy/2/A0uCB5Sud1Py/zkQ/erv1ult
JX+pA8fN58YVPllD878D7748a1DHSvNTewcmdL3w25eZNJ6O4vuLjn/6aqD5
u7MY/5mol3kNKL53dcD+x6qagy6SPXg7sGL+uvqVv1I88XHg2pRSd1/8JvH/
HNgb53stKZL8p6cDu5YMHdn1Mem/twPxjZ95ND9Gv+/rgOrFqfWz7pE9+Dpw
+FCF7xdkvmGAAzM3pr1LaU3+NEj8/s6DY/OnyPy/A+vmXri4/BXdH+bA0dcx
UQ4tPd/Pgd9tne8teEDxxt+BE8s9zz64I/F/hT2YSnle/krr89HCPuvbnxWr
TOvFAAeybu6qOvE4+fs4YY/LfniviyZ7meBAeJ1iR18co/77QAfKv/Nbijqy
/t+Bbl7FqpbwpfgQ5IDzR/FS88zkn1MdeLvwbMqj0uRPwcKey3p1KhpP8WmG
A78pioa9Py3xfx24NK6a2/q3tJ4PceDB1r++tD9O9jZX2MOvLxxBIPuZ70Dn
Xu8erS6QfM4OfDjzWjtnrOz/F+Ov+MRa7SDNr4sdqFN07N/zlyX+r/CPiVGX
vNuSPYQ6sNVWL/fGc/qeMAdSHX/W/tpb7v8dWKyZGp5Zg/Yf4cJ+AjZuOv2J
fr/GAX2FPUdud5L5fwdGz7pVrn+BxP8T+jvzbvwAub9fL+QRFhG+vzHFw40O
jPdJxvt4Wf/nwMT8tU/XvaTxbnZgfbFe3/xuULyOdqBilRG1guMk/48D6R66
IQVupJ8d4ntvDRpa9orE/3Gg548ez/2+yfy/A+ppMyvkXKJ8msKBjEGXfjPf
ofEpHXi5p/ekiNsS/8+BhMm5cUOz6P0aBwK2l7k4qTnJUyfkFXKz7qw0mf93
oNKharE+l2j+Mjmg3Lux6bIlND6LA5Vbvvtb3Zbii03oo0uNW30qyv5/B/pp
AnzXZMn6fxGvri2ZWP8kyWufAytL7CgT4UvrowQH6inPv+s4hu4nOvC9k/+6
2hNovk8S/++c2HamluR12IHtR0bklSxH7092IND90r21xSgeHBPxeu3GStpb
JK8UEe/UikZna9DvTzqwo83HtDJpFE9THfBcVWFg32x63xkHFiXs2r7+KNnP
OeFfc1J0LSeQfNMc+Dht1+ulLST/nwM5fQaG3uxI8r7swMLriptb/ei8/aoD
x2qu/PmB7Je87kA5u8+onnvIX9MduN99kluf/RL/1wHfQwuXf3SQfWY4EJL1
QPde5q/vOnA55V31vdNoPJkO/Lmt4rnsDIqfWQ60uDHJo4eT1jcPHYg43eX6
CVl/8tiBEqUG7Tgs+8ueivEkTJn1uYbs/xPxvXi08nS27P8X8d2yIPTRN7Ln
V8LeNzXOqVSB4lGOeH9Qw9IT+tP3vnWgceOlDZvvpfiX60CzCk1md9GT/j44
kLxTVWzgBsn/J+xvYnB0vjetFz478LVT2v33i0le+Q6knQ/2+HU/2WOBA6Gl
bUEzL8r9vwNLZ3fz/8tA8aJIzAfW8PsRXyh/5eaEf78+e0c3pnhf3ImGS1Iv
V5X9NCWcSJphyZhUjORX0gm3vudrzKlL+nV3Ys+NBTvfliB9lnZiZ76qdz0L
vb+sEwdTN49ttoHsvbwTPZ7qmzVvSPKu6ESfdoMX9qxI821lJ65E5EbkyPr9
qk7U79aye78qZD/Vncj45+7Nj7ny/N+JGFWXqFLNJP+vE3fvPJ+Z+Zus/3fi
YYnZE+ock/x/TqjadMiYdI3iWQMn7oQOC3jwjvY3jZzYGvTTtH5XaT5s4kSH
jw3XD5X7T08nav6+MrKsGz2/mROfx59J0E8i+bRwYmrejPnfvpD8vJwwePp3
Kv0L9a+2EuPd3mZ84UPyv9ZOLPhauHd2GD2/rRPbr3We0XUI1ce0d+LvX1r/
fVfWf3R0Ivpa0tSc4rL+z4kJxU5U6Z5K/+/qxPu2QSWb2Wl94e3Eorn34t8m
kj/5OFEm9JCqtpK+D07Efy1tD10u8f+c+M/c+szBpWR/vZ3YceyxTutG9tJX
jC9Vu/TYcdo/+TrxJmN45NN25G8DxPPWPn+5rLes/3Nit9usG/nSfoY48e+k
rMCWA8mehznho4iZFl2F/MfPiZTduhl75Pzi78SvvWdlBUl8pJFiPE/8lv6R
Rr8f7cSJiSvXr3pJ8g0Q1/2+rFBl0vpgnBOm5AqtlBck/q8TmU8mnutQgfwt
0InzC1bVa3+U9DHZifD3AeaaX8m+goS8v03oWetnit9ThX8E9DjvLeUdLOyp
lPXg9IYUD2Y4cd1w/FnEIbKvWU7cSOmcnCLrv0OcSFt3c89WD6qXmetE/61l
e2Ysp9/Pd2JZQOd1RyU+9QInFm7p53u/mMT/F/ag6V9nUzrJd7ETuVW1Rd5r
qb5hqRNjK/uum+Yrz/+d2Fh+7aeLPeT878Sk5U+uBn0j+ax0QrlG3TQwSOb/
nfA83WjM8jw5/zsR9Gz3j2OZEv/XiWLFEiN2yP78SCdKRC9KvXWB9LHeCfdT
c3rdlngzG8V4y7+6Uu4NxYMoJ8oPH1S6hcST3OzEn4k+LVSTaH6NdkLfpnHo
mE20ntzmxJwyDQ7eN5B+dwj7bv3s/3F111FVfH+4x7fYYmIndoOK3VvF7sDu
xMIO7A7s7i4UlZk5dmFhi6JgNwZ2B+adu36fuet+3/73Ws9hzszuOc7Zx3d+
Czn/5aF6gXu1+UYLeR5mZaju33J+sv0ppb2stuvrwpqdoQOd5/9CdcmwT4/y
Ws7+/6E6Yu+Dvet6yPi0MVTnLVDm+zDn+bbNodpqOTpXoRfO/r92+52U9N31
LTI+BNvjQ8fO7Ru2lvF3h92fZ+7aPyfYef7f7m8P7m0tEy757lCdIe36Gtnb
SXkadv9IXND36jO5fitUt5l1pdgTH2f//1B9Y0/U/OwnpTz2herAwjFLKlaU
/986YLev+fvq3F/v/P5PqM6xsVTHIpml/x4J1c0Xrxi36L6z/0+o7nWqQZ0t
M2X8Oh6qq21P1HrgcOmPJ+3+myJjuRIh0j9Oh+psRZb73H0h919nQvX0wilr
3B8vxztn19en1SHpnf/PvGC/fvvbX0cHy3hwKVT735nQv/sN+f+uCLv9+NQK
Sm85+//Y7uIV1e+NHO+aPf5mvVV7+E7n//9D9dGsR7L2c/avuhGqT+bKXG/U
bmmvt+zxfdcG93iXZb1yJ1QnDR8WUCyP1M+9UD2h4ZvpKaasl/k/VPtGLp+1
ZbBz/x+qt+86eyxLMxkfn9j9/XSziMLLxE/t8e5mo+pPouT6ntv9YXS0+/kD
PWT+D9XPH0ckvN5Mru9VqHYbkXaF5yz5PvubUJ3zUvbMb3rL378L1Y89Zu09
PVXq50OozuxxZ26B3NLePoXqftPCRqoAaT9fQnUNq+GG7O2k/38L1R4BPeYE
xZf+8yNUZ5nXrUmSzVIeP+3yy9Mme/oGcv/zO1R3y3Jg1cF0zu//hOqsW+73
nRcjVoZeWS71vxPO8wHxDJ3Xp82vhlrmWzdDn3ofmW/CJXl9fEP3ye3p1WOT
tJ8Eht63vcr1l6PlfBMa+t7Sfrvf7Zf1QCJDH68x6mH9XDJeJTZ0/ErJ+ww6
JPNXEkOHR+/M2H+s1EdSQ9eO7nJ98SLpr8kMnemde4udaWR94m7ocoN97GFN
zje5ofu7Cuaee03aawpDb2hZpdCbPZKnNPRn78uB5cOl/aQy9NH2Z3/ccb7v
k9rQVQOiyvR8IJ+XpTH0zN4vL8c/43wf0dC1jrzdZL6Q/pvW0C5zSvwSiWR8
SWfo32cPhfdZJuWR3tCjl/eL3yNc+msGQy9a9HSVXwUpn4yGjnGr19B9ptRf
JkP7pQ+4miBS6j+zoXNnXbaz2A4pryyGDjvT4XFokMwPWQ3tM7mcVeamlEc2
Q0dUqNckrJLMr9nt46kvCZ8vkef5ctj1U+hc9Hbn825PQ8/+d+fOzrPO+sfQ
7qdvfS75Uda3uQzdr+HGKfFDnOchDb11wobML1rK8fMYuuncuD6eo6V889rt
427EdzNY7gfyGfqJdSxHnPP8TX5DW+vv1hh4XP6+gF1+HTJn6/lM1g8FDd1l
Q9feO3fK/UMhQ/fqUP1N1AC5Py9s6KIdDqV73UHGhyJ2+VxNUHpkc+fzFUM3
nLWtcqrXcj1ednn8HNJq70IZX70Nnfbu7loVPGU+K2bo1q+D54w47Dx/YWiP
KhNqtHD2Gyxh6CpZ580cWWPG/+xj6JMla8+N53zfpKSh/Yu86TEnj7M/s13f
OV4Ne3hI8tKGTp2yhn/ZLM56zdAnxuefMDNY6qusoaMej/X653yfr5zdfvoP
nBflfP5U3tDfznfMVuOMuIKht1xKv9P7r/S/ioYeVm5FwpQB0l4rGTr7rheH
d8+S9lnZ0Les0hcaTZXyrmK3hw1VNvQaKedb1dCeG4rWSFhU1jfa0MMf1zDX
VpL6r2aX34kEsypMkfKubugjGRotqf5Q+mMNQ1deuO/C0vJyv+Vr6DG7M58b
kEKur6ahQ6v3PevfwVkv2uV7sl9EZAHpH7Xt8p2sRwUclOupY+jXzed5RtST
86tr6CUj07/0CZH3r2e/n78e6Rsl51vf0CWHDeuSLVDqv4GhH+T8EtJioMx/
DQ2d50qTbGdqy/EbGTpeioBVJ5z90Bsbenf8LGbwZ5kvmtjnl/RtXMEEcv5N
DV2+a8LXOZfJ/NvMHp/CSu7dH0/6Q3NDt4ubmmLXYfk8v4WhVw3Z8PTKEXm9
n10enk2i/zrPs7S066Pd2/L9B8r5tjK0se3IljXNpT22NvTBb+VmT50r5dPG
0KU3x1kvszr7WRi6e/xHZx4NkutrZ+gzHwN+100o4097ezxLWv/KCGf/+A52
/3nwcrLXOOf7rob+6Pnj/uii0t46GbrDuuFzXvaS7290NvSl+q0yxNWQ8uli
6Me3PQNj/8n409VuvwHJB5fpK/27m6Eb5R3xuEFL5/cx7fF1fJ+K54Jk/Oph
6PFvZq0oksf5vqzd3z5/rl1gscxHvQz9cMjSA3Wc59P8DT1n/ZcEpT5K++1t
6FQFh/77uV/WN30MvSt22pggX7nevoZ9v532dIulMj/3s+tH9XvzJ73Ud39D
h2R5vut+nKynAgz99XOBtu/uy+fdAwz9JzjsbqqZUv8DDZ2iaqIuCx/IeDDI
0M+XvkhYoJbUx2BDv1h4ev6a/rLeHGKPv2+D1ge+dT6fs8tvkXnN67GUxzDb
TyoOnbVI+sdwQw+NCv53aJW0nxGG7lH+1tAh/aV9j7TH504prp3ZLPUdaOiz
b4ITXRoq7WuUod2G+8x+EiSvH23oGutWTkpdX85vjKGjWz+ZG/ZUynOs3V8G
122QpZnMh+Ps8XhJ3eCgpVK+4w3d5OuKx97z5PwmGLpO+N06Od9KfU009MYh
U4pcdZ7nnGSf/7m+6Z9Xl/efbOh8G97urRso9TnF0Oue5d05abjkUw09KK5x
TOq9zueFhvba9SoqlZscb7qhX4b/yBOcWNrjDEPvPXu2caSnnM9Mez660f9F
hw9S30GGzjbwtneU833EWfZ4WSm195N1Ur+z7fY2Z0pA19dyvDl2ez/WdKVr
urPfmKEjTyZ5O+mJ1O88ezzc0XV/ojDn98fs8T3s+KHOvWX8W2DoTUbbPHdT
yvpxoaE7re1VeV4R6X+LDL20+7sB7xPI/c5ie/zpPCXDsIsyfy2xr6/A9P1t
w6X/LzV0mU5lLw4dJuPDMrt/+6b1mjZBjr/c7l+txkxusk7GnxX2fBhXJ2Pq
aDm/lYauX21UJ48qMp+tMvTUjbm+ZNwn48dqu/9VmVush5t4jaGn/K34/PZc
5/dODT3qR0OPe5ukPtYZ+v7NTQFDWzv3P/Z6ruHZZIFJ5PUbDH1xf/LvMWuc
70PZ65+2zTOUrCXlv8lun8ca9inbUJ5H2mzoro+uuuakk+vfYo8fqa4tq5hT
rm+roacNCfcZOk/ybYbOmd5v+wNnvRtst7fpN9vt6yfrze2GLnipW+nPh6Q8
dhj6Z4eGNTNOlf4RYui4gs2/D8st7WWnoTOXSPe0Tk7pz7sMfT1dmQ6hPZ3f
W7HPN8XZUUuzyHoj1NAFXj/KXrum9AfD0H8vvzuU/Y30H9PQT8O7L35yVMZP
y9DpLnR0S71N2pvL0AOvDP91cpnzfJa9/pzgXd/3vKzn99rHH7D52EAP6Q/7
DL2s+KiKw55J+e63++fJSyHDd0t5HDB00KCSax/PludFDtrrg12tE4c5zwcd
MvTpn8fWv90l7eGwoRPuH5z9n5L74SN2+48wMvVw9r8+auix//L/6XpeyuuY
PV812V9+2WFZT4TZ4+31ogdapJH+cdwu34VZjqa5Jn9/wp6/430rM+eg83tw
9vslf35hxk653lP2eufU5NypVkt/O223zzH3YxtnlvEo3C7PH3X2pF0k9XfG
Hr9rjorrOkn2qztr6IV39IMLr5zfj7PLY3jJ3u6TxOcNreZEb3p/xtlP1tCF
Kp5/5hZf2utF+/h53i5PWNP5fVlD55/84cqIN3K+l+37g6EDRm0rJdcXYejY
3CPyN/ss7e2KPX+NGjY13Pn+/1VDJ17rv7HdTSmvSLu+Y8728xso9XPN0MlX
lw3tP0jay3W7fP1WVi9TVP7/P8rujzu3eL/8Kv0l2h4vIhefTdpK2t8NQ1d4
n7lp4lry+cRNQ796MnbvuvXO/as93rXomHfIWDn/2/b6PPnZAWfTyPhxx9Dn
a+7rcSlQ+u9dQ3/pNO5QlznO8232+uzqqIym833i+4ae37Krd8uTcr4P7Pdr
uHLXi1VSPw8N3azk2shfzu/BPTJ0t05+X7c3l/b12J4fMrl3vOjsT/rE0O+L
NMvVZr/UR4w9H174mvCos//nU/t+LWeBHded57meGfqR96oaeZ39nZ/b5VFz
T71qlsxnLwxdseRK39GGXF+sPT6Nv/CkeHYZ314a+ljjx103V3D207XLZ2Hb
0d4Hpf+9NvS/a8XiFfl/z9fb7anf4bVnnO8fv7X709y/YZtDZfx5Z9dfhgU/
88eX/vfeXn9MDBr5s5i8/wdDj/ve/8zh2jI/fLTbw/eAsz6RMr58sufnHYMm
bOot5fHZ0M0Tt077LkjyL4aut+P7rGlP5fPjr4Y+FP/zvVbuzn799nicrkaf
VyXlfuy7vd5cvS7vhcYy3/yw1yM7k5yumEZeH2eP5/tOHHR7JOX1074fy1E1
3/DOUh6/7PlvZ/r3i3M7v+9rz++lS2Zu5bSHP/b9WHj/amm+SXn9tdfbBXM1
HuDc7/yz76dvrhiQf5+sr5SpE+TuP6/AUCmfeKb2XFxpsHtpaU9upq5y59rP
GRekvOKb+k7Iz27xM8nxEpja99OhRPEbSn9MaOrAj/Hurdgs82UiU9dd1K2O
xycpv8SmLlzi1ZhLr6U/JjF16oJ7WtZJIO+f1NRFr78KnddJnMzUfaemcfu1
Tdqfu6lT9B+xJuqJfN6S3NS30hzv08bZfzqFqfulf1Pt0gXpvylN3bqiT52Y
mnK8VKauuHa5X+M+zvMHpm76Kd/o+77yeU0aUxcqGHnp9nrneQRTj2iRO/OA
adK/05p60YTsTx7sdPYnsMuneIqQlRuk/aU39axZHou6dpHyymDqIkvc/l1x
no/LaOpNvU739k8l7SeTqT/+TJFv1QuZvzKbOmve8jFL/Zz9jEz9rUfHe5kb
yfVltY8/6fmbgMzy/tlM3XnsG3ePeDJ/Zjf1eCs215PuMp7mMPVEv6VFG+WS
/u5p6vYfsmfZ4zxvktPUQePCd61YJdeby9Rh5Xqmcwt07v9NfXzMM7NcF2mf
eUyde1Slb4XHSHvPa+qN9/zDNwVI+eQzta6c5uFxZ//G/Kb2X5tryOJw6a8F
TF2w9/jE/o+d/z8x9byrxT5/d/ZnL2Rq98+Ria1xzvcpTe2dIMmuffnlfIqY
OqKiNeLRF+nfRU0dM6XB6Gvtpby9TJ1hfe1P/7ykvXnb75ezUKtbP+V4xUx9
qsO6LNGLnecvTd3mvrqff6XMfyVM7XOz2OuOjeR8fUwd7TvMe3h7qa+Spu4Y
8We5/wRZX5cydZI3n1cW+C79rbSp56795jm8kMznZUzdst29msV3y/xS1tTH
Fr2MGdxM1o/lTH1w+sfbdwLl/wPKm/rrtC+FZx6X9lnB1LEnvi+47jxPV9Gu
r6KL3c87+zVWMvW1B9PGjTkq/bmyqbt3jzzyvqO0xyr2+VzfVCLwg1xvVVNP
uGx0/7tA1kPa1A3fBmUdWUdeX83UL0/mPr3wk9RfdVPH/1fjwZ1Vzv2/qff1
j0sw/p7Uh6/d/lsNGe6eQNpXTXt8aJyzVbX58vlELfv878xu2yO7zAe17fa+
vti5f9uc/aNMHd6yWMErzu+31TV1usPG/ldNpLzrmfqo57rCsRfl/Orb59N/
4KAZq6V9NzD1jYMJKkZsEzc0df+a5488PSSfJzQy9QDVsv6PbJI3tttbgd91
im6QzyeamLpZ9NHZfrdlPGtq6uYXwr81He3sR2nX98IuZXfHyvdtmtvv3y33
uoD0Un4tTP07LmeYOizjh5/dfo4kT97G2Y+zpT3+zM3tMf+H1GcrU2+feiDy
ST3n/69MfW+GZ6/yaSVvY+r8wSF331939rOwr/9L3fE1nf0l25k64d8DG/Vx
5/stpk6a4pN59u+y/7mDqXfWPlG+9StZL3S0369Fj0HPZ8j1dTL15nohmV8c
kPrqbI/Hrpis99/L67uYOnl44JRqxaT+u5q6QcOesS1WSXvvZupXz/PODnfJ
33e3yy9V9K20b6S8epi6dsM/k8fOlvG2p11er9//zLpBrq+X3d4ahxxq4if9
xd/UD+LfevmxgYxnve3xO/T6oNlHxH1MffZ76kM7H0r/7mvqYfcX5bk+S9Yr
/ez5x/v0Nf+C0n762+cz2iP37czOflumnl5la9mUk6Q9DTB1nR5V77WdIuU5
0NS59qiEnmulPw0ydZmuhfcfdeb7waYuOTbxkD+z5PVDTF258ezJRgXJh9rl
1ahLntjsUh7DTJ1+ffe0QQtlPB5u10f867WPHZf2OMLUhwssaj7xjNTvSFOP
Pl3ud8a5sj4PNHVUsZwbuvvK/DnK1KHLbvzbFCvz62hT5zi58MKODXI+Y0x9
e1byHs/nS/mPtcsvMuHiLxfl895xpv67ybdlvTZSPuPt909aWpftKv1zgqlP
LhpVaH1LOd5Eu7808Qt50dD5PTBT37y8u83KgXL+k039qN3Kj2tSyOdHU0zd
auD4ZgXySvlONXUPo1XghhnOfmGmtu+w+2bxkfY03dS9zy18lNb5PtIMe/7w
m3IvbImMvzPt+TzZ2vRF4st8E2TPR74NHhY5KO1plt3+15Tz0M7+FLPt+qnk
UTh2icyfc+zxtuqs1LXcZX6Ya+o560rt85on9TXPbo8bWnnW6Sbtb769Hqj2
s7xvCpl/Fph6x4k3ww84+9UtNHWiyn5dW1jSfxbZ/eXJhFe5L0l7Xmzqhev1
gQXz5feFltjzbYePSa8kl/ltqf33jSu1NiKkfS0z9Wwz2dXYHzL+LLfH+6T9
b771kPlmhd2+264/NGaFjCcrTZ1pZsjJrM7+pavs8eVH2lm1c0n5r7brZ/iz
3P615fhr7PkqTd1PMdtl/bbW1MGb8+66NlTazzr7+F2qpZv/T7zefv/0Baes
eix/v8Euz/neU3N9lfl9o319Hv5Dazq/z77Jnj9SRnbecdz5fpTdHssf3zfX
Wf9vMXXVzd53Zzrrm62mvnt2TeZ+JeV+dZu9fklZNU3ZOFm/BZv604rkveJd
kfPZbtff5sjfo2vK+LjD9pj5btvKyPmFmLpG28xf12WT1++0x9+Z78uG95Ly
2WXqxdPr1hyeW+p3t6lHrXq6uEtqcaipWzT5Nm5TAmkfhj3+uE+Zcvm23M+Z
pk423bPksfzOfmz2/JVz5O0RjWS97bLXc9FeXzrul+Ptscvj2rcHpcpLf9lr
6sg2PjPP+sjnhftMXfP3mW9ezvd599vz2+sDCdekk/o5YI8ns/OXGlBH2tdB
U69b59raeZlczyG7vY0efur2ThkPDpt6cvlq457tlvHxiKl3jfMOW3JXxp+j
pt7TeMuA4t5SXsfs9dP22uF3r8r4HWaPzzHdO7UZI/PTcXt+uv80RdlWkp+w
1ydxGcK3THT2gzf1wMWFxx/sIfPNKVNnXrCq4JNycn2n7ev9c2Jt750ynoXb
66EVn6Iq3JXx4oypvQI3hMTrKz5rr9+HjX5RJcrZP95ev2XfWeiOn8w/5029
oljx7e9zyv3zBbs/jc8ddGqNjE8X7frz9Ol9t4Wzv5ypl/bKfLON8/uVl019
aGeLwKXJpX1G2OuLW68upnT+f+KKqQNyn3zY4Y7z/Lmpj5xTjdK2kvKKNHWt
VR5/Xzu/53PN1E/S5Oq8xiXj1XX7741JL7uek/3CouzxK3Bh9XK+0l6i7fVm
V6/MZ2dJ/d6w+8fH2tn2DZb+fNPUp4cuSxU303l+zR6fUtXJOeabXM9tU/9w
9e0Q7DwPeMceP8dET83eRerrrqnbpRpnFd4r9XXP1NumuD/tWlTa4337/iG4
yNeIvdK+H5g6z6cPu6MDZbx4aN+fnb/c7bdyfv/W1B/cZgwNvi3j0WO7vb5O
OCg0h/TnJ/b4c+Rl2tTrpf5i7P6wJWmDmxHyvNZTU28p7n6+QGo5/jNTvygd
N7ei83ucz01dvH7w9JnjpL2+MHXPwsN8xq6X+S7W1Ksbdw9ZmEGu/6Wp3wz3
vZ/smbOfnqmzuRXxSu8n5fHaXn96HtzdY6C0zzd2f/F4PKd7D5lv39rvP7HK
8ON5neft7Pkmbl+hKs7+Su/t+5EjQf0ufZT1wQd7vr3/MGjmVVl/f7Tnv6g+
CRcnkfbwyR5PI1Otne6s9z+butyun3+9c0h5fzH1oK4zZjy7Ke33q6ndet7J
NHCLtMdv9vigel08fFXa33f7ekOaeHSb7tz/2/P1+EpFrh+S+oiz+2ehvwVz
93f+P98+v8xN3of7SXn9su9PR3hdS+SS8e+3PV5FfzhwdZSMH39M3elpvNkj
Csj1/7Xrd3/BOamfyPn+s9fnrzP+jnZ+P01Z2i/euCkvH0r5x7P0mMtzto5P
KutlN0u30otH3XX2Z4hv6YBnsVvrppP3T2DproOKlWnifB8uoaU39ls3L6K3
c/9vadeO96FTs4kTW/rKrrZpnlaR4yexdETLYtMTf5DjJ7Vfv2thkVpO+Saz
dJm839Lcey/tz93S/c//9EpzUP4+uaUXbGz+5+ZP+fsUlv70Li7N95NS/int
14d9bJLI2f84laVXJ5m7e1lV6c+pLV3o7909pZ39ytPY77dx3pqbBaV9eVg6
fPivOsWd/59La5fHrAzxNtVz9iey9N7+V090yyOvT2/pkaXWp4mLkfrKYOmf
y0v2bddm1f+c0dIHX77Z4b5f2kMmSw/4t7BaIWe+ymwfb2+VDxu3Ovf/lk6R
QRmXn0j7z2rp+B3dH8bukPEtm6ULX0o6veINWc9lt/T3jznuX+woeQ5LFxh3
/0S1eNIfPS3db8yGUmVvSHvLaenyq7zq/bakveSy9ITDsf/+vnV+D9nS1ibf
Gc0GSnnlsXTwuu9VU6WW889r6enZv3o1Si/nl8/SdXo1uFHkmbNfgqWL1a/5
99oCqb8C9vUnCJ6cbq6014L29brVS/3c2S+rkKWH3wp1FQiR8yls12fZeEEl
Skn5FrF0iamVVowd7uyvaOlFfb7d2dVK+pOXpWeumvjwmnP/5W3phBXf9tGd
ZLwvZunDU1015raS4xW32+/Y9w2KTJW8hKVbnOjXN29buV/1sfT5yVuWTOoh
11PS0omDzx9ZPFw+nytl6T/VZ7d4VUheX9rSQza3jlzZWfIylu6dsWm69M7+
Q2UtHXK+6b3S7+R8y1n6XZMSrUJrS/8rb+mh12Pu5PRz9nOw9MrbrQJXpJT5
qKKlK9QuNafnbSn/SpZu3Pzv/m1tpL1Uts+3ev/4pZzxtordXiKm1S3m/L5w
VUv77szeokgjqX9t6duRLdSg+tJeq1k6WYdZ82443yesbunO11pVCi8h68Ea
lp7Vwity21jn9yHs8pixYZOb8/lsTUunbbD4RISz/2Ytuz5m/HHL3UGOX9vS
L+/mjn7ifJ5Xx9Ltc02tMGy8XG9dSzcdkTlxroSyHq9n6T6vcvzc9kaup76l
Df+bF784+/k1sHTLVzeedf0p7auhpS+u+V09+pKUZyN7PHm57nDbT9KeGlt6
c+3w/Ad/yfk0sfTj+h03vHgk40NTu/6e7t2YdbOMj83s8W5HpbAC1aU9Nbe0
e0yc/+BNzv5Ulp7WLazBlefSP/wsXTGun73OlPuZlpY+tu/N6HndpX5aWfry
0e77++WX9t7a0m/mTE0S43xe3sbSmaMLpF24Qe5n2lr6TNtHyyPmy+vbWbpq
+TeHrmyU62lv6YdzZ88OeCH9oYOlz/aasznpa+f7rpaOjCy7OuK1lFcnS39o
U7RWn74yHnS268M7qkjrFtIfulj6RkTDP9Oc+8uulk4UczNx9y9yft0sfT/P
hdt7vaV9dLd0/b3Vy6YcLOudHnZ93lNrt22W9WJPS3/1Wrbg2io5fi9LHz/+
8EHjYVK//pb+Eb06b5cIKb/elq5drta55+HSHvpYetv6NK1WlZG8r/33fYIO
dA2Q/tXPrt+haZ/3bSrX09/S1f6F7PqZX9pXwP+dvz5vGFRe2uMAu/93CFro
00g+vxlot+dBCc70WiPtYZDdn8YvGbjogNw/D7bHz+MbUzdJJ+uhIZZ+0mdJ
r0de8vdDLb3GLW7E43CZ34ZZOt/n36mSpJT5ZLilX9fM2rREArn+EZb+leNi
XCcPGf9GWtrtTJq46k2kPAMtvadR7Og/heTvR1k6QZosq+8XlPIabelDfW98
2tPX2d/T0r1aRH1KV1aud6ylY7v/+NXzs/O8rz3evBuTcugIycdbusGMQQ8u
7RJPsPT1o0PWxKSU959ol+/K+EuKVZH+PMke759HpT30WNavky09Od3YIec6
yHg5xW5Pr8esK5Je1j9T7fN79ytnxWdSftMsXaX8r8mnnP37plu6if/31JGV
nf3DLN18WEJj+n6pv5mW7vu8xPOD3rIeDbL7V8TAWXeLy/nNssdb30wP5w2T
/jfbHj/b/NaFH0l/n2PpsJFjhnwPlPFirl0+c1fOyX5ajj/P7u+p2/lOmSnn
O98eL/stK3yi/Yv/eYGlL3Rqf8dwnu9aaOmF+dueGRwkx19k//25e50+55Tz
W2zpq5HvTuXvKq9fYmnPzgu2Xzwl/XGpPT8/fd37zHfxMrv/PFhw4UAmaQ/L
Lf3i3Ykj60aLV1g6b/te3Qcnkv670tKLEzwtHRcl9b3KHv+6bC246ai0n9X2
fO/7+9aWwZKvsY9/rk+3kkPk+tZaOui5K/2MNHL8dZbOUKXqh7V5pHzW2+1r
Vtkpp6Klv2+w12/BRdJt9JD2t9FeL/w6XyuP8/zKJru8hkzqGTFHrn+zpZf6
3jnReqH0ny2WHlv9Tb2aATJ+bbV0hwXTzo1xvq++zR7Pf/rnO+rsdxFs6fc5
2p0wO8r7bbePX8s/x+lY6a877PGoaZbYro+lf4XY64sTle50ryf9f6elk1fa
vHLGFGlfuyz94M+F/Vf7SfvYbelSB2veaVRaxpNQu77mr64fnE36k2HPhyl9
E1x29js27fVi2dXdHgRKe7Ps9UuZ+TN/bZTjuSz96FTqNPHayvntseebF5cO
z3K+z73XPl6L29N6OP1/nz1flLlcKdti6S/77f7l86B3WIC0pwOWbp1vfaHn
k6U8D1o6t/K+tiahvN8hS2ctZ98sVZb7j8OW3n1u25vbzn4FR+z17JFnfyam
lfZw1B5vL/T0TdBW7meOWTpmwA2viZ2kfYRZeqDPjgOrhsnnK8ctvdajSak/
zu/bnbDXF/sD/ixt7Hwf3NIdjwypcnOz9NdTlvaeVjD1vdJyPaft/Hq/Q0Pb
SnsKt+enm1uuXb0n/f+MpVdkiX06+qbMn2ft9YL72v5h/6Q9nLPHiyL13VY5
+xOct7RPlZ4BBVrI+1+wx2ur8KbgH1KeFy2ttl/293B+n/KSpW9trt7v00oZ
jy9bOlVl70U1k8l8FGHp0inbb0p9R+bzK5a+9CrNo+gUzvPnlu6R92KNXQnF
kfb9Tyq/Pw/WSPu9ZrdPz0kptkXI+V2359voAerOTjm/KEunH78+6sJCmR+i
7fuby6rMlaPy/PMNS3+OXtA0Twp5nvWmpT0W5/Fo1Vra4y27P1a6O/eUs7/b
bbu/pG3+o8xZqa87lk79UOXckkX67117fVLizrWPNeV871m6UbITtyZ4Sv+7
/3/XV4XC0hWQ+4EH9nhb5EyV5tulfTy01/PHVpuTG8rxH1l6dMjZRW39ZX+i
x/b6enNojSxFZf3yxPbpTeYW5/dVYixdtObQwPxbZD3y1D7eKd86d5znw59Z
+ujlTJ5ZXjv75dnrGZV8r/9z6R8v7P4xZfmJq0vl84JYuz2U2l0nXnXpTy8t
nXNEVO2LJWW8fGXpto8+DBpoyvFf2+NR26UBISukPt7Y/r1A31sv5fPWLo9X
vdZdvSrz2zt7/m5a2r3ccLn+9/Z4Us8jrux68Qd7fvNKNbf7GmkfH+37jWwB
e3yzOfvxWTpLh9OudfPk+3yfLb0l3DdrzRty//vFPv/3kcPeJpf10Vf7/qnV
3uQJVsrnL98sfW/1WL/Rs+T9vtvzy6R9hyp4SPn9sMfrFX6p1Ux5/zhL95w+
/lXwOulPP+31/9PIlMnHOvf/9viWc3WViNIyHv6228+WRXNjMkr9/LH0iYlf
XLlC5e//2uu3os9nXJog5/fP0tk7r+3Sz3meWLn0r7fLj/W/K+0vnku3Hnc+
6cv7cr1uLp0n5d28DT3l7+O7dPH8zfKWyiTjVwKXjvWfejqkudRHQpf2yOi3
KDyZlE8il+4Yci2g20GZzxK7dLUxf6cnruD8fpBLHx7Wt1uh5jI+JHXpyIWF
op6HO/sJuPSYsIS1R7WS/bzcXbrDj5EnG9Ryvl/o0hf3ncnrNkyuJ4VL+6yJ
F/gqlTilSx+s77e87glpj6lcerd/zxernetP7dKDpi8a3dLPuf936XLL+jSo
7fyegYdLn8y6vn6ZKzJepnXpWz0X7Zns1G86l147M1fgZ+f33dO7dK5pO79H
l5LyyuDSrwYmbZ3bXcbvjC4dEbLieOVHzu8XuXSPPUcXNtQynmR26S3/tjZo
73z/KotLV49o9GDsICnvrC5d7/aUMI/VcrxsLr2q8bhuW3pI+8/u0tvHRUwt
EeDc/7v0mfHvUw7JJOOZp0v/+DDOK22A9MecLm3E1f/8urfUTy67PSS8H9P8
hfN7SC6dr9W13zXvyfHyuPTWFQG7Ojr7jeW168+n18z6p6W+8rl08uKz2yXa
LuN7fpeeeLvC43SrpH8XcOlF1aq9uuD8PkhBl85Su4r7pnsynheyHTvybPNv
Ur6FXbrCmhWb0q6Uz5uLuPSsHGWDk8c6+yu7dN91MwonWy7H83LpkuW3Zinp
fN7u7dLNDz+Oahcj/aWYSze4s2a+y8v5/qVLl93id3V/Cuf5f5duPCXP6K7O
78v5uHSpezvmlL0peUmXfnp1fviOU3K8Ui79fETe+UHO57OlXfb9e+JlHb7L
+qKMS79+nHt1ipVSP2Vd2v2P6dnc+f5NOZfe44o5f8ZHyqu8Sz9JWLXHohzy
+gp2e1h2MenJfFLfFV368fl8545r5///XTpvUK1aIb7S/iq7dNUVybwDcsn6
r4pL+wcdyOa/WI5f1aW7ljA77YkSa5ceX39H//lr5e+rufS5pOmvpCop11Pd
pXvFhuyd2lnaTw2XXtzo+omV16V9+7r0vxP19KPycj417fby9GeJQjPEtVy6
+7G+fcf0lP//qW233+3NSzSfIP2pjku7LRhe+VALGW/q2v3j66KD573l84Z6
dn8rezpLu5zSfuq7dOZ5m5/1/ybtsYFL/+3czOvlN2mPDV26WYVafu02Ob83
Zb+/zxrPn879cmOXfpjt7ZLdzvelmrj0oe71V2x37p+bunTFVK0qnXJ+n76Z
S7/o1W7a+4HSvpvb+ZwtZmgb+fy/hUt7Dlk6yPOKlJefS7fI7uMqlk/G85Z2
eVfaH7Mkq4w/rVx6cIA6/yxM1q+t7f5SrlrjAWtlvdLGrv+VTWuMui3X29al
O/ksX5P5poz/7VzaK9CnRA/n9z/bu3TS142eVh4kv+/RwaX7pwtYuMZ5Pruj
3T59+g7a8c65/7fH7x2F1Hvn/7c7u3RM+fsTc+6Q8u/i0ufjqoTmcp7v7+rS
3UqmfND+kpRHN7u/721e58gcmb+62+3xxPnsPhelvfZw6eBnOyulcr5P2tOu
vw+hF1PUkeP1cukMIw77Vdkr60d/l67S/tWc7Mnkenvb7T30SeOasbJ+7WOP
/8MKHS5RXv6+r0vvOlv1bo5ocT97/FwW0DfHEFl/9XfpcUv3RCT+Jecb4NLD
P/Zef3Wj3M8OcOmmS8vMHHUg9n8eaL9/mvVzXrSR/j3Inl9y/jQepZDyGuzS
b/s2anj6hcw3Q1w61bQbNTYlluMPdek1pZOPKesr/XOYPf4uSPTpfWfpH8Nd
+lPe4I9xzvepR9jlUWhK0ZhweT5opEvPuNu4dJI+Ul+BLl00cf3Apw+c/Txd
OmXQ/ETHskj9j3bpQuf6Xpm4UMaXMS4dmGPisS7OfhljXTrIr1rYszgpz3F2
f0o06UGSKDnf8S69IPHKHbVvyPprgkvX+jDzczPneY2JLl1/z5S2budkfJvk
0kvdJh8pt1rOf7JdXlPGRY0rKO15it3e5gUMO1pf2vtUlz2T+f+87uwnMc2l
9x4vfuT1XPF0e3581aXTODd5/Qx7fq6dc2TZfVKfM11a/f//guBZ8Gx4DjwX
ngfPhxfAC+FF8GJ4CbwUXgYvh1fAK+FV8Gp4DbwWXgevhzfAG+FN8GZ4C7wV
3gYHw9vhHXAIvBPeBe+GQ2EDNmELdsF74L3wPng/fAA+CB+CD8NH4KPwMTgM
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
HjmsJiCH1UTksJqEHFaTkcNqCnJYTUUOq2nIYTUdOaxmIIfVTOSwCkIOq1nI
YTUbOazmIIfVXOSwmoccVvORw2oBclgtRA6rRchhtRg5rJYgh9VS5LBahhxW
y5HDagVyWK1EDqtVyGG1Gjms1iCH1VrksFqHHFbrkcNqA3JYbUQOq03IYbUZ
Oay2IIfVVuSw2oYcVsHIYbUdOax2IIdVCHJY7UQOq13IYbUbOaxCkcPKQA4r
EzmsLOSwciGH1R7ksNqLHFb7kMNqP3JYHUAOq4PIYXUIOawOI4fVEeSwOooc
VseQwyoMOayOI4fVCeSwOokcVqeQw+o0cliFI4fVGeSwOoscVueQw+o8clhd
QA6ri8hhdQk5rC4jh1UEclhdQQ6rq8hhFYkcVteQw+o6clhFIYdVNHJY3UAO
q5vIYXULOaxuI4fVHeSwuoscVveQw+o+clg9QA6rh8hh9Qg5rB4jh9UT5LCK
QQ6rp8hh9Qw5rJ4jh9UL5LCKRQ6rl8hh9Qo5rF4jh9Ub5LB6ixxW75DD6j1y
WH1ADquPyGH1CTmsPiOH1RfksPqKHFbfkMPqO3JY/UAOqzjksPqJHFa/kMPq
N3JY/UEOq7/IYfUPOWxP8P/NYRUPOazckMMqPnJYJUAOq4TIYZUIOawSI4dV
EuSwSoocVsmQw8odOaySI4dVCuSwSokcVqmQwyo1clilQQ4rD+SwSoscVumQ
wyo9clhlQA6rjMhhlQk5rDIjh1UW5LDKihxW2ZDDKjtyWOVADitP5LDKiRxW
uZDDKjdyWOVBDqu8yGGVDzms8iOHVQHksCqIHFaFkMOqMHJYFUEOq6LIYeWF
HFbeyGFVDDmsiiOHVQnksPJBDquSyGFVCjmsSiOHVRnksCqLHFblkMOqPHJY
VUAOq4rIYVUJOawqI4dVFeSwqoocVho5rKohh1V15LCqgRxWvshhVRM5rGoh
h1Vt5LCqgxxWdZHDqh5yWNVH/n+6qqclAAwDAIIXp7Ft27Zt27Zt27bTRo1t
27ZtO81bJ/u4cx9wuKXouKXpuGXouGXpuOXouOXpuBXouBXpuJXouJXpuFXo
uFXpuNXouNXpuDXouDXpuLXouLXpuHXouHXpuPXouPXpuA3ouA3puI3ouI3p
uE3ouE3puM3ouM3puC3ouC3puK3ouK3puG3ouG3puO3ouO3puB3ouB3puJ3o
uJ3puF3ouF3puN3ouN3puD3ouD3puL3ouL3puH3ouH3puP3ouP3puAPouAPp
uIPouIPpuEPouEPpuMPouMPpuCPouCPpuKPouKPpuGPouGPpuOPouOPpuBPo
uBPpuJPouJPpuFPouFPpuNPouNPpuDPouDPpuLPouLPpuHPouHPpuPPouPPp
uAvouAvpuIvouIvpuEvouEvpuH/Tcf+h4y6j4y6n466g466k466i4/5Lx11N
x11Dx11Lx11Hx11Px91Ax91Ix91Ex91Mx91Cx91Kx91Gx91Ox91Bx91Jx91F
x91Nx91Dx91Lx91Hx91Pxz1Axz1Ixz1Exz1Mxz1Cxz1Kxz1Gxz1Oxz1Bxz1J
xz1Fxz1Nxz1Dxz1Lxz1Hxz1Px71Ax71Ix71Ex71Mx71Cx71Kx71Gx71Ox71B
x71Jx71Fx71Nx71Dx71Lx71Hx71Px31Ax31Ix31Ex31Mx31Cx31Kx31Gx31O
x31Bx31Jx31Fx31Nx31Dx31Lx31Hx31Px/1Ax/1Ix/1Ex/1Mx/1Cx/1Kx/1G
x/1Ox/1Bx/1Jx/1Fx38P/J8dNwAdNyAdNxAdNzAdNwgdNygdNxgdNzgd9y86
bgg6bkg6big6bmg6bhg6blg6bjg6bng6bgQ6bkQ6biQ6bmQ6bhQ6blQ6bjQ6
bnQ6bgw6bkw6biw6bmw6bhw6blw6bjw6bnw6bgI6bkI6biI6bmI6bhI6blI6
bjI6bnI6bgo6bko6bio6bmo6bho6blo6bjo6bno6bgY6bkY6biY6bmY6bhY6
blY6bjY6bnY6bg46bk46bi46bm46bh46bl46bj46bn46bgE6bkE6biE6bmE6
bhE6blE6bjE6bnE6bgk6bkk6bik6bmk6bhk6blk6bjk6bnk6bgU6bkU6biU6
bmU6bhU6blU6bjU6bnU6bg06bk06bi06bm06bh06bl06bj06bn06bgM6bkM6
biM6bmM6bhM6blM6bjM6bnM6bgs6bks6bis6bms6bhs6bls6bjs6bns6bgc6
bkc6bic6bmc6bhc6blc6bjc6bnc6bg86bk86bi86bm86bh86bl86bj86bn86
7gA67kA67iA67mA67hA67lA67jA67nA67gg67kg67ig67mg67hg67lg67jg6
7ng67gQ67kQ67iQ67mQ67hQ67lQ67jQ67nQ67gw67kw67iw67mw67hw67lw6
7jw67nw67gI67kI67iI67mI67hI67lI67t903H/ouMvouMvpuCvouCvpuKvo
uP/ScVfTcdfQcdfScdfRcdfTcTfQcTfScTfRcTfTcbfQcbfScbfRcbfTcXfQ
cXfScXfRcXfTcffQcffScffRcffTcQ/QcQ/ScQ/RcQ/TcY/QcY/ScY/RcY/T
cU/QcU/ScU/RcU/Tcc/Qcc/Scc/Rcc/TcS/QcS/ScS/RcS/Tca/Qca/Sca/R
ca/TcW/QcW/ScW/RcW/Tce/Qce/Sce/Rce/TcR/QcR/ScR/RcR/TcZ/QcZ/S
cZ/RcZ/TcV/QcV/ScV/RcV/Tcd/Qcd/Scd/Rcd/TcT/QcT/ScT/RcT/Tcb/Q
cb/Scb/Rcb/TcX/QcX/ScX/R8d+D/mfHDUDHDUjHDUTHDUzHDULHDUrHDUbH
DU7H/YuOG4KOG5KOG4qOG5qOG4aOG5aOG46OG56OG4GOG5GOG4mOG5mOG4WO
G5WOG42OG52OG4OOG5OOG4uOG5uOG4eOG5eOG4+OG5+Om4COm5COm4iOm5iO
m4SOm5SOm4yOm5yOm4KOm5KOm4qOm5qOm4aOm5aOm46Om56Om4GOm5GOm4mO
m5mOm4WOm5WOm42Om52Om4OOm5OOm4uOm5uOm4eOm5eOm4+Om5+OW4COW5CO
W4iOW5iOW4SOW5SOW4yOW5yOW4KOW5KOW4qOW5qOW4aOW5aOW46OW56OW4GO
W5GOW4mOW5mOW4WOW5WOW42OW52OW4OOW5OOW4uOW5uOW4eOW5eOW4+OW5+O
24CO25CO24iO25iO24SO25SO24yO25yO24KO25KO24qO25qO24aO25aO246O
256O24GO25GO24mO25mO24WO25WO242O252O24OO25OO24uO25uO24eO25eO
24+O25+OO4COO5COO4iOO5iOO4SOO5SOO+z//h9L1vqU
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 10000.}, {0, 0.8451849596495239}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.674920031685783*^9, 3.674920046423378*^9}, 
   3.6749201037767076`*^9, {3.674920163517138*^9, 3.674920190712412*^9}, 
   3.674920747748728*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztfXusZlWV5/V+r3vrVt2qgoISrRIUaRjFaWmd6ZnxmZ5OO5Npu/8d54/q
cTqNoKDSIESRQBMUiIkPEiKPNBFFjIA2JkB4JaBSIIhGg1AaFESCEjQEjCgI
eObb+ztn/87+nd9aZ39V91aPnblJ3Tp3n/1Ye621116vvc87333Kcf9w4rtP
Of7v333YO/7x3R887vi/P/mwv/rAP06LBi9ZWFjcsbDwkr85bCE8VwsLzS/8
vCL8apcUF5wQ/xtUe/bsqY499tjwb2EUfy9VTz75ZKr+3e9+t/r4xz9evf/9
768++clPVj/72c+GselIvVrw3v1lPeT3v//9OOR0mOlfe9eX9+4v6nff/va3
47sTTzyxOvfcc6v7779/r/v03r09vptUzz//fHXddddVZ5xxRnXCCSdUZ599
dnXnnXdWf/jDH9Zlnm8lfP7qV79y64/XAYZBzk2PPfZYBOW2226bNvjBD36w
sFz9/ve/j5w0/at6z3veU33uc5+rvvWtb1Wf+tSnqg9+8IPVL3/5y4XFGoX7
Wue/ChZbq75L6jSsEFAV6lx55ZWRDS+99NL49wMPPLBf4XlbXefyyy+PyyCw
53e+850IV2gT6LQ/4XmLYNlBQbvhfoRxsc3Sw7B6qw9/+MOx6vR5XPfw6U9/
Oi6C8Dr8BC4P1b761a+mUfa1TqTesHrwwQcXNlY33nhjRFlgrWlJrOw0XisY
Go4OC/9LX/pS1fyEuhdccEEoX7P5ltRphN5TTz0V0fGNb3yj5qCVyNWnnHJK
gnF/wONxtNduuEbjl9dZOLHm6O9973uR+T/72c9Wv/3tb4f1DKaPsRgYHUeK
f/SjH409tt4XvR60X8/othQVjP0yVItFfvKTn6RR7rjjjuq4446Le/W8o8wF
RMMXP/rRjyIQ050xAXHPPffEstDFugLxZsGciya587Z2vbWE8CUz1nx//G8U
96Ygh08++eSkOjWA/PznP4+T+PGPf5wA+frXv169973vjVzfel/0etB+XTPN
SnXmmWdWV111VfXss8/Gf/fee29s9vjjj8e/9wcUg+qRRx6J1aBijau77ror
lv3ud7+be5S5gGhY9+mnn47Vdu/enYD48pe/XJ166ql7NcpcQHis26VB3nb/
cEzNuh+I/y1HoylI1NDioosuql544YW4AH74wx/GsmlvCYigEoay3/zmN+33
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
0mTvWC86klS4wU5V618nKk1DGaVKES8IN/hhGEUUhZL4h6P/oIuNiTUKCEku
Fux+fcdgqtpibl2K0eHy1fBwUHoyMr6WU18mR9L6GAnIC2gwStghIrZxa1p5
pEub8XtszXRpBGCg+LmZm0WeVTiBzMQiuM36zibscpLfyONhxvh8jlVn6JU2
hA5i89pyW6wxb3/qedT+1E5sumfPnilrHxs/7Nn6cnhdX5zmBoKXLDjVIlUZ
6b27q3/DGwl15dswxQoBq1BuWDM0tKKxuSaXrfEpyuXP28xyMhewiYZYXEca
ZuvH+7jyjL8m8VMyoVrzbfDud8MH6Z3FS8wAWmVQyWukGStmI5PDSzg1pabH
A2ohkhMQwTI4zyidjiA3GVZp98buQa5HpUooB45kJkeJg3QTDOR8yziKt4XO
V7k3tPijHnOBcEr7K20svpPS3JGlS8ghtroFzdwuHJdstxd1vZTpnKKtdSjm
TbgYiBYYCG7fOGCtFy/0f2S4ISd9knq5RU6g2kA/6fK0zZv481Ut0/IEe5uR
/gL/5ERAoOwqOqxpimJ1j1ovWxZwtcl4apUoqaHMiVjSrPj+r/nGyRjfhp4I
RqHwvL99zWUm+DESM3KDDRnCHVFFakFK5iDVW8o5Q12dMMjHMNVDf77z44rk
Bx2WBqX7vn+7VFNafEq5lhTW9cDQCBVoJuBKHPfmINDerg7nQ9Kq6ydV1iD8
UeTPI5cLyVyTGkWXUlRa+SQw4rtDEhH7PgvbbMWt7wo3WWfTKr5MNqdT6mOQ
8lIHSPwMB/MFtjq68DXChJtDS8cY5pULto1ShPgC3LQrYvFqInffR1RHdVn3
w7yD9od5U71GUldVVSJaCjQk0wlFtrSqh2krJxToCm/JqgXLaqqicnuU40LZ
cgVOCj8tVkY+LN4mWvd9dbShYfcbtoP2N2wzWtc/trQx3ZGlmptS4lGPziQq
UyC+3Zi3pT279+oiuoZSKcnkyRjkbc35+C6lgjVDTuv6AxG1qRVs8/qDpvHv
1ic0mx23+9nXQfuzr8bKNuSRDIy4HGxEzwzRTtOGM1CtQl9BItmgNmJTcpDr
lPpzNkEDSKXky8loe75UKFC+juHwiIWN1IDLJ9BffKVypqL7X2BtK3cZC5l4
9NNfDejLOdAgKzSygpsVlBWgOi0gCY2rujJdvr4xN3GWESINtApM867NGW1X
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
Ita7++67q/PPP786/vjj4zRuvfXWUE8tH5pJ3xmsUf07LJ8gTwJCw8+LL744
i9pT9/8nEYsurlWK7sk1GL1nixrpdfnllzdVFhqZEpbQFVdcYZIOHP0fCmFD
vdhDLlecMziNXAlL5aSTTqouuuiiWCVItgbHpkSL40EL/F/p6WUSGu/kyowu
4+qxxx6rLrzwwiiEAz3D+TmDK/6bGDi++Z+z4dQG3+Yk3z7GWv47URZrO5bt
WvUDYxZq+T+Islj7r+1+/nP4PezvR0mr/97TbWwI39z/SE/QiPr6+dtUE4bA
iiiLtf+33c8HROv45iy7DQzxv83bOP75vWkTf7dZD68dhoQdeGE+0pvWtg10
Vpj4V4uyWPsoux8lm1Ru0umizHQuvKxkvKNF30fvRT971rUNYmY35W3+nd0G
y3OraE36bVHkB1bnZ0RZXz/AKjCARHAIN1inFFVzrEUoTpsL+17N+/7zkr7/
ubhN/O2sTzhA/yXv0/EVFbUpkg7/2u9hL38zn0mRjQ0aniHK+vr5j6J1fPOO
fz18gM9/lMNUFEEsb7Pe85j7/R8Ft+7t+5ogC0+G36CPE0zrr7k3MM3rW2m8
FVMDvLruuuuqM844I95JcfbZZ1d33nln644gx9zaJz9JsH2CBRZGD7ZmsCpC
N7fddlvpyI5PpOmhcT60nRRhpFNOOaXGWM9I5X6Oxoiemimp3j333BPLpn2U
DFXqlHj66adjvd27d2dW7qmnnprVc4YqvcPokksuicx08803RxJOrdfoubnp
ppv6ydTvWWjTKfDftHzKIcfGa3vOOuus6oUXXgCS98W1EO4HCpddnXfeedXD
Dz8cWTJ4Tk477bTq4osvXjPXwiCYrLFeMF3Z3/Xcc8/1E6fXfdAAGwzi0MuU
LmmkG264Ic49ODQKR3JcAOMaewGIsNLCsgmcEMRMcACFaldddVUf9jzrfqlm
tGeeeSb6kk4//fTYbaB+sPCnHNDLaOsh8V8Xfkc5/an0FN+8dW3brPc84Aqh
PLB3rW2bPjjQ03/K+zy+1SY2Kar5/8j+///fz/++Sj/NzY8v+b9epVyg\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fsqdata", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Sum", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"fdataPad", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "*", 
        RowBox[{"Conjugate", "[", 
         RowBox[{"fdataPad", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "u", "-", "1"}], "]"}], "]"}], " ", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "fdata", "]"}]}], "}"}]}], " ", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"u", ",", " ", "1", ",", " ", 
       RowBox[{"Length", "[", "fdata", "]"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fsqdata", "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "10"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.674919838833652*^9, 3.674919927833585*^9}, {
  3.674920025993498*^9, 3.674920027947692*^9}, {3.674920200265706*^9, 
  3.674920239253326*^9}, {3.67492068008674*^9, 3.674920763211205*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"412.40664309876263`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "3.418311771980311`"}], "-", 
    RowBox[{"1.6697308714798962`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"2.6223313033074596`", "\[VeryThinSpace]", "-", 
    RowBox[{"4.138512026946083`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"4.088529318721409`", "\[VeryThinSpace]", "-", 
    RowBox[{"1.762197600455529`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.05676591816499979`", "\[VeryThinSpace]", "-", 
    RowBox[{"5.547477871978235`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "2.4181714812490664`"}], "-", 
    RowBox[{"5.993982971254657`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.398330996856612`"}], "+", 
    RowBox[{"1.3609827225721125`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.32916060694288807`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.6623164214795084`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.12917867040393877`", "\[VeryThinSpace]", "-", 
    RowBox[{"1.202259403757453`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.0373770239660938`"}], "-", 
    RowBox[{"7.387125800299907`", " ", "\[ImaginaryI]"}]}]}], "}"}]], "Output",\

 CellChangeTimes->{3.674920241257209*^9, 3.674920847854319*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nsqdata", " ", "=", " ", 
   RowBox[{"Transpose", "[", " ", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"i", "/", 
         RowBox[{"Length", "[", "fdata", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "fdata", "]"}]}], "}"}]}], "]"}], " ", ",", 
      RowBox[{"Abs", "[", 
       RowBox[{"fsqdata", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"Length", "[", "fdata", "]"}]}], "]"}], " ", "]"}], " ", 
       "]"}]}], "  ", "}"}], " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", " ", 
  RowBox[{"nsqdata", ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", " ", 
  RowBox[{
   RowBox[{"nsqdata", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "40"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.674920867567149*^9, 3.674920887648494*^9}, {
  3.674920963196228*^9, 3.674921066410098*^9}, {3.674921621193935*^9, 
  3.674921659151949*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
8qVntag+k4GN726IzRbyiZXM/f2WgY8r+548IzEjnF6TgWvK8hWHPnXBg90w
mTiqoV7y6JYh1W8yMcVUvZveYSkiPssGcCbuhrkIlbX5hNNzMhHRrBj9S92I
sLdveCbOOe1cPn75L3D6TiZOL/Puf3ChiLBwY34mmiMU/N/7/NN7MvFQ0ndQ
5DRjsllGzzdlwsgwU3O+rhLVfzLR1vO++pxWO5KwSDaBM5H6KWeYzTh5qgdl
ovuIk8rbS+XJ723sxMShg2NmPQw0oPpQJiZOX6pru0qVDGUPmImYdu2TQ593
gtOLMtHzaf1A66lCwrbTmkyIfm1puHzUmOpHmbgYQGKXf1AluTJ01ZIJtwVZ
kxua/ulJWXhz3W/i0CBjosQJCFhx2L3Xvuf/9KUsaBbH95UP0CUTFGUdOgs2
XRqn6oO7wOlNzOevLFB07qlIZN1g8egsPFghxofxelR/ysLz85fO3zMQEXa7
uGRB/9bfEVv95KgelYWJGiqTXj/UIjxO0IHd7sZFcyfyqD6VBdeSZ4LXnX8w
ly3gLHyoHR9R0uOfXpUFXqipv6XRR1w4JQNEWVg0Wnln+GNlql9l4U6b7jqP
ITrkv3sygpmFgTleZVnlelTPyoI4ZdtprWeahJWXXmeh7+lRReUtplTfykL5
5KCBEbbKhB0fbVmon3PM03hKCzi9KxtHFr4IUqoxICzdEmZjjTohF+20qf6V
jfRxP5av3tOGT2ayHZiNxXod73pMlKN6WDb6j89bvs/HivTkFhi7c75Ub3B5
A04fy4bvsWfKX2bwyXp2YGYDO98VH2vhUb0sG2alj4KvN5sRtjx8s1G1utvg
907aVD/LxoMP2ifmV2kTzn7PRsgGx+/RjepUT8tG8O86cWKmBeHkl2xUdIXb
1UR1o/paNiyDA6dLxGbER5aeKM9G6G+jHWP0jAint2UjSrTzxFUvK5L5Tsgc
MRu5q1Y8u2+vQvW3bMybb9hrQNZ3yLF/OXhxLQ+7litSPS4HKW4Xrny/2ghr
plubaOeA/0d3c46TKtXnmNej1w1Z8FedjOEaLhZeV549QMmQ6nU5eOoVtEZ4
qw4ro1znzrbPgbyC4l6exIr6szkY8fi+74fbAsLSU+ccvKwd8iwtR0T1vBw4
PyvttWmvArlTNGXQkVHM8RYf+Ztu3Y36uTlQmH2w4Zi/KimbKxMUcvAwLeVp
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
3YWIoIhKl++8v7n5kw+wO3vmzOzuub/XfV5nbpsXRt6b+X/rrm2G1NlSvekL
eF67Og3n+ZL//oJZCxJ4JY9cqP70BfzIT7169vclD/4FH0evWirsw6V61Bf0
+89tnvU7J/LhzPxaNaaGF1kDtj71BS9XD5x138KfvPgX7Bh9stk+b1eqVzHj
OWhy9YsrzuTHmes3umhRhSOP6ldfkOMx2X9QK3Py5Mx8ufXMz+6uNeV3mfOr
st555Lkb+XJmPlQuyH50p4q9XZkJsXnB9w0F3iHkzYVITomMuDHGg/K+QmRY
PuyTUsAnfy7Ez6895kqKHan+JcRr29Rl12IsyKML0cYlt/sudWM+WIhdnfp6
XxpeCNanC7Gy5K7pJmtPqo8J8a7HjVhDD3fy6kLckkZ1NGnuT/UyIbzvpSXU
ta2hfo5C9LNwy6x/5kn1MyFzftupw009ybML8ep56KGic25UTxNixvKEt2eD
nci3C/H01ffQX0pXqq8JMWngEfNn913Iuwsxu2Rh8ozBTlRvE2JHQ7MrH/m2
5N+FeBM951e1M5/qb0LM2ue4vF0nV/LwQjzK/9M1bLgX5ZuFCIuZtkQ5LYD6
1QjRw+RHvGaEbzRbn2Me78/UaZzx7uTlhfCMfvynwd2E6nVCCPMrxvSo8yQ/
L8S0US9DDw61ofqdEKdlHy4KdpuTpxfik+W270UKV6rnCeG4sLDLod488vVC
5I/y/3FhgxvV94Q4P76Tm8sEZ/L2QuQdmGwS+5RD9T4h7B8cMh8k9yR/L0Rq
3Ono3n05VP9jxvvN+amdt/qQxxfiQdvmxZNHu1I9UAjuAN+iE+9MyecL8Tis
vP+B3dbRbH2QOb7bTTdeZb6Ps15fiMDDkbvxl0P1QiE+33wxLCTBl/y+EILl
Gp+Rfo31QyGGPrf7xftPQJ5fiOOObVMXDveleqIQpSf+1VYXuUWzb3DM+fRV
LkuyrgFbXxRClq+8f+e8LXl/IV6ulwmODWpC9Ubm79e80gRPsaL+n0K8twmX
eXf9C7b+KERmWes9TT5Wgs0DMPN5Wv31Bcz9nK1HCjFy4K2p09L41C9IiJ4u
h5OX5LlRfVKIpnH/LX7JfL5m8wLMfJA0WA98YkH1SubxMns+8vncmB8Qom4Z
p2j7cadotn4pxNG2vfd8NPWiPAFz/VSGrH841JTqmUIkjo+fX7M0lPIFQsxt
gIn6ggvVN4WYPD37/YlsAeUNmPM/6uW/um2N/YaFMMb0a6fa9YTyB0KULHrw
fNFXLtU/hZg/+I3PNQ8HyiMIcfW6rdZyjhRsPVSIsQsUP7Ok9WDzCUJ4XHR7
byOypvqoEAsTq9u1CXKmvIIQq278vDgjs7FeKsT0a3nPm6WaUH5BiNseG0pM
ujTWT4XwWxFeeuSIgPIMQnxZPKk2l/n8wtZTRdjm/mPzJUtvyjeIELc5ftnr
cwFUXxXh+pnMX90GOVPeQYRZ+snfeh92pHqrCL+Fwvwfrfwp/yBCQNdO4vpq
K6q/iuDYVG8/TmBFeQgRFjh1nHeZ40T1WBHWca68j3PmUb8mEbLHpopbLLWm
+qwImw84JXVvy6e8hAirgj8ZHbabUr1WBHOr6WMuC0MpPyHCudDacfpMDtVv
RZgxacgz6S0u5SlEGKToaifZY0n1XOb3Vv5V3bcVg81XiKBK2N/jZHIg1XdF
SJ42J26TaQXYvIUIVusO3kj7bkf1XhFs145smS+ro37mIuz7O+flsznmVP8V
obkiMu30rhqweQwRthSmHBvkGUj1YBHmpq/PXKEvAJvPEKF6+dg/9T//ga0P
i7Cz+Nb9GrO/YPMaIrRYf/bf9pNm1M9AhG+HTz9Zb+pO+Q0Rhv559uFPQTXY
+rEI/Tk9gsat+kN5DhFWuIgLmq7mUj1ZhDZ24wINcwMp3yFC2MNyPu+nP9WX
RUi9NmXBpP/8Ke8hQoRlu/nbZgRSvVmEutxfs6wW8in/IcILicPuqBA3qj8z
45eztFn8TR7lQZjnm6rxHijyonq0CJu2TeoScsOC8iEiVA2R7ruwiE/1aRFS
zr49ecvBhfIiImz0zes+trM/1atFWNLxldXzTyaUHxHh+YpWIbEOJtFs/VqE
dpyMkqpDtWDzJCKETD1mXlpfQO2zRTDmC5K7d/akfIkIU3aP1f81WEWz9W0R
Li63rB422ZHyJiIsvpV1eaCwFmy9W4TKrS/edYuxovyJCO93SX1e9DOj+rcI
ztlb/xwLNaU8ighZnye+U9bZUz2cuf5+3m1XdZtP+RQRJr0pmZAUwqX6uAhf
ClstL93lTXkVEQ5c6nDf+Nqc6uXM65nfqvbqJAfKr4gwSrXj8UVPTjRbP2fm
U8XuuiRXX8qziLD654L375u6Uj1dhAvHUzcMW+FL+Rbm9aTamw7wFFB9nRn/
oMqcjddcKO8igr/JvgkuhY31dhF8vPTxgT8CKP8iwqnn6WvvfXWn+rsI5+W1
1bUfG/MwIuyRBlYlKxr7W4gQv+5Q5qTVFpSPEeEgd+nyTrd5VJ8XofZBS5cp
k/mUlxHB2kM4PfyQNdXrReg4wnrtmwcelJ8RIbGmLOX7QSeq34sx5MLn/qmH
PClPI0bH/pWVOOhM9Xwx1j43brXe50L5GjEc5pr12F3nTvV9MZLG2E55JPgN
Nm8jxqmCWMeaPy5U7xdje7/53p2CbCh/I8YuSWBP7WVeNFv/F0Nzat2wbFcO
5XHEeKvtu/CgsZ76c4gxXOcUueE5n/I5Yoh3p896vC+IfIAYD7JNWpR89I9m
F5zEWPmuS7Edx4X6eYixPvF8/8d5tpTfESPt69oud31dyQ+Ioah8N9NmmT/l
ecRwXbdq+oFRjuQJmOO/dSTrzExv6ucmxn9XDlU3TQgiXyCGrvx6UvsXjXkf
MUYfGu7evKqY+oWI8SXkSfbzCY37L4iRu63t7RuO9uQPxLigGj0l/aQX5YGY
19dGYDE82YX6i4jRJOFy2BuXxnyQGIP0C30v3guIZn2CGPuC74SU97CmvJAY
nxpOxexxd6N+JGJUtWt3w28sh/JDYtx8s0mz9qI1+QUxyj9lwu+zgPJEYoQJ
HZLi3vqRZxDjveyR+aK8AMoXifHmv2Yz9/hyyTeIMSHw4u8+Ya6UNxLD78um
f5lSPnkHMW7Nz12xvaSW+teJsb/k9oZsPof8gxjdIhpa1vU2pzySGNvSls4Y
3qUSrIcQI2d+26kTmPPJ5pPEOP4tOW70FQH5COb8nVsYuLIjJ5rNK4lx8nPZ
9vBRNWC9BDPfumyS/3nPofySGB+y3vBLPrqQnxBDffTHjW4BHMozMePTPrH6
i8qfPIUYI8pGHpqsMaF8kxivE7tvSrpuFc36CjEENrts/42wp7yTGE9mPrPX
jLanfi1i1D/vf6bVlCDKP4nxzP1WrUs9h/wFM9+/SCfrvntQHkqM84b2/R6/
tCGPIcb0LxlpaSNsKB8lxp1Fr7NC//hGsz5DDOXbdv0T1QGUlxKj0/7pvfIz
a6kfjBgpq7bOMh3hRPkpZvzG/GuaaOZNfkOMM0XL+38odqA8lRgLLGKa/5XZ
k+dgzl9S6UPVgQDKV4lRsK70z+KTAeQ7mOulR+K69oe40WzeSgyvZluH90nn
U78ZMebKXO8/+eNG/QOZ6zNB4zb/qDv5DzEWOg/d3V8YRHks5nyNnv19ckcB
eRDm9c/5lH53Y2M+S4w5X298e3fMnXyIGFPstya2EvpQXkuM3UndBNvG8MmL
SLB5/eaMu/gGNr8lgevALNu8mFqwfkQCZe+0AFuxXTSb55Jg1rnOMr+5vuRJ
JKjpI/orSnWkfJcEhWEbRrVw8YlmfYkEV5Oe62Ome1HeS4LySwH/Xu21J28i
wbJ4fd+ei80o/yXBq5NxPM8+VuRPJDi7cPq8gqkelAeTIG3IfN0BLo88igRu
Z032FxvtKB8mwb1DqUvcNabkUyQITTrv6i90oLyYBIMfO2058INLXkWCwHfT
zs143tjvXoIlm98dXZrKjWb9igRbyhKk30c7UZ5MAvOcvtMOnvIhzyLByDUW
becvZr4//+8LiAStht+pT77qFM36Fgl2ZbeuXvTnD9i8mQSnbblBi7sVgvUu
ErRZd/tspMGL8mcSrL/2M+FAJJ/8iwTC0J0PsoIcKY8mQYRyfZ9jd3nkYSSw
tymLsDlmRfk0CV6URwicDrqSj5Eg6ll911yVGeXVJPAdUnK6W7Uf9ROSoGlh
aewW92DKr0mwt3fbB7Z5FuRnJDh5YHuC1WE/yrNJ0OPy6LHXTnuQp5Hga9KA
c+a+dpRvY87v/hVPxjg5ka+RwHRUr2OrAhrzbhKI9x3WRDWzJ28jwZ7ha5Pz
x/tR/k2C2cKtMs94J/I3EtxpuUhxdpcr5eEk2GGr3H/8wS3qbySBxcLvuWUx
FpSPY35OHb44+rk9+RwJtHZhoel3fSkvJ8GqgsxvO6O45HUk4OzQWNXNMqX8
nASDFtbOTjfnRbN+R4LKJQWSwttWlKeTIKa/lyN/kh15Hgn2vd+9Z2E1j/J1
EuSkHFt4rUkRWN8jgezN4AUrBM6Ut2Our8jwFkVTAsn7SOCY55rt99qU8ncS
WJuVTXhWySX/I8EDW9u342NdKY/HnK8bDys2xEnAeiAJ6jqtXeHXl0/9NiVY
3q/H2h+FtWB9kAQ9z/4dl8h8n2Q5jASxFfJvXao55IUkKMsswxKhM/XnlGDY
3sc99TAnPyTB8ZOyuneOLpTnY67PvKSBq7a7kieSINyd30W3wJPyfRIs8L30
sAVzv2B9kQT/9py7dzeuBmzej5nfJmseWphXgf0ALYFxeegiiy6/qP8nM/52
IxJmjHMifyTBo4yDey0F1WDzgBL4n/YZ2PWhK3kkCcaP6hB+LpJL+UBmfobc
mBr9j0M+SYovJmG+ERNdKS8oxdmz348uHGlOXkkKzd6HnfJXW1N+UIrBFU++
83VB5JekqL4zJnPXMz7lCaUoH5q0fvAAD/JMUhytse7y5wqP8oVSbHo6NjO2
wJV8kxSLd387zpllSXlDKUL6b17mvcKfvJMUs6o9gn9FB1P+UIqRG9vfuqP4
DdY/STFflzcmSFAFNo8oxV3eB9PR75uQh5Ki7pSg9GFqEdh8ohQTsrVh5RJ7
8lFSnP5Qp1sSw6e8ohTzjvOuJ7V0Jy/FHM+Yr0nzOgdSflGKf+9nP2vo0ZT8
FPP4Ax9sdX1pR3lGKXoeXhh4v8CNPJUUu15t+JZ3x5n6qUrR4emaN94eXuSr
pDj5W/Gx6AyX8o5SZE80aZcnsSRvxTz/06CnnU7bUv5Riodunh9XX6sE66+k
KFqj75w73ovykMzxjOz47ntrU/JYzPgZfKsXBfApHynF7VsTC2zO8chnSeHi
6ZHmdrcebF5SiiGnujxI0/qS15JiUOm+wWvF/2i/ECmqer958HS2J/ktKQJd
sp7s6W9BeUop+jj8vRcV4kueS4qYY8bODz86U75Siuvj9332melCvkuKxwNa
TNrr3pi3lMI4MMM5JJxP3kuKw+v2Zy373pi/ZI7vsa/d404V5L+Y55u+JTTi
6y+weUwp+vmUib7aeJAHY+bb3OwOEksPymdKMTy++GDzHHPyYVLM3PjTY8AZ
F8prSlF/tty2JNGG+plJ8XvKmDLZVS7lN6V4nuO7ddchS/JjUhy44Ri4PIVD
eU4phg759tj8pAN5Mil6uy74t+4Fj/KdUmx2mXm0JKcSrC+TQlW86cfDPHfK
e0ox4NcR7bLdPuTNmP8fUbS64ogd5T+luOqsCqmWCMifSRF7ua9DfhM+5UGl
6PtTc2dKiD95NCkOXT1cU9HZgfKhUixogWO3ejf6NCk+jqq/9DhJQHlRKaZn
OOibZJmSV5MiTDvt9Wnm79n8qBTnpjV58+guP5r1a1L0Sv19UKq3ojypFDLH
YX9HvjIlzyZFaMR8n8sHbChfKsXaoOP29+sco1nfJkWzsZ4nnFvZU95UinDp
07GVyznk3aRoP+JIincEn/r3SmEa7zLfpqcb+TcpzH8cXrbiqinlUZn52uZn
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
1uRsdKL1Sx0KdwkqmgfyyBPqMHLuzsIerr60nqmDSDb1nntkIPlCHbaE557e
le9C65s6KLHDQlPQuH8uMx62PZv9692Y/9Whz+GQygWv+eQPdWifelDlctWG
1j91SIralr9tYA3159Phv/CSqEAlj9ZDdXDmF32K+M+ZfKIOzwbtHaJPt6f1
UR3cdjmb3exuR/37dPgq6Dre+hKP1kt1cCqaKnJKc6d+fjos2MyZXJrJpfVT
HV58e1e2YasXeUYdUtTcP0mrjdSPWoeXW7IOme82I9+ow6XRtrd6P+dR3liH
8eOmy+e08KL+fzrc6xIrKu1bRfljHfIj5+csLrUj/6jDyRczshom+dP6qw77
HJYtnRRrQx5SB3X2gSenP3lQPlkHv4Sbu0ommJGP1OHD95gWS10awK7P6tDc
JCN77U5H8pI6bPBu/TUvyJTWa3Ww3LPJ5YyaQ/0Emfk72CPkujeH1m91eBPH
vfje3o88pQ5jnQNkm7837gevQ/ShiRnMhwnqN6jDjJeiJO3OxvVdHVbOe7XU
5Jk5eUsdsK8i3nIdh9Z7dTg00dbeJcOT+hHqcOtvn1E+EyVg13+Z+82tn8GX
R1SB9Zg6FH/qYj6YWwZ2PVgH3tugPpNM/chnMucvob/v7Od8Wh/WIeJtaKuY
ACvymjrclLkN61tqT+vFOmQW9nB6z3zeYv0mc7/ymlkivFQPdv1Yh4GdaqJ6
DDMlz8mMr/bImWubzWk9WYdsQdHZEV3cyHfqcCXz8uCbFoG0vqxDhdq0LLvQ
kbynDqbKsdeLLjnQerMOwi7Phi9vWw/Wf+rQ8cxDj8nefFp/Zub3loBZ0q1+
5EF1iC+8/vZSlTf1G9ehza5bf4R7GvePYc7HzuiJ9eWutD7N3A/kIQmth7uR
F2XeLx5GrmhuY075bR2MQz4dT5Pbkh/VoSr3hrvNVH9av9ZhaPfrDT0WN+4H
rcPO0eld8pnvs+x6tg7+Wya037ndkvotMvfbxB89Xo3h0fo2c7/evfcfz+UX
WG+qQ/8NF/Ouc+1ovVuHykFBMyoTgqgfow6b2mybnLrHi9a/mfHp26eF5UU3
8qjMeNZMGLuN+fzCrocz4z3x4prsv2bkU3V4ItraI86tHuz6OHM/CN8rOPHB
mbyqDnfKbO4f2+FI6+XMfI4ruTKS+T7P+lXm+rW523XSeB9aP2fmp02TKZOP
+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
ijycFEGRbtt1C8zIw0mxsazUNtvXmjwc65cXX5TMVtpTvq8U0jbbnKe1dCcP
J8Oi1ecDE9YUgXs4GS4O/TOvKtOIPJwMP8ofH5a3FpGHk2Hh4zvjmyRakYeT
YV+ma8Lvs7XgHk6GApee13T5hpRHIkNAZK8PJ3faUT6wDE26hQnuNrcgDyfD
nE9HSl7Xu5CHk6Hc5P6Q2pmW5OFkeB067OySI8aUHyzDweEzztgdKCIPJ4Pn
I5H580nu5OFkGPU7fdWYIzpwDydDF8Gmgrujq8A9nAwSvwbDgo3NyMOxv1cd
HOZ7xZ7yhmXoPM24w9dqR/JwMoR2HtLBL6gJeTgZondv0/0zcCAPJ8P8LuED
fU6bkYeTQTbv4OwjbH24h5PB+kz/Ry1NbCmfWIbJu3Isn1qYkIeTYVbm4s4v
GzmRh2PXp/ngR8LSAnAPJ4N01XXtjnoFeTgZtmT8tZ3SXQPu4WQY+SD254lW
RuThZJg6ccSw3pv088VkeBH/FzGR5uThZIhRNS6pyi8nDyfD7Lx22scTzMnD
sfVfm9B3SZtScA8ng6ZLh8OWaWLycDIEf5k0b+ol/TwyGXp9KvpV/6kO3MPJ
sGmY3c2JfkLycDLsf1KQ9LiBiDycDP1+Zk2NnmtHHk6G8//Mrt+A3sOxerAZ
v6FjSwHltchg2mf7ldktXcjDyeAQ0mNzwAlT8nAyNFzVM6WjqYg8nAybRatH
KQ+Yk4eT4Wx+vmpObWPycDJYSNvUbZjgQh5OBmf/3nHdfTzJw8kQ4d7u1OMF
luThZDh+s37t4rbO5OFkKL7f5Mdh1o+5h5PhtP95r+DLpuThZPCZedAxM7sx
eTgZIv1WJxi00Hs4Ga4EmaZOCXMnDyfDl+ZfVrbLsyIPJ8N0q6vNG/u6UF6M
DI9+ZEz8MNqGPJwM6viQ5YUlDcjDybDsxabMavZ5nns4Vl9tR/h4Ni0hDydD
9sHgI6o6vYeToUN562naqU7k4WQwO39hV+OZLuThZJjRKeOq8TYr8nAy7HQu
3ux1xYo8HLve6U+EQzNE5OFk6L/3gXXwDkfKg5YhfYZVQYSLFXk4GdbUTGhg
6elIHk6GO9lmySvT7cnDyVBYO+Im5hqQh2P1FfdKdK+nAXk4GTYcG3Z5bLY9
eTgZck5lT65caUYeTob229UnTjm7UZ60DNc7Hy8Xl4jJw8kw5Zxsb//3RuTh
2H7TRdj06OZN+TYyJE77a5tQrPdwMgg2X0tdM8ia5r/J0HpVYMur1y3Iw7H1
DlzXRDZMTB5Ohqv2YwpmJBmTh5Mh3r5/gGW6K3k4GYau3Tfi6+FqcA8nw+PI
omv/GjUgD8f60U6PmAafC8A9nAxvtzRW2lytpbwcGa41WSgf4SOm/Gq2f/tZ
7o3c7EAeTobVsW7jtqfZkYeTYdpav6cP5pqTh2Pv/+dCzwXe9uThZBjR3ONR
y+aNad6cDAtObL6p3OpEedesf7xsnj5tmIA8nAxjXOYMjjCtJw/H+s/Ddc9a
uwvJw7HXWxVvP2quK3k4Gbx6XpqZWqn3cDJMuPVH0ktrQB5OhnWK15f/eygm
D8f2R37n9W2bGZGHk2FFSPS70yoHyuth9dfuw4RlDSvIw8nw5NH35ccVDuTh
ZHjwwfZLfqAJeTgZtr/NHnp8qt7DydCxUaHLX/a8yD2cDN8VafejTxiRh2P7
60j5jqdSW/JwbH8N2RfQYJh+/p0MoxeI/xwysyIPx9ar2T2PW5s8ycPJ4GFq
cd0+15I8HOt3xwNtflqakIeT4d6dgi3z91iQh5OhyGqPLxSu5OHY/dPOK3i3
tpA8nAzjxiWvP9qmENzDybAxdIZ67klryu9m/b5PC1flKSPycDK03FTXudzd
kTwc6x/ddgtzRunn67F+5hYx4jO7HtzDsX7+PCyrRZqIPBzrhw3mHeyQYEMe
jvUH8VnNhFEu5OFYf2x5su+3sQbk4WRIahK+8MUEO/JwMoTFd/KeW14D7uHY
88TOrSumBonJw8kw4Jf7jLYNTcjDsfURb/oTYWRIHo7tn27N1OO7WZGHk+HY
7K5mo0fakoeTYX3CmGvSvZbk4WRovBRHZF+dyMOx4xNmdvnJ+i/3cKz/i9v8
mWmkzzOSYevrT5O6jKkC93AyZO5RrxY1rqd5fzLYaetbDpCYkoeTobqL7I/1
HrE/93Ds+EzD1d0HGZGHY/tPaflSskRM+Udsv56+PFvXx5HyyGWwOfNmofnz
YpoPyPpPbVbLhgGO5OHY/tFE1ln1akQeTgbfQrf5n1aakoeT4eWVCP+fZmbk
4WRQzPc5e+yQBXk4GfL836ww+WdCHk6OXdsWxyl2mJCHk6PN+PWdR6Swz8//
83BybLzQa51mvyt5ODm+ne79YessO/JwcpgWvQtM+CAmDyfH6/1zehm3NSQP
J8dSny832nc0Jg8nx/RD2zU7YhtS/pIcheMD68fNLQD3cOzv2y5penq83sPJ
EVm4a+Ljgxbk4eSYPHe4aKGjI3k4OZZVXnh63NKcPJwc5tOH34m00oB7ODm6
dknp+ay9PXk4Ocb8aDVjQU8L8nByVI1ZMjKoeUPycHLIjkUM/hFsTB5OjgJY
Nj/ywtyfezg5Zv/XrLRSU00eTo5eOQZultPMyMPJsXbFLOGiyDxwDyeH7dym
R8RJeg8nh5PhgX9JSxwo/0mOdMPmOyDWUR67HL+eVMUq/fQeTo4G29pHTL7s
Qh5ODr9uB/u8b14A7uHkmOc9LrTyngV5ODniS102DHTKpvmJcvw+cCh8aJwp
eTg5VJYDQ/e0qwX3cGx9Vl8d/cHkB7iHk2Or/x33GOjnK8rxYqRPUeKtInAP
J4dDp+KdQW1E5OHY9Wj7oiJkhT7vXY6yTMdFPUIMycOx9V7ltM5qQSG4h5ND
3m+Y5+c19jSPUY6vn1YeWH/WgTycHHGu4l2RNtngHk6O3rGZIuUCQ8qHZ/U5
1sI+8KkDeTg5OmbU7R6sdCEPx35+ke0rPF9PHk6OWdXnHD46G1N+PKufZdF9
0roVgHs4Oa62i/RXVpqTh5PDeYtp1ydt9fMdWT0pkuNtOlqRh2PnF6hocqDI
gDycHD0b/DRxb2tDefNy9G30qP3SklpwDydH5kRbP5MKU/JwcrRueXrs8UkO
5OHkONtcfmRBnhF5ODk8Iq66pykE5OHkSFBbDPzrpc+nl8N+QZMjzXPF5OHk
CBl/clzllULKq5ej4sb+Tu3O6POy5LCZtjjw3SUL8nByNN7rYFAcbEgeTo6U
qbmvf73U59nL8SXpwKumzfV5WnKMrO0bma6zJQ8nx5stvy+eP2ZKHk6OUsfT
hX/Gl4B7ODmMLl3OCsrXz5+UY9zPM6sapek9nBwfT33plfJQn78lR0QHq2X+
L8vAPRyrz+/td3R28yAPJ8e7v7EtsmU55OHY9Xs9ZOAVDwHlc8khNvBN8fEx
Jg8nh/FwTfHvpHJwDydHhl3PuiU/K8nDyRFwefvtTpNrKb9Ljr0nm998l+xJ
Hk6OQ0Zvur2axz4//w90ybHKPX9kYbgj5evLYbdnVZ1tywbk4eTwOX33/cUz
deAeTo5b29Rhp2YYUt6XHNEvlsVssLUnD8f63dY+P0dEWZKHk2P8pcU1S15/
A/dwcpTv+P7zWnsxeTg57txJeHv+ZD24h5NjSWhDlxVRxuTh2PvvDp5r0diQ
PBw7XoPlZ27dtiEPx/p77+G52xZLwD/Asevf5/AbsbAS3MPJ8WOu3DzV0cGf
ezi2fvevhRhG25CHkyPQ+t28uSutyMOxehq3P7TNcDvycHLclgXNuhWn93By
TJ3pML1p4F9wDydHsMNbv85DheTh5GjoXbpgwtkG5OHk6N8vI25xU1vycHLU
HJ9VcyJZ7+HksFjaVdE3t4DmA8jh/bW4qOcKQ/JwcuS2bdRq4/RacA8nh7qH
V6igiZjyylj9/nNdfXuFmDycHJ3rdvisOmFHHo6db8uOF81OCWieAFuPsyaa
CTftycPJceDAoqjWve3Jw7HzH3pg3ee6Gso3k8PF63DDn6HW5OHk+DBVZTHZ
0J48nBxtk2O/pTYWk4dj/T0s0PyVuSd5OLY//jR6HmdhR/MI2HqfdU0Y8cOM
PJwcl90Lu+pa2ZGHk+N0WrphVmMLykdj9dAgYfv7nGJwD8f296h/A4v2W5CH
Y9dfHNHRzdiWPBzbL8nXHQ6E51F+mhzdFp2Z0uVGDXk4OYIOHYlcJisjDyeH
5O/H3ztG2JGHk2NL16V9ErKNycPJIZDHTF7Qx4A8nBwT+60wf1JhRx6O3d82
/Gk3qcCFPJwcqY1lO4I9zMnDybHde35WL0Mr8nCsX47de9s7rJQ8nBzXj850
/eEtJg8nx5kd1+b4TBCQh2P3/2kt1oXa29O8BDnu+dxs9qivJXk4OcKXSaMb
j7YjD8f6V6RLp9EVVeAeTo5NXa51fH5GSB5Ojuq7EyrP3DYhD8fuj6X5VTcz
GpGHk6N2r2X4pSG25OHkSH5w0y8kTkQejvVvh1/RLVT25OHkwAKHTYNyrcjD
yZEYmlm4qrcdeThWT3EL7u2faE4ejr2+ar6/4/sScA8nx/lBIdt/nHAgDyfH
ycJm51MqCsA9nAI9ZrZ50vu8C3k4BeTjpIlvljakfDgFAn692hS0zJo8nAIl
L2e0Ve6qpXmqCmhGJnfvHmBKHk6BTZJhkYs1eg+nwPymJwvUJjngHk6Bvo9T
spefNyIPp8DJ+kv9r362Jw+nwLT1VqIFvWrBPZwCXQYJm8xrbUAeTgH3Q7F2
ryeJKR9OgeYLVZ+ed7AmD6dAbu2zkhW99Plw7O8b3LLwMM4E93AKXBdWJMfb
iSkfToHA3lknikusycMpcGt/U7dyrX5+qwKJXoWtGmRZkIdT4GZAacLUUBPy
cArYio8435SIyMMp8DRuWeNTPUXk4RT4a1m5YuVxMXk4BZZUSa9lRrqTh1Ng
2N64sz4jxeThFDi92fGB92E38nAKhBpvN/6R7UIeToG6g67bTkxVg3s4djwO
4YFHjSzIw7Hr49d/cdHsesqHU6CgbGDOuPn6fDh2viNKdmtHeVA+nAIzIp+8
Nx9vSB6OrVeLnIi2bP9zD8dez9IkISXUgvLhFGiwdsSb85fV4B5OgT1zPuV+
ty0G93AKLBzXsOuMlmbk4RR48nbzZuUVZ/JwCrT6uyzl2fcCcA+nQMvL91qe
XGRF+XAKvO/advoYdyfycAocnS98PajGmfLhFDCYmerY8LgJeTgFPHd1e2ns
b0ceTgGrhufPnOroQB6Orc+lBVsykkTk4RR449Yws/iCM3k4BdR7l9cMrBST
h2P1KDT9XNjPkDycAuNK4z39Oujz4RT4fmS7JuSpM3k4Beq77avb1d6CPJwC
s1Zbt94ssCQPp8CRNKuXiRu8yMOx6ydL2TOw8i95OAXMb3bVhK6upHw4BSrD
Zyb53rcmD6fAu7igQaO1QvJwCkwP8LV562tLHk6Bx69OJ0Ytk1A+nAK/xisW
5BRYkodTwHWJ0/GFl23Jwynw4mbTQsNneeAeToH+FqO9jWeZkIdTYKNn/Ah3
AzvycArUFmaHGYRXUD4cWx/7QdtcP7C6+N//YFAgJXD0T+0AfT6cAus1b6+l
zRWQh2PX2yN35eFtpeAeToE1tzb2jE80IA+nwI9fN48muAvIw7F6n25sFWJr
TB5OgQnDZVfy02vAPZwCjYNaJvVmv+ceToEPa0MfiYY3Ig+nQPe7oddrnonJ
wymwzabPIquv1uThWD/r/3TWMmkJ5cMpELYrwljO+in3cAqM/5V1RiC3pXw4
dr1O7OzysK+YPJwCnb/lPn1VYEMeToHqsVHNNw01pXw49vfmmzo8+eNI+XAK
TG662dHxfAF5OAXijYZ3SSq1Ig+ngNHiQydWaC3Iwynw+3Iru/g9AvJwCvRa
PVf4NqwI3MMpEPWroahrr1JwD6fA3W8G2xo5WJGHU+Dc8zk4U/yL8uEUWOs2
pMrvTDa4h2P9wG7Cx3dvbcnDKTCp94ZlA3vaUT4c208hHT/ksecP7uHYerTv
6OX60548nAKrpk1vcfx1HXk4Vu8uj35Xu1iRh1MguCai2dv9tuThFBAuOdnn
yUB7yodTYMjX96dvTXaifDgFnEtzY4OCzMjDsXrKmbA3dqk9eTgFYmqLX3Zq
aE0eToHbUamDZI9qKB9OAesrMwyLYu0oH06BYpvlzq88amg+sQI7Atq5loU4
Uj6cAsc6l90d6+NBHo7tz9S+u5Ja2FE+nAKKH4mtLzQ1o3w4dr3vxY/ZHeNC
Hk6Bwuo1ITlSZ/JwCkhT1s7pmlAN7uFYf7jeaPu97k6UD8fq5awmeqGgEeXD
KXBwbP6GR+utyMMpcPFXSbvWGxuQh1MgfFeDEkMPJ5p/rEDRd8PLYXEWlA+n
wKDcR93mppmRh1Pg3vTQlZs6W5GHU6Ct19czmSsrwT2cAg9+7E9tXy8iD8f6
1Wvds4oWQvJwbP9YJPUct8CEPBw7/luiSV+vmpCHY/U14XWOTW8h5cOxf990
i3S/px15OHY+ayzT9wTr57mw/pl0PeaIkwvlwynws0n7XMd6A/JwCkzpMzTk
8DIb8nCsHq44rtjYz5k8HLu+Ea2PzmP3Y+7hFDi1c9XENFUZuIdTYGCMc+zo
m3bk4RTIjAn9m7LBmDwcq+/VvdqaxZuSh2P3i2n/5rt46+fDKPBw8vd30qPF
4B6OPQ+s3Nqn0fY6cA+nQPmoE4/Wsv7LPRx7HthSNfDJcf38GFbvg1PvOPUw
Iw/H+tHAhOBex8zJw7H90/alz9gYJ/JwbH1qbrlWF1SCezj2fBOZbDQhQkge
ToENU5NDfL+7k4dTYPjYny21mQLycOx6aD06Z7DnZe7hWD29+hN67K4NeTgF
RvssWNw2wIA8nBIzbjxdkPTanPLhlHCOVnx1qSgkD6fE8IUtfjTb70geTonr
vYxU8V+V4B5OiWbdpzgoBluSh1PiYmvJlPZdC8E9nBI+1cFjDh9yIQ+nxMvC
5AbHRI7k4ZTId9sk7ck+T3MPp4TbpgcGw3vZkYdjr79AN75VfxF5OCUinkZE
WJT8pXk3SkT6+YjOVLC6+N9/4FXi0zGTqdsT6sE9nBJH//U8N7NRBbiHU6J0
enLvOgc78nDsfIdkjLjQ35k8nBIlq/z8k17o5+MocXz486k7HazJwynRynrq
7YCOhuThlDhz4XvO4gWu5OGUmKbI8Dt61og8nBJyp2yPDuVK8nBK7NlfucO0
thTcwymxb8+rYAXbL9zDKdH3zouuBRvNycMpsXJdw5ljNtuTh1OicvqLfgF3
qigfTon7LdWe4atLwT2cEmMv/5jZZJaYPJwSP+WJwrWlRjQPW4mdkYtGfXjg
Sh5OiZTtCteK6UXgHk6JexjQXpApIg+nRPcVgXHV3UzJwykxsEP/Z79M9R5O
idZmsro7H+zIwykxe1Db6N4lDcjDKXGn4MS2TgYONE9bCf9uIe9turiSh2P/
/lLIrxcejuThlMi4HNI+PcyePJwSmdKZLWZM1IF7OCV+5T5IcelfCO7h2Pr2
Xxy9focVeTglNiYkdbr0zYg8nBLvnBNWvHUxIw+nxOqe7XunRduRh1PiwNVr
gz/lGpKHY9cj95t70Uq9h1NiSHTp57wgW/JwSsSOlUjrw63Jwynh1/vxA4d9
1uThlJhTnTYnZkwBuIdToixsqUVo2wKa561EbfWybztszcnDKdEj69gRi6dV
4B5OiT+Z5wy8rPQeTomDwd/urAwSUj6cEr2q7ZJkJVbk4ZT4sXzn4vsuFuTh
lMha1eyixwVL8nBKFDleLjJfWgzu4ZT4t/XhqwVRKnAPp4Qus0t0EH6Qh2N/
77asQfIDA/JwrL5K9rxcIbAlD6eEkUPvKe7VFpQPx+rDKHrztmfmlA+nRGhp
9RjrDrXk4ZRIrZDbrPUXkodTYtzGlMT99UXk4ZTYm3Ni/DcPK8qHU0JrcDEm
2tuDPJwSX4V2/XcOyqJ8OCXcF34f2M2lHNzDKbGpnVXVvIPVNH9cCfy58Luy
oYDy4ZTI7pYesKdGSB6O7bcuAy+3LfOgfDgl4g8eMk0aY0IejtWH39drvX1s
ycMpsWBFTC/Xfvbk4dj+ch3f1a9RMbiHU0K86u16WVYNuIdTss8pqbbDfxiT
h1OiYODv3HU1AvJwSjx7csv7SAsD8nBKWK6OaGi1wIzy4ZRoGBYYOrClBtzD
KbHLur7LkAf54B5OifozU2eNMNB7OCUcX6nHTU43pnw4JQSIsF2Wrc+HU+LD
jiFzDzzMB/dwSnRybHVx0ANz8nCs3hN/BQRrSsA9nBJX1ZNarpnjRPlwSjzA
B0nrTlbk4dj6mDZaeyJXS/lwrN+Odp+Su1dAHo69XugKhVegEXk4JZxsW68y
nG5L+XBKBLwbdm7OFCfycEoMjamsnDHEmTycEkmhK5s9aCgkD6dEny/Rz84F
2pKHY+tvccBAO05IHo7dn3rsXzwVRuThWH+vlZ8bfMWUPBzrFw0KHl2rsqB5
7EqcdC6ZFaF2JA+nhCIoZWjFUyF5OCXOu3rkVMWVUT4c+zlk+57GxQaUD6dE
yCaBeV9fJ/JwSox8Its3y0FAHk6J04Vhgs5nasA9HFt/67WGJeMKycMpYTCy
/td21ie5h1Mi+erYVmmetTTfXYmoR+M+fmGf17iHUyIh6Vw3qyWm5OGUeGo/
/vig35XgHk6JjoeeG/bd7koeTonF+ekxLSLNyMMpIbk5NG1hX3vycOx+fKld
xjo//TwqJWx9e46c72ZDHk6Ja9/HFP28aUkeTomWs6xu9tjjQh6O1YPDIM0X
OJGHY+fXYsv7nKY14B5OiTD7FPGsxxbk4ZS48lrX2VwgJA+nxKl534dsu2tK
Hk4JwxWrdCWVduTh2P3gu+P+ByZW5OGUOHf3St6AQ3XgHo7tF7d5Sa7DncnD
sX68wNGjJKuKPJwSTb7t1j1fWA7+cqwf1/eMWdhK7+GUmO81uvM7GxF5OPb+
Y9a+m9DfljycEhVd7uJAMwvycEqEN13/8VJrAXk41r8/b21j/tyMPJwSi9Zv
Ts5tWUf5cKw/9PD729fNzJ97OCW6Nr16adNzIXk4JR4F/AkcNc2APByr3/iQ
f4fUpuThWD8e3fX3wtpqcA/HjmelZQfdeCPycEq0axbR1f2jDXk4FSSDL7qf
Wa/Ph1Nh5O5uu3e0LAL3cCrMjp6RcK6TBXk4Ff67PPOk4bhScA+nwostntPK
mjpSPpwKjlfq0v9MtiQPp8LSzmmBvQ86kYdTYcucm48vZek9nAo72vRyGLyk
EtzDsZ/nRT51tZaAezgVPIPfHi1450weToXkpXOyihblk4dTQbz0w4ChlmLy
cCq0PexaddhJP99LhaQdH7s1+SCmfDj27x+/+nS5owN5OBVMpt4+Z5dlSx5O
hbL/xhTdk5iQh1PhZMmt1FPJbuThVLBXacbmvzQiD6dC1xnzFE8/CMjDsevX
QdxhymF9PpwKYaHujr5vTMnDqXC5/u+k632MycOx8w2tOTKj1pY8nAoHjL5/
qWefb7mHY+dvMaHywHYbf+7hVJihPhky6Z8p5cOpcLhP7/e90t3Iw6nwfG6N
yeCW1uThVMhct9pabJsN7uHY9cvaPj4kxpbmjanwfkzCve6GheAeToVDmyTJ
Th7WlA+nQjPBzgGfzezJw6lQdSby9eTTduThVFj1ffXRklAh5cOp0EV0t2hq
nhF5OBXe/LG7OtPHmjwc+3njhQX9mpiRh1Ohv9gwcdkKI/JwKmzqcXHo/FWF
lA+nQtyYhhu62hmTh1Ph7oXw6uFPjcjDsetRnXErSWhJHk6FrDMtczxX6T2c
CtuiHdLmLqsC93AqlOf9MOmbZUYeToV28W/91ncqBvdwbP2f7lqzMMSIPJwK
k8dryw2nV4F7OBWMj2Y23G5oT/lwKqxftaGfbIqAPJwKv1Kzo4qiROThVLjo
ejI/z9iOPJwKo/NC8lZPtiYPp8LBhLsjz58tBvdwKjR/PMRYHGdKHk4Fv/Q5
7d5YV4J7OBWy203bZn/UiTycCg8yLpa6p5mQh1PhdNiAGZlsvbiHU+F3gw5t
892N/LmHU2HsxV7XFkw3JA/Hjt/xnYVFEyfycCok3Pw4wWBlIbiHU2FKwre1
EQ6G5OFU2Pu40nHAav08NhWeRsXZbXxhTR5OBfm+8wVBW/X5cCqcWWwxKaGx
CXk4FXYNPfRg7mIz8nAqtPoxsTi87ju4h1Nh8MQbWUOnWpGHU0EV3Gy25cMy
cA+nwsLPg5SzplmSh1Oh8OYajzkh1uThVPj4/rfb1tGG5OFYvVsV3Dm204E8
nAo91gWNii2xIA+nwpHvG8IadDMhD6dC4wZmFWkbbcjDqeB/yHfywvkm5OFU
KHX1Wb56ZT24h2OvL0pcYfCiGNzDqTCoftWN9ecMycOp0Huiv9/byzaUD6dC
eme/MxONbMnDsfP7LL7d1tqJ8uFUyIlOkw/eWEEeTgXBbd+yC7fsycOxfnaz
bMVib1PycKzfBpoPz3hXCe7hVNB0+N50+jIj8nAqvNq1+/eL25ngHo79vtuf
+p7GIvJwKlwtObzE646YPJwKsR3nbvQIrwX3cCocfb3NUrjOzp97OBWckjK3
5JQIyMOx9VI88f+daEEejl3PEdOsVGPtycOpsNgsMvf3SDF5OBUG3OrXMNu3
kObVsc8RXetifp2rBfdwKlz//LI6f4SIPJwKqHNPyJM19OceTsU+T0nGVYj1
+XCs3xpEuX0Jrwf3cCpE9M1Y+umFEXk4FQz9PkQVedeAezj28z2HA82G1IJ7
OBVWt3eYVdNIRB5OBa2vV+MiR2vycKzejKxnPputBfdwKqRmGg++uENIHo69
f0+XdoqV+nw4FXJrfgSeuWxNHk6FPnFbnzjfNyQPp4KXYfbsXa/NycOp8Cw6
tfOGF7Xk4dj+7NtiaP3uAvJwKiy/kr20tVUG5cOx1xv/UdjrlJg8HKs/U98C
1bQ8cA/HXm/6iyinexJwD8f+vtGNp4GdrcjDsf593KzPoCkymrfH+mXk8tzG
LZ3Jw6lgm3coPmysA3k41h9sZU6ea53Iw7H7X/sX7Zzy9PP4VLjSN8WnV+cy
8nAqfCnOs1z8x4w8HOsH82b1U1+oBPdwKlyzq5B3emNMHo711zeHw653koJ7
OPZ8YBlZEu7jSB5OhbdNVd23fLUlD6eC+SYfh989TMnDqXDswPfxvXobkodj
+3WM1C84QO/h2HqLYnfVLjGjfDh2P5zy1O2ytw3lw7H734rmL7u+zQP3cKx/
e/zX7lSWMXk4FSoiR8Qd7m1GHo6tv5Ui+b/uNuTh2OvPTJ/cz62e8uFUiOk3
z7WRtTnlw6mwzuNC0/Ffy8E9HDu+9VWWrWBIHo7dby6eKjkszgX3cCpETpAO
3P3bgjwcuz7C0NxVZwzJw7H+HpzePTjDnjycGn7xrltfrPrGH68M1Bj7PfR5
gdqC8uHU+Gynyz9hZUUeTo1Txl1tHRvqwD2cGo08S07fSdF7ODV+HRvtbNvC
gTycGi5nff6bKzUkD6fGsP2T/mtSakoeTo3/Wi9Nzhktonw4NQZl2GftX25I
Hk6NiWGT+za+Xwzu4dToPTmrQ8Zae/JwanRPP1nceqgZeTg1wkdb/0hdU00e
To2bK1SnB7UzIg+nxoqvhoUxWVbk4dQIexXUY2Z3EXk4NQIH3j4yMtWUPJwa
o4qjRmyzL6J8ODXauw16vLhXGXk4NWZ6zJk3z9OePJwaC3Iui/v9/3zi/4EV
NVSPr4vvWdSAezg1xMO+iyc4VFA+nBq3xG6a4X/tKR9OjRlP7Quvrq0F93Bq
jO68aFXbnT/BPZwaBklbG2w/LaZ8ODVkTc/EbB6v93Dsetrnhjm72FM+nBod
DoRtsWivAPdwahxpmT2kiU8deTg1st6MsMmtFFE+nBo5Iek533+Wgns4tv6S
tk+uFQkpH45dz6QhR5Lt68A9nBpuhwP6PrhZTflwalhGjdDGK2zJw6nRLXBh
ny4qMeXDqRG6NCQo8K+M8uHUMJ5eKvznUAvu4dj1Hzd/yPzoEvJwavgs7zqm
v68JeTg1JF1W93b8bUoeTo0ewzfPObfAmjwcO//qvnOiqu1ofqMa/hHPnhTE
2ZCHU6PJ/V4ntgw0oHw4Ndr9TXubMl1IHk4N98qJJWU5QvJwasTNH5Q/oZOA
PJwaEdkxv3cms8/P/wNEaqStu1KjPGNOHk6Noad8W33vaUX5cGrcPfYw9kg3
AXk4NTTVS6qXdtfnw7HzuWU1PKu3AXk4NQ7Ze+oWhf0D93BqeLSdFv0+WwPu
4dTY1aJTf+taY/JwavxbcumA+wBryodj9T19z6GnRdngHo7Vi+d047Bp/8A9
HKuvy1fbXm9rSh5ODes5bactNTcjD6fGdZOZAz1v14J7OHb+1+Tz9gSZkYdT
oy6r5OKfS/p5k6z+b8S9NNfYUT4c238n9n8bMaSAPByr72t9ftxYZE0eTo0z
1VNnzjZ2Iw+nxpcrzy6P8LOgfDg1PgxxLh7qXQ/u4dT4nuKb4W9fSR6O1Xvb
3tM3xVqQh1Oji4HZy8FD6sE9nBqxQ6XF/VpVkodT44La1KbqvpI8HFuPgL37
4s6LKR9OjXe/2LOxkzF5ODU2/SiInnavhDycGiZP2z6dH2RMHk6NPZEL0xOq
82jepRorW22/0Gp1KXk4NWyNHmw4e7uC8uHUiH7rtyGylz4fTo17LhNNts6p
B/dwauwTxKYkP/5EHk6NiruD5g9OEJKHU2NDJ/G23AnulA+nRoPZx8LbDTYh
D6fGtzPveri7mpKHU8PzoKEo5G0+uIdTo3L0JqXLWRPKh1NjVdCVTJP5tpQP
p0bm69qJnlYu5OHUuLx6vq7ujiF5OHY9f1y9uHakiDycGtuTTxdYnHckD6dG
SEdxjY+nEXk41t9c1UPrc20pH06NKxsmNKkzF5CHY8ebvm9D+Fwr8nBq+M79
9E4RXQ3u4dh+Tjj422CzEtzDses3TzHfy0dE+XBq7DjTYPWA+YXgHk4NReb2
Gt8ya8qHU2POy+xN3rG25OHUGNiu55ZXrUvAPRzrXwub+73sa0EejvUn4/wZ
8jBX8nBqLD3203fQHv18TzUOZIcuv3K2CtzDqbF+0oN/23o7UT6cGlsDFDu3
yC3Jw6kx/Kb3rhcrq8A9nBpdL59sunBWGbiHU2Na39NpQxcYkIdTo3aa6t82
QxF5ODXykioamEBAHk6Nw94BszRzxOTh1Jj6LPDaXTdD8nBqzA82St0R/o88
HLvf+Gxo1Jz1G+7h1PDaOexA1iBj8nBqrFFlvbFaakT5cGpsq971fstrkT/3
cGrki3r2VLUvJA/H6m3Gyd5b20vBPRzrB5sjCxv3tiUPx9b30t2zGSP1Ho71
m5TadgWZJeAeTo3g99qcJwONycOx+/vwvOqohvbk4Vg/iFcfTt5YCe7hWP21
0F3cLqomD6fGyKnr3u9tVgXu4djrL9asOiA2JQ/H+q+JSc+e+QLycGosvhh8
bY+33sOx/XlvRN93hZbk4djzzlhVz7AoIeXDqfEpy8/KP1JMHk6NZfMDw8ey
50ju4dToc7K1o3EnW/JwrN+4ZvoGVJbRvFM1Gi+UNfH9WAvu4dQoadXp2+tP
NeAejtXX5r0dFs4rBPdwaizs6p/erLIS3MOx/hbbwdJjURW4h2P92Xj2pPFN
q8jDsf26o8h/1wkduIdTQ+ouf2hfXU4eTgPt+IxXI0INycNp8NImHHYBTuTh
NGgutN2y+IkxeTgNcmdoh1g8NqB8OA32br7q77XUgDycBp7PGscNzDYiD6fB
ly9XTw7+lU8eToOJRQY9bNsJycNpELDbKv9AgQV5OPb79MYb26hNKB9Og3YB
C6fUXc2heakauPww6Ld4vxF5OA1O1HmZVj4Wk4fTYNEebUp2f0fycBq8H2pR
W7+qmjycBllPjGwdHY3Iw7F/X1j/Lm9iI/JwGgxJSZ+Rzj4fcA+nwdN5y3ef
j6kA93AaJGal9Ru1w4A8HDs/i+KO742+gHs4DcaoopIMmv+jeakazNyhm/d7
oSF5OA1ahB0/G9FEnw+nwYI12zc+rtN7OA0SulWcmfIlD9zDaWDy4trJwPVC
8nAaRASdu3vCTUUeToOkGuc3b1YJyMNp0CqxdsZwUQV5OA0GbH350bpbObiH
08DvZvLO/JV25OE0mJzZe9/colpwD6dBxz+Cvw5zDcnDaTD0aeK/2pAqyodj
67vOe8CkRYaUD6dBj6/bwz12mVA+nAY7O+UNTjpbCO7hNBD3TT1Zu01MHk6D
lMSPc8IH21E+nAYPQluWr4uTUz6cBrHv35z4E2xGHk6D7h/GRU7oUEH5cBoU
yANjmz40JQ+nwf2NOx/fjCkH93AaHDz2+2zjRCF5OHa+3duXOUX/A/dwGlxx
2HRbeduMPJwGPfuvzaz1KQL3cBq0/Lln4uax1uThNHhxOqUsPsKWPJwGy1x8
lVnnjcjDaZAssjr+5HAZuIfTIPLaxUuJVULycBqc3BP5rXd/AXk4DQb+yRr2
67oFzUvV4K9v3MvDrYwpH06D5X1/H/tPpp+XqoG5svWIycYl4B5Og3xppWtS
kpg8nAbTDNVdNk8wpXw4Da5lD174UCsiD6fBhOjCJe1jy8A9nAa3O39xPjVO
RPlwGoQP2fzRNkRMHk4Dq6kfN248+xfcw2nw5G5Cs8dyHXk4DY48WmFRY1BA
Hk6D0WbW42Zo6sE9nAZbh0almG23JA+nwZ7KS9ZPs50oH06Dunlzg+6GOpCH
0+B444+WE2+LyMNp8CruiGfwAim4h9Mg9caUfdfLhZQPp8Hs5Vv8jvf+C+7h
2Pqv7GnQo28BuIfTIHPUzxnWFw3Iw2lgZz93bdGoOpqXqsHl6MtLz8uKyMNp
MD/7Q+CrGSLycOx8W+c2ezrehDycBhnjm/QzW2hFHk4D24Yt/ptjoJ+Xyt7f
65ykorEVeTgNpr/rndntqwl5OA3adLLYHZ4l9Oceju3/1YtkFV7m5OE0cL3Y
o9X9EFPycBo4xuflmEebkofTQDo/oH3sDAHlw2lgA2npkAH55OE0mPekbJWq
qhDcw2lg1qgk6tgeIeXDaXBnz8IzDQYXk4dj/WZ3G7/Ou03Jw7H+l3LD60m7
esqHY+d/wefg7Tki8nAaOMwY1DX+pAl5OLZ/Rsstz95XkYdjP4+13SvyNCUP
x87Xu49NQzdj8nAafL46yMtsuxF5OA3u9h5Xs1RcSflwGhS/UbcwWm1FHo71
j1/OA7p1LwL3cKy+dm3a69vGgTwcq6/hnVNX5us9nAZTBt1fkXGklvLhNMgR
mpvOWF5HHk6DA6vfxR8ZY0UeToPG4qgVKT8LwT2cBk1WzmxTPcWEPJwGhfst
rT94WJGH0+DnHuMWhSH6eakahCwvzDbOsyQPx/r1n06pgodiyodj/TGvasqY
8wrKh9Og/b0MTepcZ/JwGtRYyEpsZ9qQh9MArgMe9re2IA+nwb3lH0M7TxOS
h9NAJRb+c5+dS/lwrH+GfzlguqwO3MNpYBh3o+Gpb3XgHk6DGQMHxW+aLKB8
OA1Oq17utksxIA/H+oPA76pzNxF5OA2Oes5z9ThUB+7h2PkdsKxY2bEe3MOx
fnt1XIfzNf8oH06DqcXdtwzub0QeToO8H7F1n/cUgHs4DSbtuO5ZvLGE8uE0
WD2u04AO+/X5cOz1S4YNfRxVCO7hNJhz1fyXUFUM7uE08G3pMWV3LwF5OA17
rmnzZ8oQC8qH02D3i5G3/70RkYfTQDa3PDCdfb7nHk6D0pXDLhRLq2leqgZb
DBIuHWj9Fvx/z2jQoOCtdlRAJXk4Vr8Tw1pVGptTPhzrN1cOWJ6xrAD3cGw/
Zjy7OnWIDXk4DbYnPBosfmFHHk4D58oWB9oXWZGHY/20dMilRh525OE0WOG4
Zf0F5x/k4TTI/iaccmVbDbiH0+DwrFkl/VfXgns4DXadEn1+aK/3cKw/mnRx
3bpMB+7h2P3dcF3kw+clNC9Vg/Fj1zoo1Dbk4bQ4KC/57/xaMXk4LV7fc2/d
xNuA5qVq0ay/RZsmIhF5OC0Co1qFj8wQUz4c+/suxTEoLgX3cFpcvbB8jk2P
MvJwWvjcG7b68loheTgtQp69kcUv14J7OC0W3oqrn3awANzDafFmtEGrtgdt
yMNpsbL2VkPbDWbk4bTwXTi4e8nvSvJwWlxcH7zYx76aPBw7fsXl/ilrDCkf
jr2/W7qTVUsLyofT4mHejg3rjGtpXqoWgiMVDYObSME9nBYTHk/2N/1QCO7h
tEiK/7qlbJMZeTgtnESJ3Ra+E5KH0yLLokPYbvb8zT2cFoOKn+8wm2ZGHk6L
Xm65DoEKU5qXqsWdR2kXnjnrPZwWFX9tI6rcK8A9nBb1D0+t2s2edzhw0sIq
VJbpVmVMHk6LH4/H7Ol2UUD5cFqsX50y7ouNIeXDaXHjwq30SY9F5OG0qEGA
hSYnj/LhtHi388exqJg6cA+nxbeGQ9OGd7WgfDgtvJ+uWFDoZUweTotd8vYL
mnrKwD0c+33eNlu3+2bk4bRoMmWO+YODpuThtFD3iXvhH1YA7uG02LRrt++6
QDF5OC2OrHM4/davEtzDadHq6xTfbfUm5OG0mPHVSz2tVxm4h9Oi4X+pQefM
bSgfTgtDRZsB3hNrycOx9Rb3aDZ/niV5OPb78tBxyV5C8nBa9PgwOGH30gJw
D6dFwOMLwaM9asA9HHv9rpffWsYak4fTIjPim69dbTG4h2O/f/TPaJlnMc1L
1WJiWZevPxVF4B5OC4P9rVLWPlWCezgt1tz4sHzk5TLycFrscOm8p9MEA8qH
Y+cbHmzQeaqQPByrj8ijotN/KsjDsf2TXDjtVLgVeTgtum6wn+k0tpLy4bTI
dsyr7H7OlDycFhu6T9yft9OKPJwWnUYl7hGw5yzu4bS4+XLU6keL9flwrF72
j75197eA8uHY63/0vlAXZu7PPRw7/jK/57GzCsE9nBb/UnInhtiZk4dj55ta
/n5wgITy4bToFz5NuPu5gvLhtAjNn/7b+JiQ5qVqUbrpkvMTpRl5OHY9n8Lv
X2AVeTgtzo09afbVTEgeTouX8fXPJuzRz0tl/WJyhnXIonzycOz1dfLgG7Yq
8nBaRB5r+iTNrp48nBariuL9954VkYdj9dr216Wq6mJwD6dFSV5WdcNSC/Jw
WpzuKG250cWYPBxb33mF7ZaH5IN7OHb8mC+7PLsW3MOx/eNekejmW0seTov7
+8cFNxmmIA+nxd0xWXMKqurAPZwWBfaJjaPMROTh2Ot9vHM4s96JPJwWQ0Mv
1hlPr6N8OC1s/lW09flsRPlwrD8aH8kZlWxI+XBaHDaY26pftAl5OC0yGtXv
SnTRezgtRj1Ol6Z6CsnDaTF4n7J45WhLyofT4rZh1GbHkWXgHk6LzsGplhZe
BeThtOzzXPDxvOsqyofTYvhZ48Tuyabk4bRo7noQJQoB5cNpUbUw40K6xow8
nBbJjd8u9QisB/dwrH9W2WS0rCinfDjW/w48TLcqlYF7OC3yEns2MmWfh7iH
Y/VY1fR1OntO5B5Oi6PPM8ckK8rBPZwWicGzxjYzV4F7OC0ufYsYc2WIMXk4
LaRT35eFpNfTvFQtGtzedneAREX5cFpsdBmB8EUC8nDs+grPrhsgLgb3cKyf
dQrzNB/wgzwcu/85Nzl1/q4heTgtOpSdjTt4Q0Aejr2+8T/1xL5C8nBazKk4
s+5ty0LycFqcuj0kW7NSnw/H+s+cdQeEEYXk4dj9qFWDaOMVhpQPp8W8Ht1U
aXaO5OG0mDzD60YPpSV5OC1i2zTtFbtGSPlwWozOOKq42M6APBxbz367HKN2
ltG8VLbeh6+NcjleC+7h2P116MT0duy5ins4LZxTH2VttrQkD6dFeHOrUukS
IXk49vO5QOeo6eXgHo7d/5NO5Wx+ZUQeToul0X393k81o3w4LWYrz+ccOG9A
Ho7dL3er260OMSEPp4Wwufj4jCPpNC9Vi+nP30x12i0B93BaBF3v13u1twl5
OHa/Czb+7GZnRvlwbH89CqwMjSoC93Bsfz1fO8YqSu/htHA582Dchh3F5OFY
vfRusvnDUQPycKx+Txl3OBdjTB6O9QOTkpRt4SXgHk6LukM9Br8xMiEPx+rp
R9dW/pNE5OG0MDqcOX3FSQF5OC12z/69X/ZUQPlwrB4OziqNKNbnw7F+Oqzz
ni27jcnDaTH+5pSUw+tLwT2cFvu+tbvborIA3MOxfibcuSGz2pLy4bT48vxq
ceCuQpqXqkXLE8WdXsbVgXs4HZp9euNU9UlIHk6HYgNfReF7M8qH08EjeG7T
IM8CcA+nQxg67bHYXUYeTodC7+Jv807lUT6cDrcOPJuzO62Y5qXqMGXT+eTV
z1U0L1WH9LrHDycYV4N7OB0WTXVxdvE3o3w4Hcwc75ZKZ+rnpepgP+9V6EeP
SpqXqsPp5uGS/88f5h5Oh4emaT+3ra0B93A67CmY3KTio5Ly4XR4uaRVG82i
X5QPx97vUW3XI3fNycPpMGNlouOMMgF5OB1MBx8cbr3JijycDmdTU91W7a0C
93A6RHcUbOrkUA3u4XQYNffo+zO7DcnD6VB+cd6iBb6G5OF02GlwTlVUX0fz
UnUwuuM0X9T+LbiH02H4ylrLfp9rwD2cDtIBk+o8PAXk4XQ47nvddtZWM/Jw
OnQr8z26/WEJ5cOxn0syvRTCKnAPp0PkorJVXaZ8o3mpOgxcLfvxaJaI8uF0
aC6z7LH+txl5OB18hnbKDW5UQB5Oh8aTTugMf0spH06HN/3G7JvKniO5h9Mh
T+r57fXbOnAPp4PFtXvnYx1rKB9OB8OHNwsHnMsE93A6iNyzjvnfNyAPp8OD
lt3XKT//BPdwOsROvLVk6wwJuIfT4ZtAtWTdiDrycDoM6d5cIE4oB/dwOpR1
Oaw4Nl5AHk6HJ7HZPx45loF7OB3u5uw/nZRoSB5Oh/Br3tH27WrIw+mgCp/p
9dugDtzDsXocl/zy2Mta8nA6HJLEZTr8KQb3cDo0nVS8y7qLkjycDlle/XcN
nPKL8uF0mLk7zbvubgG4h2P1Nseg5l/pd3APx95f0qfV/M5V4B5OB89X/ctq
gkrAPZwOref9mfzyqRPlw7H6bHc4zi3xO81L1eGLo9+rg2VK8nA6/Ne1x9gN
tSLycGy/iljrfiAgD6fDFatu9grxL8qH08Fq1xTfUe0rKR9OhwajBOqGq+rB
PZwOl9NsnAa3MiAPp4NwvPqww379vFQduizeOezVd2PycDqkGKcPPJpdDO7h
dKhW1F18sLyA5qWy63/62ezCfgLycDqo521xnHNTQB6O1Xtm8/zivlXgHk6H
zHOdFqVV1ZOH00EX/aj02rIqcA/Hjj/i3c/ZXVTk4XS4rpsdM22hkDycDo71
Z2sGLNHSvFQd/sov7J3eSEgeTofB1eqiNybl4B5Oh9/ORx/8Kaqieak6OK2Z
ejpyYj24h9NhZFCMrI/OhDycDj3PGXgHsj7FPZwOFdfOFRVEVJGH00EbM7/W
/IqQ8uF06OjY2+VzGvv8/D8Pp8OJTgO8I+eqKR9Oh7g+vRUfnpWCezgdXLJm
dSlsbUoeTofJcbf7/dolonmprN+cOJe/ydSYPByrN+f85orVSnAPx47vc8HP
gcUF5OF0cO0yteOAVfngHk6Htya+V38+ElE+HFuv+4X9JmwrpnmprB8lX698
0NqQPJwOV71Tk7IVFeTh2HkMXj9woYWM8uF02Ofqk/gsh31+/p+H06Hrw+aF
OePLwT2cDjVHM2ZfijIgD6fD0TZ5uz+JHcjDsX44TnTcLLSaPBw7/lXDjGdf
rCQPp0PDyDUbhz37RvNSdXjxJfVvpE0x5cPp8NH0w+6SxF/gHk6Hi5fjDv+4
VUweTgf/mMoN6iv14B5Ohx4jVrQ6fUVA+XA6wPdp447suYt7OB28P1TfGPqp
GNzDsftNk3nil0nF4B6O3b/GHTFfX1FEHk6HY4c/brMR5YJ7OB0y/qwbMsWl
HtzDsf2/RrhuBvt8zj2cDgtevhuQ/EkF7uFYfW5d1vPbCQF5OB28vnoNubK7
lDwce72OsiYm//6Qh9Ph/ha7hC6jdeThWD9vMt3UMLwK3MPp0MvPJXTRySLy
cDqUBDypXvKlljycDuP3jc3ZPMqcPBzrZ7sDngX89488nA6+RbGrkldowD0c
Wx+vlPZXSwvBPRyrp7oufRYl5oF7OFYfw/65rDlbCe7h2P2/XfH8mAQZeTh2
vOYngjdE54J7OB0UPmHtum0vIg+nQ6PPOzo0zM0C93D//35re6V01ZCH0yHt
61bvDs2E5OFYP+jhdNj851dwD6fD6pNPkqLuF4B7OHY/CbYf4+IlA/dwOmSb
n7xU9q0e3MOx+5MiKHc+6+ucS+kQkdA7XvKskvLhdFiZGutbsFxDHk6HhPyN
G14OVdG8VNZfLYcmTf5VDO7hWP2d63r+fpNSmpeqw9rtKZ+MKw0oH06HMTZX
7OsX51A+HOsnS6dcm8z2OfdwrB9tnLw3uX0JuIfTYWji4IFpAeXk4dj6mhnk
71mRC+7h2N9N3r1u5cIqcA+nw+1PTtO2nfoH7uHy4bn9fW7QxhLycPmYtObP
HOnwGsqHy8dKw5rYOw4qcA+XD4e3h9utiCslD5eP01/r3V18S8A9XD5q3zdo
VvvkK7iHy8fCHKuzx9jnKu7h8rHgr9eCTaMNyMPlQ1gz0+aakzF5uHxE7DRq
4jqtBNzD5eOXfH2tRYmQ8uHy0a4ySJq8XALu4fLx8UkjedDgAnAPl48q1fCu
6pw88nD56LMm9+v2FZXgHi4fltHjwsO+asA9XD7ygwvWRwT9APdw+QjYXOHr
U1AE7uHycfvr+phn736Rh8tH5J3HZyyO6+el5uOdt7E8Q2NAHi4fsnn2SZ2d
BOTh8lHTB91y+n4jD5ePoUbzLGyjssnD5aPN3pbfe0ZXUT5cPtJWbvu/mu48
JqorCgM4KtaNogJaFyhNxQAuLSkgiMUPCkhDxQWN2ooWobjQRtRqFVFRUHBB
GNRWKwoIboEaFCVaEBRsXYJVEASUbYYRBpyBM+woVnr1nv45yWTy3rvnnncn
+eU7pnfi+tnDEcLGrFoSIs670sMRDq2aP36O2PfSwxFO9x8KrXou/oe+93CE
9Nl7lJd2dHM+HOHU4ap11haGnA9HuBiWlZlio2YPRyias2Wc09BezocjxO9w
yhlcVskeTtzP1Rp73/JnnA9H+PEFbVw/pZM9HOGXRMcvf37dxR6OMNLMISHY
7xWkhyNErmwsHDlCx/lw9C4PbkTAaWIPR9i8JEXpYtzAHo5wnpqHDIppYg9H
+OOIw/O4NfU8L1U8H9vFXo4tOkgPR9B7ZTibR+ohPRzB4NpW0/s7yjkfjuBv
qnU/MGcIeziCa9bGAE/DN5wPR2jtPjbCqL8P0sOJ9Y5a5ToouR/SwxH+9Hfb
4OWph/Rw4n7dbbcsVJWwhyMEHLmYjbkdPC+VUOEbHhk2tI7z4Qg68/0Oj31a
ID0cITwwqPDzx52QHo7wg9kxzRfXdZAejjBuall4whoVezjCdvVNKwPtP+zh
CKad7Qrnsa8hPZzYb3VGa/rEOVZ6OELpgKHmxklK9nCEpJknN+4bWMkejqBQ
ZGxuWN4O6eEIi2b7W6x+QJAejhBXNDvvrThvSg9HeLk4/ZFjghrSwxGSsy3n
DX/QCunhCOu9deF2Ft2cDyd+p+BG5k7XFvZwov5223X+5K6C9HCEb2sDr2rT
OiA9HCHfxLkyN7SH8+EIHeONFyefqmEPJ/rRwUFKy9fd7OHE+trePK+dpOZ5
qQTLOLfiitQm9nCEjDErPGfeLmcPRwg2zvm+L+M5ezgSfZGahqfoOR+OsDrl
Ro1FbC+khxP9piPC7/ImNXs4cb2WT7qmx3fyvFRCT8x1kzzxf1J6OIJLkEVd
aUMPeziCtq8rqsWvmT0coTt/7Naq6kZID0fImvnhrj3R9ezhCDWeifkFSi17
OFHfywwGpt4qhfRwhCu/ITLiZA/nwxGqWx5a3wt5BenhCJ2TLE+6f6WH9HCi
PlKOT3MJb2cPRzA00jh9cryM8+EIk1PVQWl7OzgfjmB9rsnh48tdPC9VfH/d
5awN1AHp4QgrYz6rW39HA+nhCBNv6RBf3gTp4QhnY1VW36UrIT0cwfHptWbd
vEbOhxP14R7Y9nCCHtLDieep3fCB5uUjSA9HKJnxb3nJRCV7OELK7ZK6zHUG
nA8n+nNu/7EK73rOhxN9o3JC4F/LmtjDifUyM2tQhHZzPhyhLe/o2RO5L3he
KuGIxjMhKVvFHo6gSlZ8WjpdBenhCL9n7PO3N7zH81IJ2Z1W6oVnxHnkvYcj
WOxy2tu+VsceTlyvr/X0igg958OJ9Ve8qcwZ0wDp4US/3F1RaHOuhD0cITpn
rqNJQD17OMLb/JVRC2zaID2c2G8DWpR259Q8L1X0l9iJzp4qDaSHI3ydfp9G
Tn4C6eHE85zq51GvqOd5qYRRub96tO/838OJeho2ZeBZj2pIDyfqKTXMeptH
qeQHxaI/lLU8yFim5Hw4QqZBkdGzAzWcDyfer7OCfaOtWtnDEZavHVfZSzr2
cISqVi/N3bhaSA9H2DY4zPnxsAZIDyfq1c3+G/1hNXs48T5unTT86KYmSA9H
+Cgi4YLK+gWkhxPnj8SDi+6K9ZQejjA6zcMzKKSVPRxhb5GH37SHKvZw4vmP
2h50qUsN6eEIs9LySmfsb+Z5qQR1gQ/5L1dBejjxWXsm5u+L9yA9HMG4rPZR
27tc1vf8hWDn7Xo0fmkzpIcT/XK0/77xteXs4cT5xjX4yYzIRkgPJ+7nStI1
F/GelB6O4BNt/7RkQQV7OMKZaeZuNoOr2MMRLjwzse89oWEPR7h/1cFi2NZq
9nCiHmsiEn1CC9jDif09NaRw0/li9nDifNMXbdt3qJg9HGGI8VLvJfNvsIfT
43b8io+jVLH4D49s35M=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.}, {0, 412.40664309876263`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6749208896284647`*^9, {3.6749210418905697`*^9, 3.6749210675319223`*^9}, {
   3.674921644507183*^9, 
   3.674921660545627*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztfXm0VlWW39fvm957zKhll5VVy+qkutOVTnolWVmpVd0Vs5JOp/5I/5X8
LZPFDM4iiijDQ0AQFBTFB8go2jiRZhBQlFkUnLBUBEEpUcAZcNab8zv3/M7d
59xzv4HpPdLfW+t7w7n7nrPPnvc++973D/2uG/z7Ef2uGzKg36X/85p+Vw0e
MuDaS//+ymvUUP5PcrnCr3O5pocuzeH3KJfjt9DX3+Jb+Np5c+mE/tEc/fjj
j9Err7wSzZ49O7rhhhuioUOH6p/33HNP9Nprrz1TG9jG2sAu0GAtGmz37t0a
bNSoUdGQIUOia665Jpo+fXr03HPPRd99911ucT1TtkY//PBD9Pzzz0f33Xef
nhJgw4cPj26++eZo/vz50Z49ezDVhtpmLcdEOq5/5KNvv/02euCBB6KBAwfm
Svp7PlqwYAHw1BAlfG8yF2655RbSOtdkJhg2bBiuaoiu+D7/dGfumnVhwenO
XDATfPnll9GsWbOcCcaMGRO9//77GuLBM7XQe++9p8cBUTZwU6dOjT7++GMN
sThrguZqM1dDrSDZXI4WLlxILkWDBg2K7rzzTj02bdo0dWN8+9KlS+0yxWps
Hz16dIjtZ3ClKmJwBlfK6+8tWtHuuusuO+ngwYOjCRMmaCWbPHkyNCnH+6+6
6qroww8/PLsIHThwQOqXRWjevHnRnDlzorFjx9qJr7/++uiTTz7Rdy46RbGq
fwsxprkvzH5ef/11ezus3sGDBw1IMXrnnXf0GK+/8cYb1a3LpEmTNPDIkSOV
QCxbtmzemV4pU8zmn+mVeNPWrVvtDbfeemt0+PBhc60UffTRR1rUeL2trQ0G
/Yzj0mTW++abb7RP4U0zZsyIjhw5UjCX33777Wj8+PH2MmyXQqd++cqf4gYK
Ur4K0R133GEvv/zyy0UzDHfHYSWp3cywsY9akI8fP768rkkuriwX9eFS1F75
pptu0sPXXXcdXFCs/+o7bDmv4aOmOMVVnn76aUd0vv/++1gG1DVFAb0yr//h
D3/INhQ961recOlzsxLMEK8iSFF7N1gUtJvltU8//bSrGVaBiR1esWLFQ/XP
9JOsrcw7daz2799vh7ds2VI2w7t27bLDyjecxgKKdnZYLdZshqWFWLJkSSaX
etS/cl6yqhBt3rzZXn3ooYe4Q/WrHd60aVNXsw4cJEJJKtXOnTtzy+qfqRWG
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\
\>"]],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQress8/qRmZa921LDOY3HKh0gfCt7U9cXu+zz+RwS
jUINtFY62+u1FzR+myEMlfeyP9GsuuPnOUGHPys/XvJNCrCX2hyu88pADKo+
2D7hsEha0y1Jh+O7dvSyfQizv5Md+39KlhBUf5R9Hu/Ce+dXPbefdLreY39t
rH2h5oTaMxGf7SHmJdifvff1y+Jrsg76eYsZ97Am2b/XnsF/p0sEan6yfcOD
8D6jPGmHKd/Y4mf4pNpfe/HD1kNNHGpfmn1Q1M4Vm2eLO/yqy9pTMjnD3reI
+WbMvJ/2EPuz7M/ZLO/+8vuTfTz7OcnAW9n27Q/SXfQihBwg7sm1T6nY+YHL
W87haL9hua5ivv2dpF/3Pq36AHVfgf0ad+MmqyJlB9Eer1csJoX2n8tPamyJ
EYC6t8jet6bzkma1jINHwB+J4utF9trLatey+X+0h7i/2H73n9XFW/4qOlSL
rHN/WFViz3+7cUftDkGof0rtL0z99FP59wf7dTfiy/zlyuy9n8vIv/3PDfVf
mf3crWZ17DP4HR7MEVy692C5veeR0sdrpjBD/Vth/9l5koNZiICDcOLhy9qp
lfbSp08k7Lv2C+r/KvvuPdHdt8VkHdxUS5lmcVTb9z/8v/bGOzEHSHhU29/9
zHHNiUXBofKlmiHHmhp7g37eG3V//0Pjq9Z+Tx1j74p0Toc1a0EOrLOfkv/L
VpKFGRpe9fYPRGMMtyrJONwr7Op78qnePu/N7+M7S/ih6aXBfqXe9vs1JYoO
AEfwKHw=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.000078125, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.0002, 0.008}, {0, 412.40664309876263`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6749208896284647`*^9, {3.6749210418905697`*^9, 3.6749210675319223`*^9}, {
   3.674921644507183*^9, 3.674921660631174*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"num", " ", "=", " ", 
  RowBox[{"Length", "[", "fdata", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Sqrt", "[", " ", 
  RowBox[{"num", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"num", "-", "1"}], ")"}], "/", "2."}]}], " ", "]"}]}], "Input",
 CellChangeTimes->{{3.674921693724609*^9, 3.674921746461562*^9}}],

Cell[BoxData["5000"], "Output",
 CellChangeTimes->{{3.674921729861005*^9, 3.6749217469209013`*^9}}],

Cell[BoxData["3535.180334862707`"], "Output",
 CellChangeTimes->{{3.674921729861005*^9, 3.6749217469236383`*^9}}]
}, Open  ]],

Cell["\<\
1.5 days and Two weeks of free-fall running to make Fig 1 in LPF paper.\
\>", "Text",
 CellChangeTimes->{{3.6749253588014517`*^9, 3.67492537739478*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"1.5", "*", "24.", "*", "3600."}], ")"}]}], ",", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"14.", "*", "24.", "*", "3600."}], ")"}]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.6749251347070847`*^9, 3.674925166904787*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7.71604938271605`*^-6", ",", "8.267195767195768`*^-7"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.67492516837572*^9}]
}, Open  ]],

Cell["26 windows of 40,000 secs (11.1 hours)", "Text",
 CellChangeTimes->{{3.674925384541802*^9, 3.674925402080592*^9}, {
  3.6749254332080507`*^9, 3.674925436916086*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "/", "40000."}], ",", 
   RowBox[{"40000.", "/", "3600."}], ",", " ", 
   RowBox[{"26", "*", 
    RowBox[{
     RowBox[{"40000.", "/", "3600."}], "/", "24."}]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.6749254085954113`*^9, 3.674925428473098*^9}, {
  3.6749254890164843`*^9, 3.674925498803102*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.000025`", ",", "11.11111111111111`", ",", "12.037037037037036`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.674925429919557*^9, 3.674925499627305*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Force from capacitance", "Section",
 CellChangeTimes->{{3.674944195003543*^9, 3.674944206780747*^9}}],

Cell["\<\
Some capacitance numbers for the LISA Pathfinder (LPF).  Assume a 1 Volt \
measurement for capacitance, could be more but not much, could be less.\
\>", "Text",
 CellChangeTimes->{{3.674926836658287*^9, 3.674926852895769*^9}, {
  3.674927109988338*^9, 3.674927132519586*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"lcube", " ", "=", " ", "0.046"}], ";"}], " ", 
  RowBox[{"(*", " ", "meters", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dgap", " ", "=", " ", 
   RowBox[{"3", " ", 
    SuperscriptBox["10", 
     RowBox[{"-", "3"}]]}]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"meters", ",", " ", 
    RowBox[{"2.9", " ", "to", " ", "4", "mm"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"mass", " ", "=", " ", "1.928"}], ";", " ", 
  RowBox[{"(*", " ", "kg", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"lsep", " ", "=", " ", "0.376"}], ";", " ", 
  RowBox[{"(*", " ", "m", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"eps0", " ", "=", " ", 
   FractionBox[
    SuperscriptBox["10", "7"], 
    RowBox[{"4", " ", "\[Pi]", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"3", " ", 
        SuperscriptBox["10", "8"]}], ")"}], "2"]}]]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"SI", " ", "units"}], ",", " ", 
    RowBox[{"F", "/", "m"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"capac", " ", "=", " ", 
     RowBox[{"4", " ", "\[Pi]", " ", "eps0", " ", 
      FractionBox[
       SuperscriptBox["lcube", "2"], "dgap"]}]}], ",", "\[IndentingNewLine]", 
    
    RowBox[{"efield", " ", "=", " ", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"4", " ", "\[Pi]", " ", "eps0"}]], 
      FractionBox["1", 
       SuperscriptBox["lcube", "2"]]}]}], " ", ",", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"V", "/", "m"}], " ", "per", " ", "Coulomb"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"ue", " ", "=", " ", 
     RowBox[{"eps0", " ", 
      SuperscriptBox["efield", "2"]}]}], ",", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"F", "/", 
       RowBox[{"m", "^", "2"}]}], " ", "per", " ", "Coulomb", " ", 
      "squared"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"ueB", " ", "=", " ", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["1", 
         RowBox[{"4", " ", "\[Pi]"}]], ")"}], "2"], " ", 
      FractionBox["1", "eps0"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"capac", " ", "volt"}], 
         SuperscriptBox["lcube", "2"]], ")"}], "2"]}]}]}], 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"F", "/", 
      RowBox[{"m", "^", "2"}]}], " ", "for", " ", "some", " ", "voltage", " ",
      "volt"}], " ", "*)"}], "\[IndentingNewLine]", "}"}]}]}], "Input",
 CellChangeTimes->{{3.6749268623488398`*^9, 3.674926891139491*^9}, {
  3.674926921521761*^9, 3.674927097086728*^9}, {3.6749271452627974`*^9, 
  3.674927297947967*^9}, {3.674927353198998*^9, 3.6749273554316883`*^9}, {
  3.6749274642049923`*^9, 3.6749275078268137`*^9}, {3.6749281977318563`*^9, 
  3.674928214753281*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "7.837037037037036`*^-11", ",", "4.2533081285444233`*^12", ",", 
   "1.5995628855169744`*^14", ",", 
   RowBox[{"9.824379203203411`*^-7", " ", 
    SuperscriptBox["volt", "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6749270981849213`*^9, 3.674927170206193*^9, 
  3.674927299356357*^9, 3.674927509374248*^9, 3.674928220021556*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"ueB", "*", 
    RowBox[{
     SuperscriptBox["lcube", "2"], "/", "mass"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"volt", ",", "0", ",", "3.3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.674927303137188*^9, 3.674927341707711*^9}, {
  3.6749275179801493`*^9, 3.67492753682511*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
+cLWgzTse87ewc2NRJRF+7P1j9DwfwE08pGD
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 3.3}, {0., 1.1741987478744781`*^-8}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.674927342703141*^9, {3.674927520931891*^9, 3.674927537447342*^9}, 
   3.674928223755159*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"avolt", "=", 
   RowBox[{"{", 
    RowBox[{
    "0.5", ",", " ", "1.0", ",", " ", "2.0", ",", " ", "3.0", ",", " ", "3.3",
      ",", " ", "5.0"}], "}"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
      "\"\<volts\>\"", ",", 
       "\"\<accel, m/\!\(\*SuperscriptBox[\(s\), \(2\)]\)\>\""}], "}"}], 
     "}"}], "~", "Join", "~", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"avolt", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"ueB", "*", 
          RowBox[{
           SuperscriptBox["lcube", "2"], "/", "mass"}]}], "/.", 
         RowBox[{"volt", "\[Rule]", 
          RowBox[{"avolt", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "avolt", "]"}]}], "}"}]}], "]"}]}], "//", 
   "TableForm", " "}]}]], "Input",
 CellChangeTimes->{{3.674927560614153*^9, 3.674927732278535*^9}, {
  3.674927764547871*^9, 3.674927828309156*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"volts\"\>", "\<\"accel, m/\\!\\(\\*SuperscriptBox[\\(s\\), \\(2\\)]\
\\)\"\>"},
    {"0.5`", "2.69558952204077`*^-10"},
    {"1.`", "1.078235808816308`*^-9"},
    {"2.`", "4.312943235265232`*^-9"},
    {"3.`", "9.704122279346772`*^-9"},
    {"3.3`", "1.1741987958009592`*^-8"},
    {"5.`", "2.69558952204077`*^-8"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.6749275733669157`*^9, 3.674927669540577*^9, {3.674927701544129*^9, 
   3.674927732808053*^9}, {3.674927768121354*^9, 3.674927828862525*^9}, 
   3.674928227241108*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "Sum"}]], "Input",
 CellChangeTimes->{{3.674919897584086*^9, 3.674919900437937*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Sum\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) evaluates the sum \
\\!\\(\\*RowBox[{UnderoverscriptBox[\\\"\[Sum]\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\"=\\\", \\\"1\\\"}], \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", FontSlant \
-> \\\"Italic\\\"]], LimitsPositioning -> True], StyleBox[\\\"f\\\", \\\"TI\\\
\"]}]\\). \\n\\!\\(\\*RowBox[{\\\"Sum\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) starts \
with \\!\\(\\*RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\"=\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]}]\\). \\n\\!\\(\\*RowBox[{\\\"Sum\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"di\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) uses steps \
\\!\\(\\*RowBox[{StyleBox[\\\"d\\\", \\\"TI\\\"], \\\"\[InvisibleSpace]\\\", \
StyleBox[\\\"i\\\", \\\"TI\\\"]}]\\). \\n\\!\\(\\*RowBox[{\\\"Sum\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
uses successive values \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\), \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\), \[Ellipsis].\\n\\!\\(\\*RowBox[{\\\"Sum\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) evaluates the multiple sum \\!\
\\(\\*RowBox[{UnderoverscriptBox[\\\"\[Sum]\\\", RowBox[{StyleBox[\\\"i\\\", \
\\\"TI\\\"], \\\"=\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", FontSlant -> \\\"Italic\\\"]]}], SubscriptBox[StyleBox[\
\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", FontSlant -> \\\"Italic\\\"]], \
LimitsPositioning -> True], RowBox[{UnderoverscriptBox[\\\"\[Sum]\\\", \
RowBox[{StyleBox[\\\"j\\\", \\\"TI\\\"], \\\"=\\\", \
SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", FontSlant \
-> \\\"Italic\\\"]]}], SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", FontSlant -> \\\"Italic\\\"]], LimitsPositioning -> \
True], RowBox[{\\\"\[Ellipsis]\\\", StyleBox[\\\"f\\\", \\\"TI\\\"]}]}]}]\\). \
\\n\\!\\(\\*RowBox[{\\\"Sum\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"i\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
gives the indefinite sum \\!\\(\\*RowBox[{UnderscriptBox[\\\"\[Sum]\\\", \
StyleBox[\\\"i\\\", \\\"TI\\\"]], StyleBox[\\\"f\\\", \\\"TI\\\"]}]\\).\"\>", 
   "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Sum"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.674919902522315*^9},
 CellTags->"Info3133674901902-6131093"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{"Attributes", "[", "Sum", "]"}], "=", 
      RowBox[{"{", 
       RowBox[{"HoldAll", ",", "Protected", ",", "ReadProtected"}], "}"}]}]},
    {" "},
    {GridBox[{
       {
        RowBox[{
         RowBox[{"Options", "[", "Sum", "]"}], ":=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Assumptions", "\[RuleDelayed]", "$Assumptions"}], ",", 
           RowBox[{"GenerateConditions", "\[Rule]", "False"}], ",", 
           RowBox[{"Method", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"Regularization", "\[Rule]", "None"}], ",", 
           RowBox[{"VerifyConvergence", "\[Rule]", "True"}]}], "}"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[Sum],
  Editable->False]], "Print",
 CellChangeTimes->{3.674919902680273*^9},
 CellTags->"Info3133674901902-6131093"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"abins", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{"i", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6761171860467577`*^9, 3.676117215595468*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", 
   ",", "8", ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{{3.676117196438979*^9, 3.6761172165345793`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "abins", "]"}]], "Input",
 CellChangeTimes->{{3.676117218905685*^9, 3.676117222946053*^9}}],

Cell[BoxData["11"], "Output",
 CellChangeTimes->{3.67611722382897*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{
       RowBox[{"Log10", "[", "i", "]"}], "//", "N"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}], "//", 
  "TableForm"}]], "Input"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "0.`"},
    {"2", "0.30102999566398114`"},
    {"3", "0.4771212547196624`"},
    {"4", "0.6020599913279623`"},
    {"5", "0.6989700043360186`"},
    {"6", "0.7781512503836435`"},
    {"7", "0.8450980400142567`"},
    {"8", "0.9030899869919433`"},
    {"9", "0.9542425094393248`"},
    {"10", "1.`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.676118374342576*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Log", "[", "10.", "]"}], ",", " ", 
   RowBox[{"E", "^", "2.30"}], ",", " ", 
   RowBox[{"E", "^", "2.31"}], ",", " ", 
   RowBox[{
    RowBox[{"Log10", "[", "E", "]"}], "//", "N"}], ",", " ", 
   RowBox[{"10", "^", "0.43"}], ",", " ", 
   RowBox[{"E", "//", "N"}], ",", " ", 
   RowBox[{"Log", "[", 
    RowBox[{"10.", ",", "2."}], "]"}], ",", " ", 
   RowBox[{"Log", "[", 
    RowBox[{"2.", ",", "10."}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.6761184067870617`*^9, 3.67611843037584*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.302585092994046`", ",", "9.974182454814718`", ",", "10.074424655013587`",
    ",", "0.43429448190325176`", ",", "2.6915348039269156`", ",", 
   "2.718281828459045`", ",", "0.30102999566398114`", ",", 
   "3.3219280948873626`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6761183782990723`*^9, {3.6761184153878803`*^9, 3.676118431880431*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"adata", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2.3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "1.1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "2.0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "3."}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.676119997270356*^9, 3.676120034712974*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", "adata", "]"}]], "Input",
 CellChangeTimes->{{3.676120037909298*^9, 3.676120041543716*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "3.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2.3`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1.1`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.676120042408732*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aaBins", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4.5", ",", "6.4"}], "}"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aaData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"i", "*", ".333"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "30"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"BinLists", "[", 
  RowBox[{"aaData", ",", "aaBins"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6761297223066196`*^9, 3.676129829672419*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.332`", ",", "1.665`", ",", "1.9980000000000002`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.331`", ",", "2.664`", ",", "2.9970000000000003`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.33`", ",", "3.6630000000000003`", ",", "3.9960000000000004`", ",", 
     "4.329000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4.662`", ",", "4.995`", ",", "5.328`", ",", "5.6610000000000005`", ",", 
     "5.994000000000001`", ",", "6.327`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.676129806556079*^9, 3.676129830987574*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aaBins", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4.5", ",", "6.4"}], "}"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"aaData", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"i", "*", ".333"}], ",", 
      RowBox[{"i", "*", 
       RowBox[{"i", "/", "16."}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"aBL", "=", 
  RowBox[{"BinLists", "[", 
   RowBox[{"aaData", ",", "aaBins", ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"aBL", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"aBL", "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "1"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"aBL", "[", 
  RowBox[{"[", 
   RowBox[{"3", ",", "1"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"aBL", "[", 
  RowBox[{"[", 
   RowBox[{"4", ",", "1"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "aBL", "]"}]}], "Input",
 CellChangeTimes->{{3.6761297223066196`*^9, 3.676129829672419*^9}, {
  3.676129921499861*^9, 3.676129942970677*^9}, {3.6761299928083363`*^9, 
  3.6761300691663933`*^9}, {3.676130100182048*^9, 3.6761301304180117`*^9}, {
  3.676130164200233*^9, 3.676130263709436*^9}, {3.676130311603444*^9, 
  3.676130316014854*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.333`", ",", "0.0625`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.666`", ",", "0.25`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9990000000000001`", ",", "0.5625`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.332`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.665`", ",", "1.5625`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.9980000000000002`", ",", "2.25`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.331`", ",", "3.0625`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.664`", ",", "4.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.9970000000000003`", ",", "5.0625`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.33`", ",", "6.25`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.676129947587186*^9, 3.6761299976474237`*^9, {3.676130042820771*^9, 
   3.67613007024977*^9}, {3.676130103688895*^9, 3.676130131221559*^9}, {
   3.676130167965794*^9, 3.676130264609367*^9}, 3.6761303165873213`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1.332`", ",", "1.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.665`", ",", "1.5625`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.9980000000000002`", ",", "2.25`"}], "}"}]}], "}"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2.331`", ",", "3.0625`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.664`", ",", "4.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.9970000000000003`", ",", "5.0625`"}], "}"}]}], "}"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"3.33`", ",", "6.25`"}], "}"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.676129947587186*^9, 3.6761299976474237`*^9, {3.676130042820771*^9, 
   3.67613007024977*^9}, {3.676130103688895*^9, 3.676130131221559*^9}, {
   3.676130167965794*^9, 3.676130264609367*^9}, 3.676130316589127*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.332`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.665`", ",", "1.5625`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.9980000000000002`", ",", "2.25`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.676129947587186*^9, 3.6761299976474237`*^9, {3.676130042820771*^9, 
   3.67613007024977*^9}, {3.676130103688895*^9, 3.676130131221559*^9}, {
   3.676130167965794*^9, 3.676130264609367*^9}, 3.676130316590851*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2.331`", ",", "3.0625`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.664`", ",", "4.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.9970000000000003`", ",", "5.0625`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.676129947587186*^9, 3.6761299976474237`*^9, {3.676130042820771*^9, 
   3.67613007024977*^9}, {3.676130103688895*^9, 3.676130131221559*^9}, {
   3.676130167965794*^9, 3.676130264609367*^9}, 3.676130316591908*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"3.33`", ",", "6.25`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.676129947587186*^9, 3.6761299976474237`*^9, {3.676130042820771*^9, 
   3.67613007024977*^9}, {3.676130103688895*^9, 3.676130131221559*^9}, {
   3.676130167965794*^9, 3.676130264609367*^9}, 3.6761303165929413`*^9}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{
  3.676129947587186*^9, 3.6761299976474237`*^9, {3.676130042820771*^9, 
   3.67613007024977*^9}, {3.676130103688895*^9, 3.676130131221559*^9}, {
   3.676130167965794*^9, 3.676130264609367*^9}, 3.676130316594184*^9}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{
  3.676129947587186*^9, 3.6761299976474237`*^9, {3.676130042820771*^9, 
   3.67613007024977*^9}, {3.676130103688895*^9, 3.676130131221559*^9}, {
   3.676130167965794*^9, 3.676130264609367*^9}, 3.676130316595402*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Log", "[", 
  RowBox[{"10.", ",", "E"}], "]"}]], "Input",
 CellChangeTimes->{{3.6761328035892973`*^9, 3.6761328283259172`*^9}}],

Cell[BoxData["0.43429448190325176`"], "Output",
 CellChangeTimes->{{3.676132810563841*^9, 3.676132829146433*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"0.43", "*", "0.058"}]], "Input",
 CellChangeTimes->{{3.6761328469942493`*^9, 3.676132854391138*^9}}],

Cell[BoxData["0.02494`"], "Output",
 CellChangeTimes->{3.676132855302546*^9}]
}, Open  ]],

Cell["Join and Append?", "Text",
 CellChangeTimes->{{3.676394545999322*^9, 3.676394551062511*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"aa", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4."}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.", ",", "2.3"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bb", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"10", ",", "11"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "13"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"14.", ",", "13."}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"aa", "~", "AppendTo", "~", "bb"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.676394554109977*^9, 3.676394623015229*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"cc", "=", 
  RowBox[{"aa", "~", "Join", "~", "bb"}]}], "\[IndentingNewLine]", 
 RowBox[{"aa", "=", 
  RowBox[{"aa", "~", "Join", "~", "bb"}]}]}], "Input",
 CellChangeTimes->{{3.676394606282989*^9, 3.676394610085148*^9}, {
  3.676394642073687*^9, 3.676394668224073*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "2.3`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.`", ",", "13.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.676394611215034*^9, 3.676394673336413*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "2.3`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.`", ",", "13.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.676394611215034*^9, 3.676394673337352*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"aa", "\[IndentingNewLine]", "cc"}], "Input",
 CellChangeTimes->{{3.6763946461381283`*^9, 3.6763946496644373`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "2.3`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.`", ",", "13.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.67639465046672*^9, 3.676394677384383*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "2.3`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.`", ",", "13.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.67639465046672*^9, 3.676394677385763*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SqrtBox[
   RowBox[{
    RowBox[{"1", "*", "1"}], "+", 
    RowBox[{"2", "*", "2"}], "+", 
    RowBox[{"3", "*", "3"}], "+", 
    RowBox[{"4", "*", "4"}], "+", 
    RowBox[{"5", "*", "5"}]}]], "//", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{"#", ",", "7"}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.676398119204031*^9, 3.676398159151305*^9}}],

Cell[BoxData["7.41619848709566294871139744080071306098`7."], "Output",
 CellChangeTimes->{{3.6763981361346827`*^9, 3.6763981598759317`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"aa", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5.5"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"5.0", "*", "aa"}]}], "Input",
 CellChangeTimes->{{3.676825900496414*^9, 3.6768259112702303`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5.5`"}], "}"}]], "Output",
 CellChangeTimes->{3.6768259126888514`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5.`", ",", "10.`", ",", "15.`", ",", "20.`", ",", "27.5`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.676825912690403*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", "300.", "]"}]], "Input",
 CellChangeTimes->{{3.676895331273923*^9, 3.676895339720977*^9}}],

Cell[BoxData["17.320508075688775`"], "Output",
 CellChangeTimes->{{3.6768953348752537`*^9, 3.6768953403945913`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"PlotMarkers", "   ", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", 
       RowBox[{"Circle", "[", "]"}]}], "}"}], "]"}], " ", 
    "\"\<\[EmptyCircle]\>\""}], "   ", "*)"}], 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "5", ",", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3", ",", "6", ",", "9", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "5", ",", "7", ",", "10", ",", "12"}], "}"}]}], 
     "}"}], ",", 
    RowBox[{"PlotMarkers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       Graphics3DBox[
        GraphicsComplex3DBox[
         NCache[{{
           0, 0, (Rational[9, 8] + Rational[3, 8] 5^Rational[1, 2])^
            Rational[1, 2]}, {
           0, 0, Rational[-1, 2] (Rational[3, 2] (3 + 5^Rational[1, 2]))^
             Rational[1, 2]}, {(Rational[1, 8] + 
             Rational[-1, 24] 5^Rational[1, 2])^Rational[1, 2], 
            Rational[1, 4] (-3 - 5^Rational[1, 2]), (Rational[1, 8] + 
             Rational[1, 24] 5^Rational[1, 2])^
            Rational[1, 2]}, {(Rational[1, 8] + 
             Rational[-1, 24] 5^Rational[1, 2])^Rational[1, 2], 
            Rational[1, 4] (3 + 5^Rational[1, 2]), (Rational[1, 8] + 
             Rational[1, 24] 5^Rational[1, 2])^
            Rational[1, 2]}, {(Rational[1, 8] + 
             Rational[1, 24] 5^Rational[1, 2])^Rational[1, 2], 
            Rational[1, 4] (-1 - 5^Rational[1, 2]), 
            Rational[-1, 2] (Rational[5, 6] (3 + 5^Rational[1, 2]))^
             Rational[1, 2]}, {(Rational[1, 8] + 
             Rational[1, 24] 5^Rational[1, 2])^Rational[1, 2], 
            Rational[1, 4] (1 + 5^Rational[1, 2]), 
            Rational[-1, 2] (Rational[5, 6] (3 + 5^Rational[1, 2]))^
             Rational[1, 2]}, {(Rational[5, 8] + 
             Rational[5, 24] 5^Rational[1, 2])^Rational[1, 2], 
            Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[1, 8] + 
             Rational[1, 24] 5^Rational[1, 2])^
            Rational[1, 2]}, {(Rational[5, 8] + 
             Rational[5, 24] 5^Rational[1, 2])^Rational[1, 2], 
            Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[1, 8] + 
             Rational[1, 24] 5^Rational[1, 2])^
            Rational[
             1, 2]}, {-(Rational[3, 4] + Rational[1, 3] 5^Rational[1, 2])^
             Rational[1, 2], 
            Rational[-1, 2], (Rational[1, 8] + 
             Rational[1, 24] 5^Rational[1, 2])^
            Rational[
             1, 2]}, {-(Rational[3, 4] + Rational[1, 3] 5^Rational[1, 2])^
             Rational[1, 2], Rational[
            1, 2], (Rational[1, 8] + Rational[1, 24] 5^Rational[1, 2])^
            Rational[1, 2]}, {(Rational[3, 4] + 
             Rational[1, 3] 5^Rational[1, 2])^Rational[1, 2], Rational[-1, 2],
             Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
             Rational[1, 2]}, {(Rational[3, 4] + 
             Rational[1, 3] 5^Rational[1, 2])^Rational[1, 2], Rational[1, 2], 
            Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
             Rational[1, 2]}, {-(Rational[1, 6] (3 + 5^Rational[1, 2]))^
             Rational[1, 2], 0, 
            Rational[-1, 2] (Rational[5, 6] (3 + 5^Rational[1, 2]))^
             Rational[1, 2]}, {
           Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
             Rational[1, 2], 
            Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[5, 8] + 
             Rational[5, 24] 5^Rational[1, 2])^Rational[1, 2]}, {
           Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
             Rational[1, 2], 
            Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[5, 8] + 
             Rational[5, 24] 5^Rational[1, 2])^
            Rational[1, 2]}, {(Rational[1, 6] (3 + 5^Rational[1, 2]))^
            Rational[1, 2], 
            0, (Rational[5, 8] + Rational[5, 24] 5^Rational[1, 2])^
            Rational[1, 2]}, {
           Rational[-1, 2] (Rational[5, 6] (3 + 5^Rational[1, 2]))^
             Rational[1, 2], Rational[1, 4] (-1 - 5^Rational[1, 2]), 
            Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
             Rational[1, 2]}, {
           Rational[-1, 2] (Rational[5, 6] (3 + 5^Rational[1, 2]))^
             Rational[1, 2], Rational[1, 4] (1 + 5^Rational[1, 2]), 
            Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
             Rational[1, 2]}, {
           Root[1 - 36 #^2 + 144 #^4& , 2, 0], 
            Rational[1, 4] (-3 - 5^Rational[1, 2]), 
            Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
             Rational[1, 2]}, {
           Root[1 - 36 #^2 + 144 #^4& , 2, 0], 
            Rational[1, 4] (3 + 5^Rational[1, 2]), 
            Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
             Rational[1, 2]}}, {{0, 0, 1.4012585384440737`}, {
           0, 0, -1.4012585384440737`}, {
           0.17841104488654497`, -1.3090169943749475`, 
           0.46708617948135783`}, {0.17841104488654497`, 1.3090169943749475`, 
           0.46708617948135783`}, {
           0.46708617948135783`, -0.8090169943749475, -1.0444364486709836`}, {
           0.46708617948135783`, 0.8090169943749475, -1.0444364486709836`}, {
           1.0444364486709836`, -0.8090169943749475, 0.46708617948135783`}, {
           1.0444364486709836`, 0.8090169943749475, 
           0.46708617948135783`}, {-1.2228474935575286`, -0.5, 
           0.46708617948135783`}, {-1.2228474935575286`, 0.5, 
           0.46708617948135783`}, {
           1.2228474935575286`, -0.5, -0.46708617948135783`}, {
           1.2228474935575286`, 
           0.5, -0.46708617948135783`}, {-0.9341723589627157, 
            0, -1.0444364486709836`}, {-0.46708617948135783`, \
-0.8090169943749475, 1.0444364486709836`}, {-0.46708617948135783`, 
           0.8090169943749475, 1.0444364486709836`}, {
           0.9341723589627157, 0, 
            1.0444364486709836`}, {-1.0444364486709836`, -0.8090169943749475, \
-0.46708617948135783`}, {-1.0444364486709836`, 
           0.8090169943749475, -0.46708617948135783`}, \
{-0.17841104488654494`, -1.3090169943749475`, -0.46708617948135783`}, \
{-0.17841104488654494`, 1.3090169943749475`, -0.46708617948135783`}}], 
         Polygon3DBox[{{15, 10, 9, 14, 1}, {2, 6, 12, 11, 5}, {5, 11, 7, 3, 
          19}, {11, 12, 8, 16, 7}, {12, 6, 20, 4, 8}, {6, 2, 13, 18, 20}, {2, 
          5, 19, 17, 13}, {4, 20, 18, 10, 15}, {18, 13, 17, 9, 10}, {17, 19, 
          3, 14, 9}, {3, 7, 16, 1, 14}, {16, 8, 4, 15, 1}}]],
        Boxed->False,
        ImageSize->30,
        ImageCache->GraphicsData["CompressedBitmap", "\<\
eJytlu9PW1UYx+/arqVdaQsUZUuRbmQ/aB3t5EcFQmGIlA4YiCJzGUjlx0Dt
QCASFUyNaEhMVkN8syWAezNfbI43e4NmI/HFFhMjJibGmChvjO8Mf4F5PN/n
ntudyyQSY5N7z72993zO9/me5zn3dKVmx0fTqdmJ4VQwMZ2aGp8Yngm2TU6L
v6wHNE07LY7qoIZrEpfydJrETzz8X5onuLHSzs4Ora+v851ff1TETR4/2tzc
pJ6eHgqfrKVoxXPkcRfR1NQUbW9vF+pvF3BzkN/OZDIUq62j2kgnvdI5L/Dp
wWuajXrbZqiivI5Ja2trPr2nV/bEGENDQzxGY83LNHYhqzlkz1d7P2ZaNBpF
T4/eM58bGwtXxsuXnQBRhB7SO7llxBiuxF8MQUI8elhZXDAY5Ddc+uuHpDoB
oGeC5TQXayGH3QVFmk928xeW0uBkBnEZ3fTGzna80J6kTEMbLTV1UFVJALq8
3PMgdZydoLLjYfriwe9MEJFoTjNhfGSExiLPcm8cUoBOsNOx0ii9ODzNBBz1
Z5PQmqdDnDLYbDZLneUhAMSdfj7mK6LWhiHmuGUk8LmgsIRWvvpJs4An/hPX
1NzczCSHjs2TWBjfET7DQJvEDoSr2XUVi4lJ9o9IoH6eWVrJZZzdjFUMEx7p
2II8J+aWgS6JFRnCQy3d2BDv6djW8/1suj5rJiymT7qYw7aWHSejsiw4W2Gu
DVgL5lXch87UGe6KIB8Xv2uUkP/Jx0aB1XdWr9Fff/wmRhFnK/358w82+vXb
b8TT77++y09dbo9w4tEAItHVARxKqSKN1AGQFD6PB1RhOoaxUrA0QMtfPjTp
Xvjs1l5YJHhD4KgJi5Tpbn+egQZ2cjTFqbobixTbJ1a1w8DivjqeMGHFvO6F
3dra4rlTM+9KVWPOhHyJFdc8v0jofWCxKBh1YlNSBEED6JHYproYjc9fNSU0
vMbKtwe272TEhD3s9uRMMLBXP1igpnN9+8ViJlFualUbJgDoVUwQyWXCoqqx
MO4Tq5rg+4cEs/wb1sZThqlAgQgzLEph3799UyE71BzjA/mF9UOQzWuFna09
4nVSTVkR05FbkXCoUJLgcPHhAC+RWGjxCj4iIi0NklOSoK83dop+nO+kxa4I
U4UQQxNMhK7SI34aG2inD+cu0ZX06yhHY1l0yTUSFdqfiNOD2QTTLtUehSYU
ukxMO4dcGTrBqF8eXqfFd1+j1ZXrTvUjZaeL3Um6NRpnClpoen9m0rVL09On
yujz5bcY9M70MEIxPkT5UtPC3CxHBRJ0dVcGWBOWIIfEQdNTgRIODaj1tfdo
4OJLHKL8enokDjnS11RFG2+25AyDtyKDxVQ/UofVo76mgu7d/oi+28jS2+kL
qD0pS9O3AF4uR7hkqMNsSnWA0eqnn+SUGRjhFiuTmwF9A+Jm89OXR3LBzrWF
uSBQslCCoJYXx+h81zlkgdyEGJsdJEEiVslmT8RPULKlinu8cXkQz+Rmp1im
NGTXRyoo3liPz4HcOP3XvZh24G8tj3l5\
\>"]], ",", 
       Graphics3DBox[
        GraphicsComplex3DBox[
         NCache[{{0, 0, (-5) (50 - 10 5^Rational[1, 2])^Rational[-1, 2]}, {
           0, 0, 5 (50 - 10 5^Rational[1, 2])^
             Rational[-1, 2]}, {-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
            0, -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(2/(5 - 5^
             Rational[1, 2]))^Rational[1, 2], 0, (10 - 2 5^Rational[1, 2])^
            Rational[-1, 2]}, {(
             Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
             5^Rational[1, 2]), 
            Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
             Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
             5^Rational[1, 2]), Rational[
            1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
             Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
             5^Rational[1, 2]), Rational[-1, 2], (10 - 2 5^Rational[1, 2])^
            Rational[-1, 2]}, {(
             Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
             5^Rational[1, 2]), Rational[1, 2], (10 - 2 5^Rational[1, 2])^
            Rational[-1, 2]}, {(
             Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 + 
             5^Rational[1, 2]), 
            Rational[-1, 
              2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
             Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
             Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 + 
             5^Rational[1, 2]), 
            Rational[
             1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
             Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
             Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 + 
             5^Rational[1, 2]), 
            Rational[-1, 
              2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
             Rational[1, 2], (10 - 2 5^Rational[1, 2])^
            Rational[-1, 2]}, {(
             Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 + 
             5^Rational[1, 2]), 
            Rational[
             1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
             Rational[1, 2], (10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
           0, 0, -0.9510565162951536}, {
           0, 0, 0.9510565162951536}, {-0.85065080835204, 
            0, -0.42532540417601994`}, {
           0.85065080835204, 0, 0.42532540417601994`}, {
           0.6881909602355868, -0.5, -0.42532540417601994`}, {
           0.6881909602355868, 
           0.5, -0.42532540417601994`}, {-0.6881909602355868, -0.5, 
           0.42532540417601994`}, {-0.6881909602355868, 0.5, 
           0.42532540417601994`}, {-0.2628655560595668, -0.8090169943749475, \
-0.42532540417601994`}, {-0.2628655560595668, 
           0.8090169943749475, -0.42532540417601994`}, {
           0.2628655560595668, -0.8090169943749475, 0.42532540417601994`}, {
           0.2628655560595668, 0.8090169943749475, 0.42532540417601994`}}], 
         Polygon3DBox[{{2, 12, 8}, {2, 8, 7}, {2, 7, 11}, {2, 11, 4}, {2, 4, 
          12}, {5, 9, 1}, {6, 5, 1}, {10, 6, 1}, {3, 10, 1}, {9, 3, 1}, {12, 
          10, 8}, {8, 3, 7}, {7, 9, 11}, {11, 5, 4}, {4, 6, 12}, {5, 11, 9}, {
          6, 4, 5}, {10, 12, 6}, {3, 8, 10}, {9, 7, 3}}]],
        Boxed->False,
        ImageSize->30,
        ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy1ll1Mm2UUx9/Rt9+FFhjrxgqUMcZm11JdBQaWMMZXM1rQTZkDXetSKSja
MYRhcCvEGTcwaLZsXBjJJOrFyIhLNMYlohczURO5UBNjolxoTEw0JHrl1fGc
8zwvvgXujE36PO/H8/7OOf//eT+iiZFUcigxMnAm4W0fTqRTA2fOedueH8ZD
hm2KovjxH/IqtA24KQc/4A9P/g+TmycLrK2twerqKiwvL8P8/DxkMhmIx+OQ
TqfpXJ5Y7eTJvuVqWlkTqoNDgToIVtWB31sH9Qc6lByI1cYVAxQXeKHIXQLd
3d2KxNl5sjGKEG0tHRA+3AT37QlC1e4ghPY2wZFAN5xoSEFvU9oEqUhGMTL5
2MNJuHn7e9IHlpaWlFw90cA0q2qE9gdOKg6+zEzJgLfCx5ctfvwrNLU9Bu5d
uyk6rtFdrkJHSyucrTkKJqOFgtuYYOBcPJ5KImBZyMBjRHMX74Ha+maNYuPJ
xCr5iophuvkRSN0fhlyrCxIt5y2SRlXlu3bAzI27GFLQKKfj8QskpkxmnYZV
Qmv5AabRP1YZIE3NkoZg2FlUCqOZt1AioqlEBn+olYlolU0PFBpRWgjDamg0
QGhXGXjd+5mp6sh0LDEwiSoKMuk4+OJNqGmIUJnWbDLJJ9PEPTFWuLazfoIp
RvKYjCSmRn5m5HXO+ezUIpxO9EuyVZJ1kuJaQZ5qjEKxw8le50gyeU1aklNW
SS7x7uece1NXSExLNlknL+pHo4nJ1EXklK57bLpUW2L9MD79EURPJDcA9fKa
ZMJaT5Ht1xe+sDPIyD1E2RGIgNSR5myaXlKRnoXTC5fs5XvAW1bKc019BxlF
dK1uUriz5xz/V1ZWJNiyhaIC7OC08y026O9sgqtDfdAd6wT4+0+Yf/MGxJ/o
FQFRCyJPTi+aZCAqw5nv5nbbHEgvsGgK83oFB8s98Pb5JPx++yr8uHAFXC4n
8jAkrlm69S5kJsYhWO3PqpCsNehuG2oabHJlQ9jNXa7yvrewkOvDcDkUF5dS
ZIqw9tvP6BhFt9E2l00S0Dlf4LBWNtdrsdqpsqygZr1bG2tEkUU02l/58h7H
sfJo2lSr3ZFHz1dJN0v6xucKlXLpqeOUPzIEnUqbnXmVuQ4eDUwmKnqjZCGN
bA4lSfc/Jfbpa2NYjECN9kT4UoLYJSo9NAjhhkMQi0Zk0RKlwuzsLDjtVi0j
q6SQvbKPZLlGFpf6aTD1OMxdu0ilZtMMlCvTsA3RjX99wg5hiEUqRyjCE+qX
nz6BvlNdpJNF74vKNJfLxSV+PTep5UYBCCBQYlz94Vvoikbg8qVh+OuPr+C7
lTtw8cJE1vNIZSuCwSAUO60kuSZZg68Slu9+IMsUkpHX1QEfFYqNiEg8Nj6a
5HeoeAdnvYJOdUWgK+DhVLH4rXxVJZkilZV64L2FGdwTZDQG5E8jO6TXL42N
wBuPhph+8kgtCYEogSfTNJcMcqRw4YceJAXW8RiKX/xElJLkSjzdcC9Hq+FW
spFlQSReIPDvTz3HTyoC5+jwgYP7GK9KvHRPjxefDHks10DjPvhmohPG2nxa
t+ofHfysIj+1LsWGEIqr3Bsf3plj5bFT7frvmgLuj9bqCvh8pJ3zb67ayYoT
vGRHAXuo77J7n73DDRI9dhROP9nHkmDe8jvAJVOmSkiV/p4Y9NWUM9VTmMdE
SpdSvPzKCzD07NO8jrLAa0RSynbd+5/uLfx+4i8zGatQrPqPn4HKtn8AbKa6
Kg==\
\>"]], ",", 
       Graphics3DBox[
        GraphicsComplex3DBox[
         NCache[{{Rational[-1, 2], Rational[-1, 2], 0}, {
           Rational[-1, 2], Rational[1, 2], 0}, {0, 0, -2^Rational[-1, 2]}, {
           0, 0, 2^Rational[-1, 2]}, {Rational[1, 2], Rational[-1, 2], 0}, {
           Rational[1, 2], Rational[1, 2], 0}}, {{-0.5, -0.5, 0}, {-0.5, 0.5, 
            0}, {0, 0, -0.7071067811865475}, {0, 0, 0.7071067811865475}, {
           0.5, -0.5, 0}, {0.5, 0.5, 0}}], 
         Polygon3DBox[{{4, 5, 6}, {4, 6, 2}, {4, 2, 1}, {4, 1, 5}, {5, 1, 
          3}, {5, 3, 6}, {3, 1, 2}, {6, 3, 2}}]],
        Boxed->False,
        ImageSize->30,
        ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy1lk1IVFEUx5/zZt58f6iTlmUzEEhWo9JQpDWjFFiBppUIkYIWSZ80qRRY
kItaRMRAqz4WLmpREbiM2riqaOWiWrSSFkE7Ny3ane7/3HOfV3MXDby5b2be
/zfn/s/He/3j0+fPXRmfvnB2PH94crxy/sLZqXzv1Un1lVvjOE5BHV15B+ek
TuWtQOqlfvx/SwMvLi0uLtLCwgJ/yuqf9BLmn4ZPDlFn8zZ9FNqpUqnge6dO
X6qXIC0vL9P1qSk6WijSWEeXSxPFshPC6SqlusxJa2XGUs7NzfElJ1t3h1jp
sbKvpY1a6hvJc4OUyWRoaWkppcVpCR6BHy11U++2nY5WRlhVaNjMqj2trXTx
+AkaPXyEevv6qaenRwhJ+XvF5MARpR+4x5DiphzVxxK0PZdjyOs7dwP05dlz
pTpYLNLTF6/4GBsb0zAnvsaMUstOMAPCPFXY6zOTsZhhhpgZoqZslt5//Ubf
f/3mWOfn552EBsd4ifN2xScwfXtBzCZTNFAqgUgfHz9R/wdsmD9v2ZpjLI7P
P37SrrZ2bFwCVp5hiTH+UOd+uMlorJuSaUbDyYeVa0BHmezSnYkJDlRRnQC/
u/TmwyfK5/MCZLrHS9R35VBrO5ORWUO+MTLCQScEjXxVZm4JVL8/ePSUBgcH
hcboIC8RH93csNEvGIN9W62mhWqyBl5QqOK0gJjq8uKxHdgL+tGqgTqhIYWS
L59mzEWHCC0gRQEaSELJCgXp2dHWxnpPKC/fvPNNDNsxuShg9h1ig8Auh06P
sjgsiDOXLvtmeasRMKujowMYH4HCuX3vPosjgthXKnNjQhWy/V5BqIJw6gWB
8jXmRiw7Uuk02yGI0BrE3MxNp1YQqgLYIiVTxfO3F0G7oFxuXYwFIDKCUOe+
nXHLC/imVYwIW4jmpiZkwUlbdkICccLyolqtsipgN42enygFIFJWoaFcbQTs
VaPCRkStKWYQSctOU10xqTHYaTaj/HPt4aApUKGP4kJRxc8JWKHopAyPjGI/
JilxC4FKByImCDQ9tg9x1EoKyhwjSqorIQhUDBAQm0GBkjeORiw7jg0M8BgK
2yPZZaPRvRBH1mldz7IDdS83Fum3lFDwraGE1zE1ZE2srjKXuplY5u6CdBlE
yOpXGac+AnaUu7vtkZqxEGgufdv4e266a1KL69VeZO7XCgWdjJGo9Ssta0Zk
YJ3Uyn2uzhocqGyIA2KKZSofsOJAuZvTKnfpepnkMjAg5MMafn4qVdwZWxW1
R40/6MxOZ2dn+XFA71GeOTxfgthQdkf6jyEeTXQ2yBwwV+FQrstzS6M1W+Ql
ofzrw5JT8wc4ZoUg\
\>"]]}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.676910917784532*^9, 3.676910929123464*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
     AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
       Graphics3DBox[{
         Polygon3DBox[
          NCache[{{
            Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2], 
             Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[5, 8] + 
              Rational[5, 24] 5^Rational[1, 2])^
             Rational[
              1, 2]}, {-(Rational[3, 4] + Rational[1, 3] 5^Rational[1, 2])^
              Rational[1, 2], Rational[
             1, 2], (Rational[1, 8] + Rational[1, 24] 5^Rational[1, 2])^
             Rational[
              1, 2]}, {-(Rational[3, 4] + Rational[1, 3] 5^Rational[1, 2])^
              Rational[1, 2], 
             Rational[-1, 2], (Rational[1, 8] + 
              Rational[1, 24] 5^Rational[1, 2])^Rational[1, 2]}, {
            Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2], 
             Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[5, 8] + 
              Rational[5, 24] 5^Rational[1, 2])^Rational[1, 2]}, {
            0, 0, (Rational[9, 8] + Rational[3, 8] 5^Rational[1, 2])^
             Rational[1, 2]}}, {{-0.46708617948135783`, 0.8090169943749475, 
            1.0444364486709836`}, {-1.2228474935575286`, 0.5, 
            0.46708617948135783`}, {-1.2228474935575286`, -0.5, 
            0.46708617948135783`}, {-0.46708617948135783`, \
-0.8090169943749475, 1.0444364486709836`}, {0, 0, 1.4012585384440737`}}]], 
         Polygon3DBox[
          NCache[{{
            0, 0, Rational[-1, 2] (Rational[3, 2] (3 + 5^Rational[1, 2]))^
              Rational[1, 2]}, {(Rational[1, 8] + 
              Rational[1, 24] 5^Rational[1, 2])^Rational[1, 2], 
             Rational[1, 4] (1 + 5^Rational[1, 2]), 
             Rational[-1, 2] (Rational[5, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2]}, {(Rational[3, 4] + 
              Rational[1, 3] 5^Rational[1, 2])^Rational[1, 2], Rational[1, 2],
              Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2]}, {(Rational[3, 4] + 
              Rational[1, 3] 5^Rational[1, 2])^Rational[1, 2], 
             Rational[-1, 2], 
             Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2]}, {(Rational[1, 8] + 
              Rational[1, 24] 5^Rational[1, 2])^Rational[1, 2], 
             Rational[1, 4] (-1 - 5^Rational[1, 2]), 
             Rational[-1, 2] (Rational[5, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2]}}, {{0, 0, -1.4012585384440737`}, {
            0.46708617948135783`, 0.8090169943749475, -1.0444364486709836`}, {
            1.2228474935575286`, 0.5, -0.46708617948135783`}, {
            1.2228474935575286`, -0.5, -0.46708617948135783`}, {
            0.46708617948135783`, -0.8090169943749475, \
-1.0444364486709836`}}]], 
         Polygon3DBox[
          NCache[{{(Rational[1, 8] + Rational[1, 24] 5^Rational[1, 2])^
             Rational[1, 2], Rational[1, 4] (-1 - 5^Rational[1, 2]), 
             Rational[-1, 2] (Rational[5, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2]}, {(Rational[3, 4] + 
              Rational[1, 3] 5^Rational[1, 2])^Rational[1, 2], 
             Rational[-1, 2], 
             Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2]}, {(Rational[5, 8] + 
              Rational[5, 24] 5^Rational[1, 2])^Rational[1, 2], 
             Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[1, 8] + 
              Rational[1, 24] 5^Rational[1, 2])^
             Rational[1, 2]}, {(Rational[1, 8] + 
              Rational[-1, 24] 5^Rational[1, 2])^Rational[1, 2], 
             Rational[1, 4] (-3 - 5^Rational[1, 2]), (Rational[1, 8] + 
              Rational[1, 24] 5^Rational[1, 2])^Rational[1, 2]}, {
            Root[1 - 36 #^2 + 144 #^4& , 2, 0], 
             Rational[1, 4] (-3 - 5^Rational[1, 2]), 
             Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2]}}, {{
           0.46708617948135783`, -0.8090169943749475, -1.0444364486709836`}, {
           1.2228474935575286`, -0.5, -0.46708617948135783`}, {
           1.0444364486709836`, -0.8090169943749475, 0.46708617948135783`}, {
           0.17841104488654497`, -1.3090169943749475`, 
           0.46708617948135783`}, {-0.17841104488654497`, \
-1.3090169943749475`, -0.46708617948135783`}}]], 
         Polygon3DBox[
          NCache[{{(Rational[3, 4] + Rational[1, 3] 5^Rational[1, 2])^
             Rational[1, 2], Rational[-1, 2], 
             Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2]}, {(Rational[3, 4] + 
              Rational[1, 3] 5^Rational[1, 2])^Rational[1, 2], Rational[1, 2],
              Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2]}, {(Rational[5, 8] + 
              Rational[5, 24] 5^Rational[1, 2])^Rational[1, 2], 
             Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[1, 8] + 
              Rational[1, 24] 5^Rational[1, 2])^
             Rational[1, 2]}, {(Rational[1, 6] (3 + 5^Rational[1, 2]))^
             Rational[1, 2], 
             0, (Rational[5, 8] + Rational[5, 24] 5^Rational[1, 2])^
             Rational[1, 2]}, {(Rational[5, 8] + 
              Rational[5, 24] 5^Rational[1, 2])^Rational[1, 2], 
             Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[1, 8] + 
              Rational[1, 24] 5^Rational[1, 2])^Rational[1, 2]}}, {{
            1.2228474935575286`, -0.5, -0.46708617948135783`}, {
            1.2228474935575286`, 0.5, -0.46708617948135783`}, {
            1.0444364486709836`, 0.8090169943749475, 0.46708617948135783`}, {
            0.9341723589627157, 0, 1.0444364486709836`}, {
            1.0444364486709836`, -0.8090169943749475, 
            0.46708617948135783`}}]], 
         Polygon3DBox[
          NCache[{{(Rational[3, 4] + Rational[1, 3] 5^Rational[1, 2])^
             Rational[1, 2], Rational[1, 2], 
             Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2]}, {(Rational[1, 8] + 
              Rational[1, 24] 5^Rational[1, 2])^Rational[1, 2], 
             Rational[1, 4] (1 + 5^Rational[1, 2]), 
             Rational[-1, 2] (Rational[5, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2]}, {
            Root[1 - 36 #^2 + 144 #^4& , 2, 0], 
             Rational[1, 4] (3 + 5^Rational[1, 2]), 
             Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2]}, {(Rational[1, 8] + 
              Rational[-1, 24] 5^Rational[1, 2])^Rational[1, 2], 
             Rational[1, 4] (3 + 5^Rational[1, 2]), (Rational[1, 8] + 
              Rational[1, 24] 5^Rational[1, 2])^
             Rational[1, 2]}, {(Rational[5, 8] + 
              Rational[5, 24] 5^Rational[1, 2])^Rational[1, 2], 
             Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[1, 8] + 
              Rational[1, 24] 5^Rational[1, 2])^Rational[1, 2]}}, {{
           1.2228474935575286`, 0.5, -0.46708617948135783`}, {
           0.46708617948135783`, 
           0.8090169943749475, -1.0444364486709836`}, {-0.17841104488654497`, 
           1.3090169943749475`, -0.46708617948135783`}, {0.17841104488654497`,
            1.3090169943749475`, 0.46708617948135783`}, {1.0444364486709836`, 
           0.8090169943749475, 0.46708617948135783`}}]], 
         Polygon3DBox[
          NCache[{{(Rational[1, 8] + Rational[1, 24] 5^Rational[1, 2])^
             Rational[1, 2], Rational[1, 4] (1 + 5^Rational[1, 2]), 
             Rational[-1, 2] (Rational[5, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2]}, {
            0, 0, Rational[-1, 2] (Rational[3, 2] (3 + 5^Rational[1, 2]))^
              Rational[1, 2]}, {-(Rational[1, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2], 0, 
             Rational[-1, 2] (Rational[5, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2]}, {
            Rational[-1, 2] (Rational[5, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2], Rational[1, 4] (1 + 5^Rational[1, 2]), 
             Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2]}, {
            Root[1 - 36 #^2 + 144 #^4& , 2, 0], 
             Rational[1, 4] (3 + 5^Rational[1, 2]), 
             Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2]}}, {{0.46708617948135783`, 
            0.8090169943749475, -1.0444364486709836`}, {
            0, 0, -1.4012585384440737`}, {-0.9341723589627157, 
             0, -1.0444364486709836`}, {-1.0444364486709836`, 
            0.8090169943749475, -0.46708617948135783`}, \
{-0.17841104488654497`, 1.3090169943749475`, -0.46708617948135783`}}]], 
         Polygon3DBox[
          NCache[{{
            0, 0, Rational[-1, 2] (Rational[3, 2] (3 + 5^Rational[1, 2]))^
              Rational[1, 2]}, {(Rational[1, 8] + 
              Rational[1, 24] 5^Rational[1, 2])^Rational[1, 2], 
             Rational[1, 4] (-1 - 5^Rational[1, 2]), 
             Rational[-1, 2] (Rational[5, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2]}, {
            Root[1 - 36 #^2 + 144 #^4& , 2, 0], 
             Rational[1, 4] (-3 - 5^Rational[1, 2]), 
             Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2]}, {
            Rational[-1, 2] (Rational[5, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2], Rational[1, 4] (-1 - 5^Rational[1, 2]), 
             Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2]}, {-(Rational[1, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2], 0, 
             Rational[-1, 2] (Rational[5, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2]}}, {{0, 0, -1.4012585384440737`}, {
            0.46708617948135783`, -0.8090169943749475, -1.0444364486709836`}, \
{-0.17841104488654497`, -1.3090169943749475`, -0.46708617948135783`}, \
{-1.0444364486709836`, -0.8090169943749475, -0.46708617948135783`}, \
{-0.9341723589627157, 0, -1.0444364486709836`}}]], 
         Polygon3DBox[
          NCache[{{(Rational[1, 8] + Rational[-1, 24] 5^Rational[1, 2])^
             Rational[1, 2], 
             Rational[1, 4] (3 + 5^Rational[1, 2]), (Rational[1, 8] + 
              Rational[1, 24] 5^Rational[1, 2])^Rational[1, 2]}, {
            Root[1 - 36 #^2 + 144 #^4& , 2, 0], 
             Rational[1, 4] (3 + 5^Rational[1, 2]), 
             Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2]}, {
            Rational[-1, 2] (Rational[5, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2], Rational[1, 4] (1 + 5^Rational[1, 2]), 
             Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2]}, {-(Rational[3, 4] + 
               Rational[1, 3] 5^Rational[1, 2])^Rational[1, 2], Rational[
             1, 2], (Rational[1, 8] + Rational[1, 24] 5^Rational[1, 2])^
             Rational[1, 2]}, {
            Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2], 
             Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[5, 8] + 
              Rational[5, 24] 5^Rational[1, 2])^Rational[1, 2]}}, {{
           0.17841104488654497`, 1.3090169943749475`, 
           0.46708617948135783`}, {-0.17841104488654497`, 
           1.3090169943749475`, -0.46708617948135783`}, {-1.0444364486709836`,
            0.8090169943749475, -0.46708617948135783`}, {-1.2228474935575286`,
            0.5, 0.46708617948135783`}, {-0.46708617948135783`, 
           0.8090169943749475, 1.0444364486709836`}}]], 
         Polygon3DBox[
          NCache[{{
            Rational[-1, 2] (Rational[5, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2], Rational[1, 4] (1 + 5^Rational[1, 2]), 
             Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2]}, {-(Rational[1, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2], 0, 
             Rational[-1, 2] (Rational[5, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2]}, {
            Rational[-1, 2] (Rational[5, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2], Rational[1, 4] (-1 - 5^Rational[1, 2]), 
             Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2]}, {-(Rational[3, 4] + 
               Rational[1, 3] 5^Rational[1, 2])^Rational[1, 2], 
             Rational[-1, 2], (Rational[1, 8] + 
              Rational[1, 24] 5^Rational[1, 2])^
             Rational[
              1, 2]}, {-(Rational[3, 4] + Rational[1, 3] 5^Rational[1, 2])^
              Rational[1, 2], Rational[
             1, 2], (Rational[1, 8] + Rational[1, 24] 5^Rational[1, 2])^
             Rational[1, 2]}}, {{-1.0444364486709836`, 
            0.8090169943749475, -0.46708617948135783`}, {-0.9341723589627157, 
             0, -1.0444364486709836`}, {-1.0444364486709836`, \
-0.8090169943749475, -0.46708617948135783`}, {-1.2228474935575286`, -0.5, 
            0.46708617948135783`}, {-1.2228474935575286`, 0.5, 
            0.46708617948135783`}}]], 
         Polygon3DBox[
          NCache[{{
            Rational[-1, 2] (Rational[5, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2], Rational[1, 4] (-1 - 5^Rational[1, 2]), 
             Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2]}, {
            Root[1 - 36 #^2 + 144 #^4& , 2, 0], 
             Rational[1, 4] (-3 - 5^Rational[1, 2]), 
             Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2]}, {(Rational[1, 8] + 
              Rational[-1, 24] 5^Rational[1, 2])^Rational[1, 2], 
             Rational[1, 4] (-3 - 5^Rational[1, 2]), (Rational[1, 8] + 
              Rational[1, 24] 5^Rational[1, 2])^Rational[1, 2]}, {
            Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2], 
             Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[5, 8] + 
              Rational[5, 24] 5^Rational[1, 2])^
             Rational[
              1, 2]}, {-(Rational[3, 4] + Rational[1, 3] 5^Rational[1, 2])^
              Rational[1, 2], 
             Rational[-1, 2], (Rational[1, 8] + 
              Rational[1, 24] 5^Rational[1, 2])^
             Rational[
              1, 2]}}, {{-1.0444364486709836`, -0.8090169943749475, \
-0.46708617948135783`}, {-0.17841104488654497`, -1.3090169943749475`, \
-0.46708617948135783`}, {0.17841104488654497`, -1.3090169943749475`, 
           0.46708617948135783`}, {-0.46708617948135783`, -0.8090169943749475,
            1.0444364486709836`}, {-1.2228474935575286`, -0.5, 
           0.46708617948135783`}}]], 
         Polygon3DBox[
          NCache[{{(Rational[1, 8] + Rational[-1, 24] 5^Rational[1, 2])^
             Rational[1, 2], 
             Rational[1, 4] (-3 - 5^Rational[1, 2]), (Rational[1, 8] + 
              Rational[1, 24] 5^Rational[1, 2])^
             Rational[1, 2]}, {(Rational[5, 8] + 
              Rational[5, 24] 5^Rational[1, 2])^Rational[1, 2], 
             Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[1, 8] + 
              Rational[1, 24] 5^Rational[1, 2])^
             Rational[1, 2]}, {(Rational[1, 6] (3 + 5^Rational[1, 2]))^
             Rational[1, 2], 
             0, (Rational[5, 8] + Rational[5, 24] 5^Rational[1, 2])^
             Rational[1, 2]}, {
            0, 0, (Rational[9, 8] + Rational[3, 8] 5^Rational[1, 2])^
             Rational[1, 2]}, {
            Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2], 
             Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[5, 8] + 
              Rational[5, 24] 5^Rational[1, 2])^Rational[1, 2]}}, {{
            0.17841104488654497`, -1.3090169943749475`, 
            0.46708617948135783`}, {1.0444364486709836`, -0.8090169943749475, 
            0.46708617948135783`}, {
            0.9341723589627157, 0, 1.0444364486709836`}, {
            0, 0, 1.4012585384440737`}, {-0.46708617948135783`, \
-0.8090169943749475, 1.0444364486709836`}}]], 
         Polygon3DBox[
          NCache[{{(Rational[1, 6] (3 + 5^Rational[1, 2]))^Rational[1, 2], 
             0, (Rational[5, 8] + Rational[5, 24] 5^Rational[1, 2])^
             Rational[1, 2]}, {(Rational[5, 8] + 
              Rational[5, 24] 5^Rational[1, 2])^Rational[1, 2], 
             Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[1, 8] + 
              Rational[1, 24] 5^Rational[1, 2])^
             Rational[1, 2]}, {(Rational[1, 8] + 
              Rational[-1, 24] 5^Rational[1, 2])^Rational[1, 2], 
             Rational[1, 4] (3 + 5^Rational[1, 2]), (Rational[1, 8] + 
              Rational[1, 24] 5^Rational[1, 2])^Rational[1, 2]}, {
            Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
              Rational[1, 2], 
             Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[5, 8] + 
              Rational[5, 24] 5^Rational[1, 2])^Rational[1, 2]}, {
            0, 0, (Rational[9, 8] + Rational[3, 8] 5^Rational[1, 2])^
             Rational[1, 2]}}, {{
            0.9341723589627157, 0, 1.0444364486709836`}, {1.0444364486709836`,
             0.8090169943749475, 0.46708617948135783`}, {0.17841104488654497`,
             1.3090169943749475`, 
            0.46708617948135783`}, {-0.46708617948135783`, 0.8090169943749475,
             1.0444364486709836`}, {0, 0, 1.4012585384440737`}}]]},
        Boxed->False,
        ImageSize->30], {0., 0.}], {{{1., 1.}}, {{2., 2.}}, {{3., 3.}}, {{4., 
      5.}}, {{5., 8.}}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
     AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
       Graphics3DBox[{
         Polygon3DBox[
          NCache[{{0, 0, 5 (50 - 10 5^Rational[1, 2])^Rational[-1, 2]}, {
            Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
              5^Rational[1, 2]), 
             Rational[
              1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[1, 2], (10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
            Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
              5^Rational[1, 2]), Rational[1, 2], (10 - 2 5^Rational[1, 2])^
             Rational[-1, 2]}}, {{0, 0, 0.9510565162951536}, {
            0.2628655560595668, 0.8090169943749475, 
            0.42532540417601994`}, {-0.6881909602355868, 0.5, 
            0.42532540417601994`}}]], 
         Polygon3DBox[
          NCache[{{0, 0, 5 (50 - 10 5^Rational[1, 2])^Rational[-1, 2]}, {
            Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
              5^Rational[1, 2]), Rational[1, 2], (10 - 2 5^Rational[1, 2])^
             Rational[-1, 2]}, {
            Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
              5^Rational[1, 2]), Rational[-1, 2], (10 - 2 5^Rational[1, 2])^
             Rational[-1, 2]}}, {{
            0, 0, 0.9510565162951536}, {-0.6881909602355868, 0.5, 
            0.42532540417601994`}, {-0.6881909602355868, -0.5, 
            0.42532540417601994`}}]], 
         Polygon3DBox[
          NCache[{{0, 0, 5 (50 - 10 5^Rational[1, 2])^Rational[-1, 2]}, {
            Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
              5^Rational[1, 2]), Rational[-1, 2], (10 - 2 5^Rational[1, 2])^
             Rational[-1, 2]}, {
            Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
              5^Rational[1, 2]), 
             Rational[-1, 
               2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[1, 2], (10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
            0, 0, 0.9510565162951536}, {-0.6881909602355868, -0.5, 
            0.42532540417601994`}, {0.2628655560595668, -0.8090169943749475, 
            0.42532540417601994`}}]], 
         Polygon3DBox[
          NCache[{{0, 0, 5 (50 - 10 5^Rational[1, 2])^Rational[-1, 2]}, {
            Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
              5^Rational[1, 2]), 
             Rational[-1, 
               2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[1, 2], (10 - 2 5^Rational[1, 2])^
             Rational[-1, 2]}, {(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
             0, (10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
            0, 0, 0.9510565162951536}, {
            0.2628655560595668, -0.8090169943749475, 0.42532540417601994`}, {
            0.85065080835204, 0, 0.42532540417601994`}}]], 
         Polygon3DBox[
          NCache[{{
            0, 0, 5 (50 - 10 5^Rational[1, 2])^Rational[-1, 2]}, {(2/(5 - 5^
              Rational[1, 2]))^Rational[1, 2], 0, (10 - 2 5^Rational[1, 2])^
             Rational[-1, 2]}, {
            Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
              5^Rational[1, 2]), 
             Rational[
              1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[1, 2], (10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
            0, 0, 0.9510565162951536}, {
            0.85065080835204, 0, 0.42532540417601994`}, {0.2628655560595668, 
            0.8090169943749475, 0.42532540417601994`}}]], 
         Polygon3DBox[
          NCache[{{
            Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
              5^Rational[1, 2]), 
             Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
            Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
              5^Rational[1, 2]), 
             Rational[-1, 
               2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
            0, 0, (-5) (50 - 10 5^Rational[1, 2])^Rational[-1, 2]}}, {{
            0.6881909602355868, -0.5, -0.42532540417601994`}, \
{-0.2628655560595668, -0.8090169943749475, -0.42532540417601994`}, {
            0, 0, -0.9510565162951536}}]], 
         Polygon3DBox[
          NCache[{{
            Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
              5^Rational[1, 2]), Rational[
             1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
            Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
              5^Rational[1, 2]), 
             Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
            0, 0, (-5) (50 - 10 5^Rational[1, 2])^Rational[-1, 2]}}, {{
            0.6881909602355868, 0.5, -0.42532540417601994`}, {
            0.6881909602355868, -0.5, -0.42532540417601994`}, {
            0, 0, -0.9510565162951536}}]], 
         Polygon3DBox[
          NCache[{{
            Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
              5^Rational[1, 2]), 
             Rational[
              1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
            Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
              5^Rational[1, 2]), Rational[
             1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
            0, 0, (-5) (50 - 10 5^Rational[1, 2])^
              Rational[-1, 2]}}, {{-0.2628655560595668, 
            0.8090169943749475, -0.42532540417601994`}, {0.6881909602355868, 
            0.5, -0.42532540417601994`}, {0, 0, -0.9510565162951536}}]], 
         Polygon3DBox[
          NCache[{{-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
             0, -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
            Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
              5^Rational[1, 2]), 
             Rational[
              1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
            0, 0, (-5) (50 - 10 5^Rational[1, 2])^
              Rational[-1, 2]}}, {{-0.85065080835204, 
             0, -0.42532540417601994`}, {-0.2628655560595668, 
            0.8090169943749475, -0.42532540417601994`}, {
            0, 0, -0.9510565162951536}}]], 
         Polygon3DBox[
          NCache[{{
            Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
              5^Rational[1, 2]), 
             Rational[-1, 
               2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[1, 2], -(10 - 2 5^Rational[1, 2])^
              Rational[-1, 2]}, {-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
             0, -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
            0, 0, (-5) (50 - 10 5^Rational[1, 2])^
              Rational[-1, 
                2]}}, {{-0.2628655560595668, -0.8090169943749475, \
-0.42532540417601994`}, {-0.85065080835204, 0, -0.42532540417601994`}, {
            0, 0, -0.9510565162951536}}]], 
         Polygon3DBox[
          NCache[{{
            Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
              5^Rational[1, 2]), 
             Rational[
              1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[1, 2], (10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
            Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
              5^Rational[1, 2]), 
             Rational[
              1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
            Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
              5^Rational[1, 2]), Rational[1, 2], (10 - 2 5^Rational[1, 2])^
             Rational[-1, 2]}}, {{0.2628655560595668, 0.8090169943749475, 
           0.42532540417601994`}, {-0.2628655560595668, 
           0.8090169943749475, -0.42532540417601994`}, {-0.6881909602355868, 
           0.5, 0.42532540417601994`}}]], 
         Polygon3DBox[
          NCache[{{
            Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
              5^Rational[1, 2]), Rational[1, 2], (10 - 2 5^Rational[1, 2])^
             Rational[-1, 2]}, {-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
             0, -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
            Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
              5^Rational[1, 2]), Rational[-1, 2], (10 - 2 5^Rational[1, 2])^
             Rational[-1, 2]}}, {{-0.6881909602355868, 0.5, 
            0.42532540417601994`}, {-0.85065080835204, 
             0, -0.42532540417601994`}, {-0.6881909602355868, -0.5, 
            0.42532540417601994`}}]], 
         Polygon3DBox[
          NCache[{{
            Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
              5^Rational[1, 2]), Rational[-1, 2], (10 - 2 5^Rational[1, 2])^
             Rational[-1, 2]}, {
            Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
              5^Rational[1, 2]), 
             Rational[-1, 
               2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
            Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
              5^Rational[1, 2]), 
             Rational[-1, 
               2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[1, 2], (10 - 2 5^Rational[1, 2])^
             Rational[-1, 2]}}, {{-0.6881909602355868, -0.5, 
           0.42532540417601994`}, {-0.2628655560595668, -0.8090169943749475, \
-0.42532540417601994`}, {0.2628655560595668, -0.8090169943749475, 
           0.42532540417601994`}}]], 
         Polygon3DBox[
          NCache[{{
            Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
              5^Rational[1, 2]), 
             Rational[-1, 
               2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[1, 2], (10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
            Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
              5^Rational[1, 2]), 
             Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
              2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
             0, (10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
            0.2628655560595668, -0.8090169943749475, 0.42532540417601994`}, {
            0.6881909602355868, -0.5, -0.42532540417601994`}, {
            0.85065080835204, 0, 0.42532540417601994`}}]], 
         Polygon3DBox[
          NCache[{{(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
             0, (10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
            Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
              5^Rational[1, 2]), Rational[
             1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
            Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
              5^Rational[1, 2]), 
             Rational[
              1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[1, 2], (10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
            0.85065080835204, 0, 0.42532540417601994`}, {0.6881909602355868, 
            0.5, -0.42532540417601994`}, {0.2628655560595668, 
            0.8090169943749475, 0.42532540417601994`}}]], 
         Polygon3DBox[
          NCache[{{
            Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
              5^Rational[1, 2]), 
             Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
            Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
              5^Rational[1, 2]), 
             Rational[-1, 
               2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[1, 2], (10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
            Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
              5^Rational[1, 2]), 
             Rational[-1, 
               2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
           0.6881909602355868, -0.5, -0.42532540417601994`}, {
           0.2628655560595668, -0.8090169943749475, 
           0.42532540417601994`}, {-0.2628655560595668, -0.8090169943749475, \
-0.42532540417601994`}}]], 
         Polygon3DBox[
          NCache[{{
            Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
              5^Rational[1, 2]), Rational[
             1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(2/(5 - 5^
              Rational[1, 2]))^Rational[1, 2], 0, (10 - 2 5^Rational[1, 2])^
             Rational[-1, 2]}, {
            Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
              5^Rational[1, 2]), 
             Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
            0.6881909602355868, 0.5, -0.42532540417601994`}, {
            0.85065080835204, 0, 0.42532540417601994`}, {
            0.6881909602355868, -0.5, -0.42532540417601994`}}]], 
         Polygon3DBox[
          NCache[{{
            Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
              5^Rational[1, 2]), 
             Rational[
              1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
            Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
              5^Rational[1, 2]), 
             Rational[
              1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[1, 2], (10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
            Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
              5^Rational[1, 2]), Rational[
             1, 2], -(10 - 2 5^Rational[1, 2])^
              Rational[-1, 2]}}, {{-0.2628655560595668, 
           0.8090169943749475, -0.42532540417601994`}, {0.2628655560595668, 
           0.8090169943749475, 0.42532540417601994`}, {0.6881909602355868, 
           0.5, -0.42532540417601994`}}]], 
         Polygon3DBox[
          NCache[{{-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
             0, -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
            Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
              5^Rational[1, 2]), Rational[1, 2], (10 - 2 5^Rational[1, 2])^
             Rational[-1, 2]}, {
            Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
              5^Rational[1, 2]), 
             Rational[
              1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[1, 2], -(10 - 2 5^Rational[1, 2])^
              Rational[-1, 2]}}, {{-0.85065080835204, 
             0, -0.42532540417601994`}, {-0.6881909602355868, 0.5, 
            0.42532540417601994`}, {-0.2628655560595668, 
            0.8090169943749475, -0.42532540417601994`}}]], 
         Polygon3DBox[
          NCache[{{
            Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (-1 + 
              5^Rational[1, 2]), 
             Rational[-1, 
               2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
            Rational[-1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2] (1 + 
              5^Rational[1, 2]), Rational[-1, 2], (10 - 2 5^Rational[1, 2])^
             Rational[-1, 2]}, {-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
             0, -(10 - 2 5^Rational[1, 2])^
              Rational[-1, 
                2]}}, {{-0.2628655560595668, -0.8090169943749475, \
-0.42532540417601994`}, {-0.6881909602355868, -0.5, 
            0.42532540417601994`}, {-0.85065080835204, 
             0, -0.42532540417601994`}}]]},
        Boxed->False,
        ImageSize->30], {0., 0.}], {{{1., 2.}}, {{2., 3.}}, {{3., 6.}}, {{4., 
      9.}}, {{5., 10.}}}]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
     AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
       Graphics3DBox[{
         Polygon3DBox[
          NCache[{{0, 0, 2^Rational[-1, 2]}, {
            Rational[1, 2], Rational[-1, 2], 0}, {
            Rational[1, 2], Rational[1, 2], 0}}, {{
            0, 0, 0.7071067811865475}, {0.5, -0.5, 0}, {0.5, 0.5, 0}}]], 
         Polygon3DBox[
          NCache[{{0, 0, 2^Rational[-1, 2]}, {
            Rational[1, 2], Rational[1, 2], 0}, {
            Rational[-1, 2], Rational[1, 2], 0}}, {{
            0, 0, 0.7071067811865475}, {0.5, 0.5, 0}, {-0.5, 0.5, 0}}]], 
         Polygon3DBox[
          NCache[{{0, 0, 2^Rational[-1, 2]}, {
            Rational[-1, 2], Rational[1, 2], 0}, {
            Rational[-1, 2], Rational[-1, 2], 0}}, {{
            0, 0, 0.7071067811865475}, {-0.5, 0.5, 0}, {-0.5, -0.5, 0}}]], 
         Polygon3DBox[
          NCache[{{0, 0, 2^Rational[-1, 2]}, {
            Rational[-1, 2], Rational[-1, 2], 0}, {
            Rational[1, 2], Rational[-1, 2], 0}}, {{
            0, 0, 0.7071067811865475}, {-0.5, -0.5, 0}, {0.5, -0.5, 0}}]], 
         Polygon3DBox[
          NCache[{{Rational[1, 2], Rational[-1, 2], 0}, {
            Rational[-1, 2], Rational[-1, 2], 0}, {
            0, 0, -2^Rational[-1, 2]}}, {{0.5, -0.5, 0}, {-0.5, -0.5, 0}, {
            0, 0, -0.7071067811865475}}]], 
         Polygon3DBox[
          NCache[{{Rational[1, 2], Rational[-1, 2], 0}, {
            0, 0, -2^Rational[-1, 2]}, {
            Rational[1, 2], Rational[1, 2], 0}}, {{0.5, -0.5, 0}, {
            0, 0, -0.7071067811865475}, {0.5, 0.5, 0}}]], 
         Polygon3DBox[
          NCache[{{0, 0, -2^Rational[-1, 2]}, {
            Rational[-1, 2], Rational[-1, 2], 0}, {
            Rational[-1, 2], Rational[1, 2], 0}}, {{
            0, 0, -0.7071067811865475}, {-0.5, -0.5, 0}, {-0.5, 0.5, 0}}]], 
         Polygon3DBox[
          NCache[{{Rational[1, 2], Rational[1, 2], 0}, {
            0, 0, -2^Rational[-1, 2]}, {
            Rational[-1, 2], Rational[1, 2], 0}}, {{0.5, 0.5, 0}, {
            0, 0, -0.7071067811865475}, {-0.5, 0.5, 0}}]]},
        Boxed->False,
        ImageSize->30], {0., 0.}], {{{1., 4.}}, {{2., 5.}}, {{3., 7.}}, {{4., 
      10.}}, {{5., 12.}}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.9375000000000001, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1., 5.}, {0, 12.}},
  PlotRangeClipping->False,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.676910902069687*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztyLEJgDAYROGLriGSabSyc4GfICSFKDH7qylEB7B8VzyOb7ISl9VKCubH
bHtM4fDDlm9qndR0kpu96j+lJ+/6mq8AAAAAAAAAAAAAAAAAAAAAwK8gdwHz
1Lwg\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["10", "ii"], "//", "N"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"ii", ",", " ", 
     RowBox[{"-", "24"}], ",", " ", 
     RowBox[{"-", "16"}], ",", " ", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.676911335526751*^9, 3.676911348041542*^9}, {
  3.676911383380831*^9, 3.676911461750231*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.0000000000000001`*^-24", ",", "1.0000000000000001`*^-23", ",", 
   "1.`*^-22", ",", "1.`*^-21", ",", "1.`*^-20", ",", "1.`*^-19", ",", 
   "1.`*^-18", ",", "1.`*^-17", ",", "1.`*^-16"}], "}"}]], "Output",
 CellChangeTimes->{{3.676911453287562*^9, 3.676911462694497*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Publication quality plots in Mathematica according to
http://mathematica.stackexchange.com/questions/47711/preparing-2d-plots-for-\
publication\
\>", "Section",
 CellChangeTimes->{{3.6769119508789167`*^9, 3.676911979575878*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fx", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "x"}], "-", "7"}], "]"}], "+", "1"}], ")"}]}], "+", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"x", "-", "7"}], "]"}], "+", "1"}], ")"}]}], "-", 
   "1"}]}]], "Input",
 CellChangeTimes->{{3.6769116572995863`*^9, 3.6769116573008623`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"blue", "=", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"17.6", "/", "100"}], ",", 
      RowBox[{"41.6", "/", "100"}], ",", 
      RowBox[{"63.1", "/", "100"}]}], "]"}]}], ";", "\n", 
   RowBox[{"u", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"fx", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "15"}], ",", "15"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<fx(x)\>\""}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "0.5", "]"}], ",", "blue"}], 
        "]"}]}]}], "]"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.676911922002873*^9, 3.6769119287377367`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"blue", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     RowBox[{"17.6", "/", "100"}], ",", 
     RowBox[{"41.6", "/", "100"}], ",", 
     RowBox[{"63.1", "/", "100"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"u", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"fx", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "15"}], ",", "15"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<fx(x)\>\""}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"AbsoluteThickness", "[", "1", "]"}], ",", "blue"}], "]"}]}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", "720"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.676911683769161*^9, 3.6769116845262947`*^9}, {
   3.676911898888505*^9, 3.676911899923912*^9}, 3.676912007877239*^9, {
   3.676912053493122*^9, 3.676912079404566*^9}, {3.6769121550457687`*^9, 
   3.6769121608002977`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.17600000000000002`, 0.41600000000000004`, 0.631], 
     AbsoluteThickness[1], Opacity[1.], LineBox[CompressedData["
1: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
w//9vh37/9+3/w8L0Y6G
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"fx(x)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->720,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.676911686408496*^9, 3.6769119015756474`*^9, 3.6769120095343437`*^9, {
   3.6769120692056417`*^9, 3.676912080317803*^9}, 3.676912181045765*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{"u", ",", 
     RowBox[{"AxesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "0.5", "]"}], ",", "6", ",", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}]}], "]"}]}], 
     ",", 
     RowBox[{"ImageSize", "\[Rule]", "120"}]}], "]"}], "\n", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{"$UserDocumentsDirectory", ",", "\"\<u1.pdf\>\""}], "}"}], 
      "]"}], ",", "%"}], "]"}]}], "   ", "*)"}]], "Input",
 CellChangeTimes->{{3.676911786084537*^9, 3.6769117951291037`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", 
  RowBox[{"u", ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"AbsoluteThickness", "[", "1", "]"}], ",", "18", ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}]}], "]"}]}], ",", 
   
   RowBox[{"ImageSize", "\[Rule]", "720"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{"$UserDocumentsDirectory", ",", "\"\<u1.pdf\>\""}], "}"}], 
     "]"}], ",", "%"}], "]"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "18", " ", "pts", " ", "on", " ", "the", " ", "font", " ", "is", " ", 
    "good", " ", "for", " ", "a", " ", "10", 
    "\"\< Image, and the AbsoluteThickness is also in (printers) points. \
\>"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.676911703850871*^9, 3.676911703852096*^9}, {
  3.676911810361671*^9, 3.676911810577601*^9}, {3.6769118516441307`*^9, 
  3.67691185255663*^9}, {3.6769120186599894`*^9, 3.676912044985217*^9}, {
  3.676912090488632*^9, 3.676912097742896*^9}, {3.676912171494542*^9, 
  3.676912175330409*^9}, {3.6769122183599854`*^9, 3.6769122184527693`*^9}, {
  3.676912261329393*^9, 3.6769123236901817`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.17600000000000002`, 0.41600000000000004`, 0.631], 
     AbsoluteThickness[1], Opacity[1.], LineBox[CompressedData["
1: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
w//9vh37/9+3/w8L0Y6G
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"fx(x)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[
    AbsoluteThickness[1], 18, FontFamily -> "Helvetica"],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->720,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.676911812602512*^9, 3.6769118701064453`*^9, 3.676912019861315*^9, 
   3.676912098703291*^9, 3.676912193315988*^9, 3.676912232696493*^9, {
   3.676912263000284*^9, 3.6769122924617157`*^9}}],

Cell[BoxData["\<\"/home/gabella/Documents/u1.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.676911812602512*^9, 3.6769118701064453`*^9, 3.676912019861315*^9, 
   3.676912098703291*^9, 3.676912193315988*^9, 3.676912232696493*^9, {
   3.676912263000284*^9, 3.6769122927138557`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$UserDocumentsDirectory"], "Input"],

Cell[BoxData["\<\"/home/gabella/Documents\"\>"], "Output",
 CellChangeTimes->{{3.6769117090121593`*^9, 3.6769117194866447`*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1631, 752},
WindowMargins->{{Automatic, 279}, {118, Automatic}},
FrontEndVersion->"10.4 for Linux x86 (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info6903673790431-2708481"->{
  Cell[19633, 683, 1803, 30, 93, "Print",
   CellTags->"Info6903673790431-2708481"],
  Cell[21439, 715, 5309, 108, 338, "Print",
   CellTags->"Info6903673790431-2708481"]},
 "Info2553674300843-3994822"->{
  Cell[47987, 1263, 125, 2, 62, "Print",
   CellTags->"Info2553674300843-3994822"]},
 "Info2563674300843-3994822"->{
  Cell[48115, 1267, 126, 2, 62, "Print",
   CellTags->"Info2563674300843-3994822"]},
 "Info3133674901902-6131093"->{
  Cell[629466, 12175, 4518, 69, 341, "Print",
   CellTags->"Info3133674901902-6131093"],
  Cell[633987, 12246, 1338, 35, 114, "Print",
   CellTags->"Info3133674901902-6131093"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info6903673790431-2708481", 743738, 14541},
 {"Info2553674300843-3994822", 743943, 14546},
 {"Info2563674300843-3994822", 744060, 14549},
 {"Info3133674901902-6131093", 744177, 14552}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 96, 1, 45, "Input"],
Cell[679, 25, 735, 19, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1451, 49, 110, 1, 45, "Input"],
Cell[1564, 52, 112, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1713, 59, 360, 7, 45, "Input"],
Cell[2076, 68, 251, 5, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2364, 78, 455, 11, 45, "Input"],
Cell[2822, 91, 118, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2977, 97, 97, 1, 45, "Input"],
Cell[3077, 100, 726, 19, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3840, 124, 143, 3, 45, "Input"],
Cell[3986, 129, 140, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4163, 136, 133, 2, 45, "Input"],
Cell[4299, 140, 655, 13, 34, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4991, 158, 347, 8, 45, "Input"],
Cell[5341, 168, 312, 6, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5690, 179, 316, 9, 45, "Input"],
Cell[6009, 190, 207, 5, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6253, 200, 243, 6, 45, "Input"],
Cell[6499, 208, 193, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6729, 217, 243, 6, 45, "Input"],
Cell[6975, 225, 116, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7128, 231, 174, 3, 45, "Input"],
Cell[7305, 236, 73, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7415, 242, 117, 2, 45, "Input"],
Cell[7535, 246, 94, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7666, 252, 101, 1, 45, "Input"],
Cell[7770, 255, 73, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7880, 261, 121, 2, 45, "Input"],
Cell[8004, 265, 96, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8137, 272, 259, 6, 45, "Input"],
Cell[8399, 280, 93, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8529, 286, 98, 1, 45, "Input"],
Cell[8630, 289, 71, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8738, 295, 118, 2, 45, "Input"],
Cell[8859, 299, 73, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8969, 305, 96, 1, 45, "Input"],
Cell[9068, 308, 74, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9179, 314, 219, 5, 45, "Input"],
Cell[9401, 321, 157, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9595, 330, 370, 10, 45, "Input"],
Cell[9968, 342, 304, 9, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10309, 356, 129, 2, 45, "Input"],
Cell[10441, 360, 631, 18, 88, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11109, 383, 195, 4, 45, "Input"],
Cell[11307, 389, 304, 9, 45, "Output"]
}, Open  ]],
Cell[11626, 401, 94, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[11745, 406, 96, 1, 45, "Input"],
Cell[11844, 409, 125, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12006, 417, 94, 1, 45, "Input"],
Cell[12103, 420, 125, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12265, 428, 96, 1, 45, "Input"],
Cell[12364, 431, 125, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12526, 439, 228, 5, 45, "Input"],
Cell[12757, 446, 478, 10, 34, "Message"],
Cell[13238, 458, 478, 10, 34, "Message"],
Cell[13719, 470, 478, 10, 34, "Message"],
Cell[14200, 482, 582, 12, 34, "Message"],
Cell[14785, 496, 324, 9, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15146, 510, 94, 1, 45, "Input"],
Cell[15243, 513, 149, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15429, 521, 343, 8, 45, "Input"],
Cell[15775, 531, 406, 12, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16218, 548, 229, 6, 45, "Input"],
Cell[16450, 556, 143, 3, 45, "Output"]
}, Open  ]],
Cell[16608, 562, 69, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[16702, 567, 119, 2, 45, "Input"],
Cell[16824, 571, 302, 9, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17163, 585, 95, 1, 45, "Input"],
Cell[17261, 588, 74, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17372, 594, 208, 5, 45, "Input"],
Cell[17583, 601, 302, 9, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17922, 615, 94, 1, 45, "Input"],
Cell[18019, 618, 125, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18181, 626, 125, 2, 45, "Input"],
Cell[18309, 630, 73, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18419, 636, 132, 2, 45, "Input"],
Cell[18554, 640, 382, 12, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18973, 657, 94, 1, 45, "Input"],
Cell[19070, 660, 380, 12, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19487, 677, 121, 2, 45, "Input"],
Cell[CellGroupData[{
Cell[19633, 683, 1803, 30, 93, "Print",
 CellTags->"Info6903673790431-2708481"],
Cell[21439, 715, 5309, 108, 338, "Print",
 CellTags->"Info6903673790431-2708481"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[26797, 829, 334, 9, 45, "Input"],
Cell[27134, 840, 17450, 320, 429, 5921, 129, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44621, 1165, 1342, 32, 336, "Input"],
Cell[45966, 1199, 241, 5, 45, "Output"],
Cell[46210, 1206, 241, 5, 45, "Output"],
Cell[46454, 1213, 228, 5, 45, "Output"],
Cell[46685, 1220, 227, 5, 45, "Output"],
Cell[46915, 1227, 230, 5, 45, "Output"],
Cell[47148, 1234, 225, 5, 45, "Output"],
Cell[47376, 1241, 174, 3, 45, "Output"],
Cell[47553, 1246, 174, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47764, 1254, 198, 5, 75, "Input"],
Cell[CellGroupData[{
Cell[47987, 1263, 125, 2, 62, "Print",
 CellTags->"Info2553674300843-3994822"],
Cell[48115, 1267, 126, 2, 62, "Print",
 CellTags->"Info2563674300843-3994822"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[48290, 1275, 194, 4, 45, "Input"],
Cell[48487, 1281, 76, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48600, 1287, 129, 2, 45, "Input"],
Cell[48732, 1291, 75, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48844, 1297, 178, 4, 45, "Input"],
Cell[49025, 1303, 127, 3, 45, "Output"]
}, Open  ]],
Cell[49167, 1309, 96, 1, 49, "Text"],
Cell[CellGroupData[{
Cell[49288, 1314, 850, 23, 191, "Input"],
Cell[50141, 1339, 173, 4, 45, "Output"],
Cell[50317, 1345, 307, 8, 45, "Output"],
Cell[50627, 1355, 307, 8, 45, "Output"],
Cell[50937, 1365, 189, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51163, 1374, 274, 8, 45, "Input"],
Cell[51440, 1384, 651, 18, 64, "Output"]
}, Open  ]],
Cell[52106, 1405, 131, 1, 49, "Text"],
Cell[CellGroupData[{
Cell[52262, 1410, 798, 21, 191, "Input"],
Cell[53063, 1433, 121, 3, 45, "Output"],
Cell[53187, 1438, 253, 7, 45, "Output"],
Cell[53443, 1447, 253, 7, 45, "Output"],
Cell[53699, 1456, 72, 1, 45, "Output"]
}, Open  ]],
Cell[53786, 1460, 94, 1, 49, "Text"],
Cell[CellGroupData[{
Cell[53905, 1465, 389, 10, 104, "Input"],
Cell[54297, 1477, 87, 2, 45, "Output"],
Cell[54387, 1481, 472, 11, 34, "Message"],
Cell[54862, 1494, 75, 1, 45, "Output"],
Cell[54940, 1497, 470, 11, 34, "Message"],
Cell[55413, 1510, 73, 1, 45, "Output"]
}, Open  ]],
Cell[55501, 1514, 765, 21, 75, "Input"],
Cell[56269, 1537, 177, 4, 45, "Input"],
Cell[CellGroupData[{
Cell[56471, 1545, 797, 18, 104, "Input"],
Cell[57271, 1565, 97731, 2309, 1709, 71430, 1876, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[155017, 3877, 130, 1, 49, "Text"],
Cell[155150, 3880, 397, 11, 50, "Input"],
Cell[CellGroupData[{
Cell[155572, 3895, 505, 13, 79, "Input"],
Cell[156080, 3910, 209, 6, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156326, 3921, 376, 8, 45, "Input"],
Cell[156705, 3931, 5586, 104, 364, "Output"]
}, Open  ]],
Cell[162306, 4038, 119, 1, 49, "Text"],
Cell[CellGroupData[{
Cell[162450, 4043, 402, 9, 52, "Input"],
Cell[162855, 4054, 8002, 144, 354, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170894, 4203, 671, 15, 104, "Input"],
Cell[171568, 4220, 519, 16, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172124, 4241, 884, 20, 73, "Input"],
Cell[173011, 4263, 633, 18, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173681, 4286, 771, 16, 73, "Input"],
Cell[174455, 4304, 290, 9, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174782, 4318, 997, 25, 104, "Input"],
Cell[175782, 4345, 289, 9, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176108, 4359, 225, 5, 45, "Input"],
Cell[176336, 4366, 3696, 73, 357, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180069, 4444, 141, 1, 96, "Section"],
Cell[180213, 4447, 396, 8, 114, "Text"],
Cell[180612, 4457, 328, 9, 45, "Input"],
Cell[CellGroupData[{
Cell[180965, 4470, 261, 7, 45, "Input"],
Cell[181229, 4479, 92631, 1532, 340, 65210, 1081, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[273875, 6014, 136, 1, 49, "Text"],
Cell[274014, 6017, 323, 10, 45, "Input"],
Cell[CellGroupData[{
Cell[274362, 6031, 340, 8, 75, "Input"],
Cell[274705, 6041, 744, 16, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[275486, 6062, 163, 3, 45, "Input"],
Cell[275652, 6067, 66187, 1097, 360, "Output"]
}, Open  ]],
Cell[341854, 7167, 793, 23, 94, "Text"],
Cell[342650, 7192, 658, 19, 45, "Input"],
Cell[CellGroupData[{
Cell[343333, 7215, 324, 8, 45, "Input"],
Cell[343660, 7225, 73357, 1226, 294, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[417054, 8456, 1033, 27, 133, "Input"],
Cell[418090, 8485, 1512, 30, 86, "Output"],
Cell[419605, 8517, 95103, 1571, 356, 79147, 1309, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[514745, 10093, 1099, 27, 162, "Input"],
Cell[515847, 10122, 1367, 28, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[517251, 10155, 1210, 30, 162, "Input"],
Cell[518464, 10187, 95783, 1584, 701, 78264, 1295, "CachedBoxData", \
"BoxData", "Output"],
Cell[614250, 11773, 2290, 50, 351, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[616577, 11828, 332, 8, 75, "Input"],
Cell[616912, 11838, 99, 1, 45, "Output"],
Cell[617014, 11841, 113, 1, 45, "Output"]
}, Open  ]],
Cell[617142, 11845, 162, 3, 49, "Text"],
Cell[CellGroupData[{
Cell[617329, 11852, 326, 9, 45, "Input"],
Cell[617658, 11863, 158, 4, 52, "Output"]
}, Open  ]],
Cell[617831, 11870, 171, 2, 49, "Text"],
Cell[CellGroupData[{
Cell[618027, 11876, 355, 9, 45, "Input"],
Cell[618385, 11887, 196, 5, 45, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[618630, 11898, 107, 1, 96, "Section"],
Cell[618740, 11901, 285, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[619050, 11910, 2852, 76, 492, "Input"],
Cell[621905, 11988, 375, 8, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[622317, 12001, 345, 9, 52, "Input"],
Cell[622665, 12012, 4458, 86, 327, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[627160, 12103, 1109, 33, 111, "Input"],
Cell[628272, 12138, 1019, 26, 219, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[629328, 12169, 113, 2, 45, "Input"],
Cell[CellGroupData[{
Cell[629466, 12175, 4518, 69, 341, "Print",
 CellTags->"Info3133674901902-6131093"],
Cell[633987, 12246, 1338, 35, 114, "Print",
 CellTags->"Info3133674901902-6131093"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[635374, 12287, 249, 6, 45, "Input"],
Cell[635626, 12295, 239, 5, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[635902, 12305, 129, 2, 45, "Input"],
Cell[636034, 12309, 70, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[636141, 12315, 295, 10, 45, "Input"],
Cell[636439, 12327, 854, 25, 256, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[637330, 12357, 551, 14, 45, "Input"],
Cell[637884, 12373, 386, 8, 45, "Output"]
}, Open  ]],
Cell[638285, 12384, 425, 13, 45, "Input"],
Cell[CellGroupData[{
Cell[638735, 12401, 127, 2, 45, "Input"],
Cell[638865, 12405, 341, 11, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[639243, 12421, 588, 17, 104, "Input"],
Cell[639834, 12440, 625, 15, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[640496, 12460, 1562, 43, 249, "Input"],
Cell[642061, 12505, 1015, 26, 75, "Output"],
Cell[643079, 12533, 1073, 32, 75, "Output"],
Cell[644155, 12567, 506, 12, 45, "Output"],
Cell[644664, 12581, 510, 13, 45, "Output"],
Cell[645177, 12596, 343, 7, 45, "Output"],
Cell[645523, 12605, 281, 5, 45, "Output"],
Cell[645807, 12612, 264, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[646108, 12621, 151, 3, 45, "Input"],
Cell[646262, 12626, 113, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[646412, 12632, 124, 2, 45, "Input"],
Cell[646539, 12636, 77, 1, 45, "Output"]
}, Open  ]],
Cell[646631, 12640, 98, 1, 49, "Text"],
Cell[646732, 12643, 767, 26, 104, "Input"],
Cell[CellGroupData[{
Cell[647524, 12673, 294, 6, 75, "Input"],
Cell[647821, 12681, 490, 15, 45, "Output"],
Cell[648314, 12698, 490, 15, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[648841, 12718, 129, 1, 75, "Input"],
Cell[648973, 12721, 489, 15, 45, "Output"],
Cell[649465, 12738, 489, 15, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[649991, 12758, 379, 12, 52, "Input"],
Cell[650373, 12772, 140, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[650550, 12778, 256, 6, 75, "Input"],
Cell[650809, 12786, 150, 3, 45, "Output"],
Cell[650962, 12791, 163, 4, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[651162, 12800, 126, 2, 45, "Input"],
Cell[651291, 12804, 116, 1, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[651444, 12810, 15840, 288, 163, "Input"],
Cell[667287, 13100, 37516, 682, 384, 37288, 676, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[704840, 13787, 383, 10, 52, "Input"],
Cell[705226, 13799, 315, 6, 74, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[705590, 13811, 238, 5, 202, "Section"],
Cell[705831, 13818, 485, 16, 45, "Input"],
Cell[706319, 13836, 918, 25, 104, "Input"],
Cell[CellGroupData[{
Cell[707262, 13865, 1103, 28, 133, "Input"],
Cell[708368, 13895, 16221, 280, 729, "Output"]
}, Open  ]],
Cell[724604, 14178, 693, 18, 75, "Input"],
Cell[CellGroupData[{
Cell[725322, 14200, 1233, 28, 104, "Input"],
Cell[726558, 14230, 16349, 283, 744, "Output"],
Cell[742910, 14515, 278, 4, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[743225, 14524, 49, 0, 45, "Input"],
Cell[743277, 14526, 128, 1, 67, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

