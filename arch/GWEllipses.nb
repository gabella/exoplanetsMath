(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    114678,       2413]
NotebookOptionsPosition[    112218,       2327]
NotebookOutlinePosition[    112557,       2342]
CellTagsIndexPosition[    112514,       2339]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
GWs from elliptical orbits,
Maggiore pages 177+
Peters and Mathews, Phys Rev 131 (435) 1963 and Amaro-Seoane et al. MNRAS 402 \
(2308) 2010.\
\>", "Title",
 CellChangeTimes->{{3.670155587736946*^9, 3.670155611733611*^9}, {
  3.670340491095998*^9, 3.670340574662051*^9}}],

Cell[CellGroupData[{

Cell["Kepler Orbits", "Section",
 CellChangeTimes->{{3.6701556180212917`*^9, 3.67015562313512*^9}, {
  3.6703405931712847`*^9, 3.670340595459056*^9}}],

Cell[TextData[{
 "r is the radial position, a the semi-major axis, b the semi-minor axis, e \
the eccentricity, R related to the orbital angular momentum L relative to the \
mass squared. m = m1+m2, and \[Mu] = m1*m2/(m1+m2)=m1*m2/m, the reduced mass.\
\nL = \[Mu] r^2 d\[Psi]/dt,\nE = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], "\[Mu]", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"dr", "/", "dt"}], ")"}], "2"]}], " ", "+", " ", 
    FractionBox[
     SuperscriptBox["L", "2"], 
     RowBox[{"2", "\[Mu]", " ", 
      SuperscriptBox["r", "2"]}]], "-", 
    FractionBox[
     RowBox[{"G", " ", "\[Mu]", " ", "m"}], "r"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", with E<0 for bound orbits"
}], "Text",
 CellChangeTimes->{{3.670155737592216*^9, 3.670155823016898*^9}, {
  3.670155897177732*^9, 3.670155944114418*^9}, {3.670156089583365*^9, 
  3.6701561569823*^9}, {3.670156240943801*^9, 3.670156342205492*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"bigR", " ", "=", " ", 
  FractionBox[
   RowBox[{"bigL", "^", "2"}], 
   RowBox[{"bigG", " ", "m", " ", 
    RowBox[{"\[Mu]", "^", "2"}]}]]}], "\[IndentingNewLine]", 
 RowBox[{"a", " ", "=", " ", 
  FractionBox["bigR", 
   RowBox[{"1", "-", 
    RowBox[{"e", "^", "2"}]}]]}], "\[IndentingNewLine]", 
 RowBox[{"b", " ", "=", " ", 
  FractionBox["bigR", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"1", "-", 
     RowBox[{"e", "^", "2"}]}], "]"}]]}], "\[IndentingNewLine]", 
 RowBox[{"r", " ", "=", " ", 
  RowBox[{"a", 
   FractionBox[
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"e", "^", "2"}]}], ")"}], 
    RowBox[{"1", "+", 
     RowBox[{"e", " ", 
      RowBox[{"Cos", "[", "\[Psi]", "]"}]}]}]]}]}]}], "Input",
 CellChangeTimes->{{3.6701556407373877`*^9, 3.670155658341394*^9}, {
  3.670155698348441*^9, 3.670155721892502*^9}, {3.670155832657095*^9, 
  3.670155887385852*^9}, {3.670155995843163*^9, 3.670156035678989*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["bigL", "2"], 
  RowBox[{"bigG", " ", "m", " ", 
   SuperscriptBox["\[Mu]", "2"]}]]], "Output",
 CellChangeTimes->{3.6701557285503483`*^9, 3.670173551350091*^9}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["bigL", "2"], 
  RowBox[{"bigG", " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     SuperscriptBox["e", "2"]}], ")"}], " ", "m", " ", 
   SuperscriptBox["\[Mu]", "2"]}]]], "Output",
 CellChangeTimes->{3.6701557285503483`*^9, 3.6701735513507977`*^9}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["bigL", "2"], 
  RowBox[{"bigG", " ", 
   SqrtBox[
    RowBox[{"1", "-", 
     SuperscriptBox["e", "2"]}]], " ", "m", " ", 
   SuperscriptBox["\[Mu]", "2"]}]]], "Output",
 CellChangeTimes->{3.6701557285503483`*^9, 3.670173551351412*^9}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["bigL", "2"], 
  RowBox[{"bigG", " ", "m", " ", 
   SuperscriptBox["\[Mu]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"e", " ", 
      RowBox[{"Cos", "[", "\[Psi]", "]"}]}]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.6701557285503483`*^9, 3.6701735513524647`*^9}]
}, Open  ]],

Cell["The eccentric anomaly.", "Text",
 CellChangeTimes->{{3.670340607653832*^9, 3.670340615335539*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[Beta]", "=", 
  RowBox[{"u", "-", 
   RowBox[{"e", " ", 
    RowBox[{"Sin", "[", "u", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Beta]also", " ", "=", " ", 
  RowBox[{
   SubscriptBox["\[Omega]", "0"], "t"}]}], "\[IndentingNewLine]", 
 RowBox[{"eq1", " ", "=", " ", 
  RowBox[{
   RowBox[{"Cos", "[", "\[Psi]", "]"}], "\[Equal]", 
   FractionBox[
    RowBox[{
     RowBox[{"Cos", "[", "u", "]"}], "-", "e"}], 
    RowBox[{"1", "-", 
     RowBox[{"e", " ", 
      RowBox[{"Cos", "[", "u", "]"}]}]}]]}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Psi]", "=", 
  RowBox[{"2", " ", 
   RowBox[{"ArcTan", "[", " ", 
    RowBox[{
     SqrtBox[
      FractionBox[
       RowBox[{"1", "+", "e"}], 
       RowBox[{"1", "-", "e"}]]], "  ", 
     RowBox[{"Tan", "[", 
      FractionBox["u", "2"], "]"}]}], " ", "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.67034063381639*^9, 3.670340780052643*^9}, {
  3.670340810551279*^9, 3.67034083904637*^9}, {3.670340916011991*^9, 
  3.6703409870549173`*^9}}],

Cell[BoxData[
 RowBox[{"u", "-", 
  RowBox[{"e", " ", 
   RowBox[{"Sin", "[", "u", "]"}]}]}]], "Output",
 CellChangeTimes->{3.670340841959384*^9, 3.6703409889658527`*^9}],

Cell[BoxData[
 RowBox[{"t", " ", 
  SubscriptBox["\[Omega]", "0"]}]], "Output",
 CellChangeTimes->{3.670340841959384*^9, 3.670340988967176*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", "\[Psi]", "]"}], "\[Equal]", 
  FractionBox[
   RowBox[{
    RowBox[{"-", "e"}], "+", 
    RowBox[{"Cos", "[", "u", "]"}]}], 
   RowBox[{"1", "-", 
    RowBox[{"e", " ", 
     RowBox[{"Cos", "[", "u", "]"}]}]}]]}]], "Output",
 CellChangeTimes->{3.670340841959384*^9, 3.6703409889686623`*^9}],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"ArcTan", "[", 
   RowBox[{
    SqrtBox[
     FractionBox[
      RowBox[{"1", "+", "e"}], 
      RowBox[{"1", "-", "e"}]]], " ", 
    RowBox[{"Tan", "[", 
     FractionBox["u", "2"], "]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{3.670340841959384*^9, 3.670340988970294*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "/.", 
   RowBox[{"u", "\[Rule]", "3"}]}], "/.", 
  RowBox[{"e", "\[Rule]", "0.3"}]}]], "Input",
 CellChangeTimes->{{3.670341021610208*^9, 3.6703410540951033`*^9}}],

Cell[BoxData["3.037611903246559`"], "Output",
 CellChangeTimes->{{3.670341027018052*^9, 3.670341055121077*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"\[Psi]", "/.", 
      RowBox[{"e", "\[Rule]", "ecc"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", 
       RowBox[{"-", "5"}], ",", " ", "5"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"ecc", ",", "0.0", ",", "0.9999"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.670341214641665*^9, 3.6703412938688517`*^9}, {
  3.6703419712280703`*^9, 3.670341975100251*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`ecc$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`ecc$$], 0., 0.9999}}, Typeset`size$$ = {
    540., {163., 172.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`ecc$13704$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`ecc$$ = 0.}, 
      "ControllerVariables" :> {
        Hold[$CellContext`ecc$$, $CellContext`ecc$13704$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        ReplaceAll[$CellContext`\[Psi], $CellContext`e -> \
$CellContext`ecc$$], {$CellContext`u, -5, 5}], 
      "Specifications" :> {{$CellContext`ecc$$, 0., 0.9999}}, "Options" :> {},
       "DefaultOptions" :> {}],
     ImageSizeCache->{608., {222., 231.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.670341007984776*^9, 3.670341014834262*^9}, {
   3.670341065346054*^9, 3.6703410802831984`*^9}, 3.6703411513582487`*^9, {
   3.67034118459861*^9, 3.670341205276773*^9}, 3.670341264215868*^9, 
   3.670341296272435*^9, 3.670341975905925*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The GW radiation near periapsis, \[OpenCurlyDoubleQuote]crude approximation,\
\[CloseCurlyDoubleQuote] from Amaro-Seone et al. eqns (4-10).\
\>", "Section",
 CellChangeTimes->{{3.670342693231915*^9, 3.670342734620734*^9}}],

Cell["Some constants.", "Text",
 CellChangeTimes->{{3.669983258121475*^9, 3.66998327150788*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"bigG", " ", "=", " ", 
    RowBox[{"6.67388", " ", 
     RowBox[{"10", "^", 
      RowBox[{"-", "11"}]}]}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"J", " ", 
     RowBox[{"m", "/", 
      RowBox[{"kg", "^", "2"}]}]}], ",", " ", 
    RowBox[{"the", " ", "Gravitational", " ", "constant"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"massSun", " ", "=", " ", 
    RowBox[{"1.99", " ", 
     RowBox[{"10", "^", "30"}]}]}], ";"}], " ", 
  RowBox[{"(*", "kg", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"massJ", " ", "=", " ", 
    RowBox[{"1.9", " ", 
     RowBox[{"10", "^", "27"}]}]}], ";", " ", 
   RowBox[{"(*", " ", "kg", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"massE", " ", "=", " ", 
    RowBox[{"5.97", " ", 
     RowBox[{"10", "^", "24"}]}]}], ";", " ", 
   RowBox[{"(*", " ", "kg", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"massJe", " ", "=", " ", "317.9"}], ";", " ", 
   RowBox[{"(*", " ", 
    RowBox[{"earth", " ", "masses"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"massJs", " ", "=", " ", 
    RowBox[{"massJ", "/", "massSun"}]}], ";", " ", 
   RowBox[{"(*", " ", 
    RowBox[{"relative", " ", "to", " ", "the", " ", 
     RowBox[{"sun", "'"}], "s", " ", "mass"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"pc", " ", "=", " ", 
    RowBox[{"30.86", " ", 
     RowBox[{"10", "^", "15"}]}]}], ";", " ", 
   RowBox[{"(*", " ", 
    RowBox[{"meters", ",", " ", "parsec"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"au", " ", "=", " ", 
    RowBox[{"149.6", " ", 
     RowBox[{"10", "^", "9"}]}]}], ";", " ", 
   RowBox[{"(*", " ", 
    RowBox[{"meters", ",", " ", 
     RowBox[{"astron", " ", "unit"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"cee", " ", "=", " ", "299792458.0"}], ";", " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"meters", "/", "s"}], ",", " ", 
     RowBox[{"speed", " ", "of", " ", "light"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"rscon", " ", "=", " ", "3000.0"}], ";", " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"meters", " ", "per", " ", "solar", " ", "mass"}], ",", " ", 
     RowBox[{"Schwarzschild", " ", "radius"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"rscon", " ", "=", " ", 
    RowBox[{"2", "*", "bigG", "*", 
     RowBox[{"massSun", "/", 
      RowBox[{"cee", "^", "2"}]}]}]}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"solar", " ", "mass", " ", "Scharzschild", " ", "radius"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lunits", " ", "=", 
   RowBox[{"bigG", "*", 
    RowBox[{"massSun", "/", 
     RowBox[{"cee", "^", "2"}]}]}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"meters", " ", "per", " ", "solar", " ", "mass"}], ",", " ", 
    RowBox[{
     RowBox[{"units", " ", "of", " ", "G"}], "=", 
     RowBox[{"c", "=", "1"}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Punits", " ", "=", " ", 
  RowBox[{
   RowBox[{"cee", "^", "5"}], "/", "bigG"}]}]}], "Input",
 CellChangeTimes->{{3.669983273877206*^9, 3.669983275641399*^9}, {
  3.6699833255955687`*^9, 3.669983376655705*^9}, {3.669983423341969*^9, 
  3.6699834397267523`*^9}, {3.66998347043244*^9, 3.6699834875603523`*^9}, {
  3.6699835264239902`*^9, 3.6699835533109303`*^9}, {3.669983656373582*^9, 
  3.6699837965140543`*^9}, {3.670006967994931*^9, 3.6700071179843388`*^9}, {
  3.670344223062683*^9, 3.670344278571412*^9}, {3.670344367848338*^9, 
  3.670344453990531*^9}}],

Cell[BoxData["2955.4257965258585`"], "Output",
 CellChangeTimes->{3.670344246366043*^9, 3.6703444544766006`*^9}],

Cell[BoxData["1477.7128982629292`"], "Output",
 CellChangeTimes->{3.670344246366043*^9, 3.670344454478409*^9}],

Cell[BoxData["3.62848323741395`*^52"], "Output",
 CellChangeTimes->{3.670344246366043*^9, 3.67034445448044*^9}]
}, Open  ]],

Cell[BoxData["massJs"], "Input",
 CellChangeTimes->{{3.6699835596051598`*^9, 3.669983561060351*^9}}],

Cell[BoxData[
 RowBox[{"1", "/", "massJs"}]], "Input",
 CellChangeTimes->{{3.669983564331798*^9, 3.669983565936326*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"chirpM", " ", "=", " ", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     SubscriptBox["M", "1"], 
     RowBox[{"3", "/", "5"}]], 
    SuperscriptBox[
     SubscriptBox["M", "2"], 
     RowBox[{"3", "/", "5"}]]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["M", "1"], "+", 
      SubscriptBox["M", "2"]}], ")"}], 
    RowBox[{"1", "/", "5"}]]]}]], "Input"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SubsuperscriptBox["M", "1", 
    RowBox[{"3", "/", "5"}]], " ", 
   SubsuperscriptBox["M", "2", 
    RowBox[{"3", "/", "5"}]]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["M", "1"], "+", 
     SubscriptBox["M", "2"]}], ")"}], 
   RowBox[{"1", "/", "5"}]]]], "Output",
 CellChangeTimes->{3.670343258622319*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"JJ", "[", 
    RowBox[{"n_", ",", "u_"}], "]"}], ":=", 
   RowBox[{"BesselJ", "[", 
    RowBox[{"n", ",", "u"}], "]"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "[", 
   RowBox[{"n_", ",", "e_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"JJ", "[", 
    RowBox[{
     RowBox[{"n", "-", "2"}], ",", 
     RowBox[{"n", " ", "e"}]}], "]"}], "-", 
   RowBox[{"2", " ", 
    RowBox[{"JJ", "[", 
     RowBox[{"n", ",", 
      RowBox[{"n", " ", "e"}]}], "]"}]}], "+", 
   RowBox[{"JJ", "[", 
    RowBox[{
     RowBox[{"n", "+", "2"}], ",", 
     RowBox[{"n", " ", "e"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "[", 
   RowBox[{"n_", ",", "e_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"JJ", "[", 
    RowBox[{
     RowBox[{"n", "-", "2"}], ",", 
     RowBox[{"n", " ", "e"}]}], "]"}], "-", 
   RowBox[{"2", " ", "e", " ", 
    RowBox[{"JJ", "[", 
     RowBox[{
      RowBox[{"n", "-", "1"}], ",", 
      RowBox[{"n", " ", "e"}]}], "]"}]}], "+", 
   RowBox[{
    FractionBox["2", "n"], " ", 
    RowBox[{"JJ", "[", 
     RowBox[{"n", ",", 
      RowBox[{"n", " ", "e"}]}], "]"}]}], "+", 
   RowBox[{"2", " ", "e", " ", 
    RowBox[{"JJ", "[", 
     RowBox[{
      RowBox[{"n", "+", "1"}], ",", 
      RowBox[{"n", " ", "e"}]}], "]"}]}], "-", 
   RowBox[{"JJ", "[", 
    RowBox[{
     RowBox[{"n", "+", "2"}], ",", 
     RowBox[{"n", " ", "e"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gg", "[", 
   RowBox[{"n_", ",", "e_"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    SuperscriptBox["n", "4"], "32"], 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"B", "[", 
       RowBox[{"n", ",", "e"}], "]"}], "2"], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["e", "2"]}], ")"}], 
      SuperscriptBox[
       RowBox[{"A", "[", 
        RowBox[{"n", ",", "e"}], "]"}], "2"]}], " ", "+", 
     RowBox[{
      FractionBox["4", 
       RowBox[{"3", 
        SuperscriptBox["n", "2"]}]], 
      RowBox[{"JJ", "[", 
       RowBox[{"n", ",", 
        RowBox[{"n", " ", "e"}]}], "]"}]}]}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.6703429072841167`*^9, 3.670342920891037*^9}, 
   3.670343267520208*^9, {3.670343386222659*^9, 3.670343432737492*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gg", "[", 
  RowBox[{"4", ",", "0.3"}], "]"}]], "Input",
 CellChangeTimes->{{3.670343360360188*^9, 3.670343365108391*^9}}],

Cell[BoxData["0.32807887990980505`"], "Output",
 CellChangeTimes->{
  3.670343366038986*^9, {3.670343423412587*^9, 3.670343436684717*^9}}]
}, Open  ]],

Cell["Check versus Peters and Mathews plot Fig. 3.", "Text",
 CellChangeTimes->{{3.67034329090516*^9, 3.670343302197761*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"gg", "[", 
      RowBox[{"n", ",", "0.2"}], "]"}], ",", " ", 
     RowBox[{"gg", "[", 
      RowBox[{"n", ",", "0.5"}], "]"}], ",", " ", 
     RowBox[{"gg", "[", 
      RowBox[{"n", ",", "0.7"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", " ", "1", ",", "24"}], "}"}], ",", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<n\>\"", ",", " ", "\"\<g(n,e)\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Peters&Mathews Fig. 3, check\>\""}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<e=0.2\>\"", ",", " ", "\"\<e=0.5\>\"", ",", " ", "\"\<e=0.7\>\""}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<e=0.2\>\"", ",", " ", "\"\<e=0.5\>\"", ",", " ", "\"\<e=0.7\>\""}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.670343303962801*^9, 3.670343353171623*^9}, {
  3.670343455510159*^9, 3.670343555578609*^9}, {3.67034363123387*^9, 
  3.6703437096767063`*^9}, {3.670343759196829*^9, 3.670343839559901*^9}, {
  3.670343871035305*^9, 3.670343898114874*^9}, {3.670343966511804*^9, 
  3.6703439736800547`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVVnc8198XthPK3ntvPrbwft8jsslOoqwkSVZGXyQrFEkilLJF9l4ZSZJk
lqTsmQopZP38/rqv5/Wc+5znnnvveR1+p2vmF0mIiIjukRIR/X+tYyIKJSJa
RSO0CgZKkRHosR233BzXKqLqiCjFmENRWK7a7NsTq8jh20eF9agA5LJyJrXU
ehVV1Vccua7ni/QUrxs88F1FAtp5aMzAG0kFJ+0FJK4i1FBSd+E/b0TfWVZu
V7KKgsPv/Het2xf9pX7vrNmzitx+L1Fk8wWiMYtlFpGFVcSmt2Tf5hOKXmYc
6aEiW0OXRnoOpq0jUM6MUMgvvjUU0DR71tshBsVIniQMY2uoaegvx0vjBOTh
e2Gm3nYNLTCF/TK8k4RMm4JTngSsIez+6TG/sylIiTRdPzx5DQVGr07ax6ej
/aThMsO+NXTeI+zWRepsND225kT4voa07ykhs8pc9EaAloWZch2pP7uT6xVZ
gBIr9YO/aa6jOwGaRb+zS5DfP1fZV+fXkTvbq9WJ6+Xo7MnI6YL/1hFb7MFt
PalKJDD4Us+7Zh0lz6ucrn1Xgyg4xnesBteRhPCSCV1VHfruuF2q9msd8bbE
e7E8b0DVawrMZOK/0aXIfZL9lhakQ/98KuXxb/TgCOkokforJHG2K/m/ht8o
wWE+uup8J6LNmtF1+PgbMTyxLuuOfo1GCTyl4nQbqEDspOeb6TfI3fTBjeaI
DfTLxalLs70Xxd8LYZx2/4POrZm9+nNlCA0fMz8lfWITCdfKjElc/IpEgmiE
wmw2UQhbfm/y0W8ocLaLZChgE0mcy9F0fvENcTeptwXWbiLmSzLfJ1cmkKub
sHqnwhbKeL97u0lyCtUPTbCzWmwhcSFS6Tv+U4gKpW9d9tlCRtQvfA3bplAZ
M20tbcUWwsW/tEeaTqOtji3COZltJGGUP4o7zyADmSraUuNt1By7cPJP7gx6
nHb1J9HVbSQpFAy+czNI02u6OL94G52OfFlf5zSL4rh7RdbF/qFje59CaU3m
0HhMNPkpvX/I0sZJtCRqDsluwGzqpX8ovPXk2b2mOTTcU5OF5f9D2hfSx8qE
5hF34FOuWMEdNKV6fE5rfh55zZzd+XJyB32oH8uyZVxAHSZMYzJOO4iiYLiV
By0gV+HY1OFnOyh4Zsy7PGkB1Sdq+Yu27aDwq+KCNxsXEPXunuWNiR3EYjDt
sTe5gMoHfRj4eHZRMpXDBI3EIiLBpdd8sF3UxcoY8MxoEVk+X/jw2m4XCSiT
hy9eXUTbN+3ir2TsIpU57UuPXywio+8sHi8bdxF9b8UAdc8iyrQeMKAf20UJ
z4d6lecX0UlpHco6tj1kiXP8esOxhJIfES0cVd1D0/1EGfIKS2ietOm13Zk9
dMYk+ZujwRJSvXY9t8x/D4lx2uA2DkvozphsBEnKHiLIMp5hu76Evp1adrSq
2UNuBznjuTFLiFCRC4XDe2j90ZdHRBlLaPg2+74x4z4Sz0/WkmteQiK/h8af
ye+jcLG74jTvllDg+YSm32b7iP7tnnzH6BLqeauXruO9j/6SaN+2nltC3Eqk
QWmJ+yjoi4N97+oS8nrWcmalbB+l/KLcEdlZQh3Ugcrowz5a2q+uuky2jJgC
5JmTfu6j/740LKTSLCPX6ZXfs8cO0It8V9IaxmW0MXn0qpDkAZKaCvh9kX0Z
RUyIzDvrHSBSNf0iGZ5lxPBN60LOxQPENJ9/lEFgGT0bdxidDj9Apz5T/2MQ
XkYyX0LMBJ4dIEd5FndF0WXU/Dm9x7HlAA35HRgHiS0jg9E6rayxA8R8i+3p
7CH+/HG4eXLzAAlo6J/7P1+9vMWRSEUE1z4+iFQ73L9z+fYnWXYiCMrJ4JM8
1D+5xJz8QZQI/nrLqpoc5o91yzW9pkwEGVafPuYf+utfkD9Ge4oIPIcuUqly
LCO2S+1vSy2IoNzh7jQZ8zK6MH862sSJCOhEfL3oaJdR/sVvJ396EYHdpkWX
PeUy+jHrcRB/kwiYvNk2fxEtI0WXnSbpBCLoldph7tlaOnynsYHvHxPB3T1J
5V+/ltArJzalq8VEECAc4O40v4SopvPXaBqJgNz/V6fI+BIyd1QqfdFNBN5G
GdZoYAlNXjAXXZkjAl/lOLughiUkOjE5c2eDCI7Fflp+9mIJeZ6/9kySlBju
bn2eEXu6hPbs7rJf4SOGuU8uBNfwJcRh20W9bEsMlINGWsuaS8jxs2V37GVi
sK3m1b1MWEKFNjOR4oHE0DvzPdmBZwmpnCHad3tIDE8lFKtfbR3+D0u11YUP
xNBgtXHrRcEiSjApHZ7TJoFN+hjF/1YX0Mh7jftRFiRwItG9buDTAuIyfmcs
7EQC17wpanpfLqBiw8Uul5skMLC0a9t4ZwF16wk0zDSQQBfDDf9G/gVEopXy
ZEqGFDY0ZqLdYB6tCiotq2CkwPo5vf+l4Dz6SjasnGBICkkBDR5TFPOovou+
X82NFHhKqdMf9M6hawbxJMlZpHCC8s7JaavD/mMWeUmHiQy+PjNO6XKcRbUO
PnLF22RwPrN5HHOfRrma9KHElORAS1o0dNNgGt0XKO85w0IOQl6RN9olppHH
7A9nMgVySFgdeqz3fQoJul1OsfcgB98f/KejPaZQ4jWHHdoJclCt8Csq8ZpE
l0NNXvt1UgCvETZGTfMVHV9rEiUZpgDflM0vGu/GUaWzeNy9GQoAnQ/UZXHj
aFeP7HQRyREImZUutaMaRwmMjaMTcAQ+KP9OIjn2BVUWCq8YtByB04rDV8L5
PqN/g7sM/LWUsGemQZcdPYIyT7lfL31NCaotL0b2To8grfpPn9RHKOHNpyeb
Newj6O6TysfWG5TQZaP7SKN0GPG4uYnclT8Kws57X4q+DKGTe0MnNkuPwlmD
LndFvUEUJ1rs8L6ACsh+isi79veh3hl9OrNaKmi44hVrEdaHaJ8ttg53UkFc
PovCNKEPJbOJ8I5PUUEMiWH/1IP36OnRrK/LnNTwGfsXau/Yi6q/p9hSJlID
hSjl4BB7D/pboER1N5MaBMju+WcMvUUnXIYbaEuoYXyq/PtO/Fv0cpyenbWH
GgwC7pZHkr1Fb9/f/SRMRgO4Z+By9tYb9K0s3FIrkAYy5Y7a++2+Rnwe/GRv
omlglj1cwr/1NXIWa6syeEgDe83PbMgjXqPFZ3sM5pU0UFprVtdN/Rr9vh84
4LBCAzcsOSzeC3YiSj9Pk1CHY2BPMt3EdrUDyana6jXoHQdOmt2M1y0vkUT0
m2N+Nsfh9dEs3ht2L5HQsOKQjNtxUL2eTaGx24LYvGjP594+DrO6LeYTeAva
L+j0vdd1HMJSRs0u9TehHlbZpxe1aUFD6bhbhkAD6rz42IXPkhY+zj9tFByo
Ry1VRyW+ONMCmYCZXGpYPSo/PVttGkELRtVC0irTdSjldlqPegctJDtuq/KX
16KKHeIdSj462Pzx5uKQXzUqza63nxelg/ukccAqV42K9K+1vZKlg1tg3Cb8
swrlpo5HhSI6iFC/MZPuXoVSFeroNs7TwZ+ondYyj0oUcsVDZOIJHfBz1Gh8
fVCObjAIxjbn0cGL46KmC+fKkX/D5+9pJXQwsoPzZwqVI68juhWWLXRguKk5
xOxVhpxz+DV6xunASN410OF9CdL/8tGshpMe6Hb8+21fFSG2qoe7VwXpIbWt
o4n5chFajLMsEJGkh6DK69NLtEUoRm1wN1WNHpSueP4bcHiOutPeF9w4Sw/z
Vnv6p2kLkZ5N5x5KpQcSC0qPW4/zEBshonArkx40ld7wBJjnocUjJy0q8ulB
uDqL/ezRPBRT11ooUEsPoa8iAj4F5aJuliYL8hF6kEjKIPe/mIN0Ryqe9zAw
gHRba+nxi1mIpcTLMoKDAcZKPJMzxLLQfKTsgboAA7y2CXj4Y+UZilYssSyR
YwBeueCpTwHPUNeDwoN7pgwgMU0mSyv9FOmYP7WySmCA/8ybtZeWMxCLxHmi
4ykM0JROW5UZk4HmibmLu54wgOl/MJcumoGiK9KJVEsYYPJWE5/N5XTURZdS
zNHLALuCcT/+23mETn24Szx5lBH4rC46q55JQbOGs4OM9IwQ0kae+YsmBYV3
q+fqsjFCzt1Ru/uvHqK29mWdMhFGoCV60BGr8BBpVOvdDdVihNT/zgiT8yQj
xTQyVu4QRvhActXnN0cSGmK2WzSNZIQoNw9t/m/3kU9SVUPkHUY4Fmy2Q599
H5XfcbJbSWOE4sg+KgWp+0gqtC2rqZYRtrzzspT0E5GQc7CU7Soj2FMLnHup
F49eTQztxW8ywvtx5txrc3eRk53kh/Z9RmDTmIt0jriLnlmNeYsfY4Kex286
SF/dQVx6qnVb4kxQ5TV4scU0DjFJb2imOjPBx8bjXKvZt1HVc0PGd+5MUJAk
y8lsfhuZi+TM7nszAYfPIr02yW2UyGt+2zWMCcIuwLGqi9GIhqG8V+kJE0g0
HjsVohqFyDavnBn+yATWd6KKeakjUGhzUVXOt8N8LdLDG6/C0fatJVrfeSbY
dg0q6AkJRz9pLnXT/z3k777Lcd+4hUYFnE6cZmaGqzoRz3h+hKFiExvOHgtm
mL1lWsvJGIpEmFID0s4xw/OLi36DWSHo2eeRITdnZniU4hUsIh+Ckl0s7h7x
ZQa9jGNHEs8Eo9AbJnvaScxgo9d4tr/6BjLP155o7WcGA88m1qDqANR7JUL9
3igzjDMuGMbaBiBduY7U85PMsC1dRj9HHIA0mpHp3i9mKNuyZb9q6Y9EBtXa
1WhZ4MgToQ8nKa+jf3uEnBpjFlC2NSoyK/BBfq+uHURascCrUwtnWBx80K+Y
0nOW9iwQvRMlOcvug2YZpZh+e7DAD4bvoXcTvVGfuGgU4S4LELuw8xXHeqEs
K+5LxT0sUKiVyadlehUtt24s/RlggbaVYD+OBQ+kKNHrAZ9ZwIz3S4bTTQ/0
Zv+Gz8gCC7RGzG7IVV9BPwpGQw7IWEHYhJZPT8Ydnfj3INkCscLu2ZIae4dL
KNzlCmumDis8GninwkFzCfX2nUxfNGYFX0/hMKIGV3QhZ+1piB0ryBjFRKux
uKIoo9PFBUGs8FBFSGrrqwsayKTq2KlihaSlHgeHp06I4+i0tk4TK4QM9ght
nnNCLr4NbxI7WIHV3vZNCLsT2tR1ey88wAqpXbptxqmOiHvt9ejpn6ww+WYj
6NkTB3RZ69avHDE28GletZnNtUeVJTY+P2XZYET6/Ge5E/Zol5XwR1WFDa6c
ebJH9MEO3Vv59u/9KTaYvialSXtwDtU81KDYcmKDyJd2P+28bBHx4iaX0RM2
OPbCPCDkwRnEE/FpwTuXDW5fXUjXRGeQGk9dZWoxG1zd8JSQXbFGfpb+ejMN
bBDlGPbQX98azbdt+N74yAabrt3V+vRWqDdtraeQlh26ObatXg2ao0XFgYd9
LOzwOONJ6tl75oi8v9xhg5sdQv23mCaMzBFO4fUXSbFDyFzOQFGPGarw+cn/
SY8d2laDmX/0m6IUw++B5OHssHHPLmObygRVzfdoScayAw3/S1PCU2PUf6vo
uFkiO2xRRp5cUDRGR+sv5z7OZAfvuoiVNhcjFCy0+EGhiR3WfRhfJI8YIMe9
WRGnDXZYORXRf3NTF4U+6ly7vcMO5Aa/si9n6aJ0hdzmEhIOuJFncu+2kS4a
vuxsvk3HAYH7OgMm+TpI5+NUSKI0ByDt7i+pl04hqbJvwy9dOUB3v0W+kFsL
CT3Ikwjz5IA/lzroJIZOIq4AjzBNfw7YqyE90hd7EtGgf5KdURxwhjAx4/5P
E/3oY454m8sBN3VNA8MXAc1Xjo/GveCAOCO75sx8QN9ScmSMqg95eVLS5ouA
+s7LjfW94gC+cTL74fcIlf40khue5gBqir3/bJYwlD/IePvhMgckfV3/0ueH
oczasXHrdQ5481o/kIYEQwmhbjGfiTmB82cxeQe/Brp2PHLiGx8nUCTFu9ld
V0MEmab4pfOcEMV/UbTvkgoSYwifKXLlhIKwG5K1NCqI76/eCQ9PTnhgljhH
UqWM6F5+nP0ZwgmWu1Xfq0mV0ZrxuvrGY07oDfVrW6xWRMtyDfdrcjnBy23V
wdlFEU0zhy34v+AE27GwTHZmRTT49diD7SZOMP9lOCB8QwFVXhVf3h/jBKWP
zlLq5vKoyGwVtU1zQtlbdz06anmUrVT38NYyJ1yTck/c7ZRDSXvammT/OOFm
ok/5UQ055Bvv8OgoOxdUNRQcjVAmIMWSVB2mM1xwlaM2lKVKCu0obXaYnueC
PNQ0ctpQCnW8tEbxF7kghuX5Y/I5SWTWz6xK4ccFP4WmBvq5JJHn7wfiW4lc
cNzqXKD5E3FUcCKRZryHC0wNdwxyv4ogz45fMWyDXFDfPXFf844IUjY8TW71
mQuGjJ/9oVETQZ12x/ffL3BBi+7CIFeGMJq8efdXKxk3HLVeCit2F0IcXTGD
OTg3BA/osFNpCKApk0WTyVPc0EXzJj77Hz8q/KT7jsuYGw50AzskGvmR8hJF
58Nz3BD9VaRyV50fWdBE1dwO5IaGTjVdfQM+dNf81qMrldyw0Ez55xY3N7L4
MslU2MANJs9lW3NruBCHC9yfbeOGNGX4rHWaCz2/fhBr/4Eb1HX/SkxFc6Ku
RyH/nV7hBoU19In0CAc6+BZ0XkGEB2yOKYxG6LCi7PK2i9QyPOA49oVS+AcL
0g4/cnVGiQdK1N/TiT1kQXHCD/97cIoHHij5Z2FLzIjJo/zRbxceMBx/e54+
iwnVYptP33nwgM5xSW1JcyZ0lhYvyPHjgb9SvbwhZEwos/JdjUUkD5BECRjX
eDAise35waocHlDmpa77bcCAenqkx+4U88A9olPbeuQM6OpjvynnKh54Now0
K9roUSUiWWV8xQOq9zbanqvRIyya+5jfNA9EpUTrdqnRIXNGS11Ffl64aGhP
dqufBm3MppvQiPNCY7Db13fONCi1dspqlsALef2ikh1b1Gj87DWXZOAF+jS5
iBRRanTpWdytjQu8YBP7I1T80VFE5TMQ03uJFz5IUaRwqB5FL7TYEnOv8ULx
c66wyM+UaH0+L9PyJi88DnS0LOajRMHS7U3Vmbwg9FauK6+VAvEcHHl1N58X
hP/UPWhxp0Dt/SY9LqW8EGT5NpmflQJR+I2PMr3kBZ950/AGX3J0v3Hzj99X
XuDf3G55rE6GhgRZH3Ec5wOqNAu34yQk6HjeS7RBzwcvUjScxtqIkZ6I68J7
Zj4Ytjh3+mkYMXopVqN8i/swfl69n4yUGBVJW4wsSPFB7dMhnU8MRGiu9F9w
O4EP7IK4EikqD3A+QrZQhiIf/K69lMMCB3iK/JqviQYfKB3xFNZ23MfDVe4x
1BgexlPn+fDU7eIt9cqNCaf5QH6dwBpmuotvnfjm6GbBB8okN5tdv+/gnhrS
FZzn+ICQy36mWHgHP6v57nS4Ox/4SczueRVv4wTDI/GnY/nAoXFtX3bzL36l
t1RRPJ4P+r5eoNDP/4vnG1uPk9zngyLHdukk6784l2meZO0jPhhdqHLJbvyD
H7HS6uEq5IOXS5H8WOIG/u38zSPLXXzA9wvVPr+6jrNPipS96uGD6NRPHS+l
13FLxz7rJ318kBQv0dP+cw3vcebON/3IB2b9Yy4Rvmt4rVuTdt0cH9xmbOZ/
cHsVj/fZvBVJxg/nA0ZHKEp/4ASd782clPxw3evq8L3TP/BB9onNSmp+WDnn
et1+fQVnae+6OsVwyKetO1err+DPaFPO4vz84HNOZ294fBmvfqEot4XxQy0W
c0/JahG3DhPzuKfJD1d3H3MdObqIb1twFYic4gcOf5uoLy0LOL5Dym1lxA9v
j4N/qMQC3q0/RFlpe4h1BhIMaOfxL/Pek1cC+AFjUctjIJvFQxsvcpL+xw9H
/vI23OiawfkSzlqnh/JDV6XIrYrYGdxFSbO3O4ofBlhu1N1kmMF/RtDVCyfz
w3EKvh5T6WmchL/s3kQ5Pxxzykj2j5rEczeye/yr+aGVlXU52mIS1+1OIT9e
zw8W9nMPNAQm8bvXQv/TaOWHvk2SR9wREzjLS+NLae/54Whb6BQ/7Tdc/NwK
brHMD+FZ/stXz3/B1YYskOpPfoi871BykeILbmDYhLjX+aH4HdOb5LIx3F09
Dha2+WGNZCQtmnwML+IUO/nfUQFwsSFdUm8dxaXGnU/liAkA6xWiKtz1I65h
+e5UjJQApLDXLRXwfsSNeuV1rhIEYNhu4z7F2Aju0Uysq6IqAB/YmCcemo3g
JY+f6r3TFQC70H36DMNhXMb+i+FvVwEgWWNLdXAbxPGRk0aj7gKgJuV5JUF2
EDcxLjJq8RSAy6JXdEM3B3BPLMj4tr8A5AUfnXkUO4CXcbOe5owWgB4HmmdX
a/txwjdzc608Afh3q8OjxKEPB+tGc7HnAlCTekV+hKwPN+3jtzhWIgDEzJwl
hKL3uPfLVYtP1QKw2/5V3XurF6/MTLC60ikAjpHfOrOy3+EKF3psHswIwMAC
OQGTeIsXiYeuKC0IgIFATVvObDcusCEXNrosAJ1hnW8nnnbjDLFpBdzrApA1
IcX8nq0bX610+1tAJAid+zbXCExv8FKKI8nN3ILg6O1uMCrzGhcZaBS9wC8I
Br8pn9v+6cQzMzybiIUFgejlOllccyceT/g4rSMlCDELlV3zRp24h22e3ICa
IGy3tReeu/4KFy/V+jB3RhAulnScvDjTjj8L3HSKOScI3+XUTJqq2nE2reK/
EhcEgf+2zMGTyHaccpSBx8tVEK5eey9FItaOzxNPe/zzEwS1p54MzNfb8Fyr
MCraJEFYsenvmzd+iXPxKWZWPBSEmY8pUw/2W/Dk5QU5yzRBOLr7wVukvAWP
uHn6bNqzQ/2CSw9XmVtwp+c8hYJlgvCY7+3Xnu9NOO9e8ynVXkG4REVDrfOy
ASfzmM0U6xcEyfdzhGj/Bnx5jHqLbVgQtBvNGrNlG/Dqetui7S+CwGf5U/ti
bj1u4Ld1vOm7IATnVJW1pdbh/t8VRjFqITibTiLvn1OD29mek5OhFQL2ezzM
Cm41uObb8DgeRiEoftMjkS1dg9MUDGgccAiBJwnt8/jGajzL6VpWm4QQyGWG
zNuOV+G9n4vctQyE4Ab5hOkqVolX6g2+UjARAm/aQMZ3NJV4at02l5C5EFC2
jMUrj1fgTg/1PpDZCkEsiaRhfXAFvmk6r9B1WQhEl0zbFDvLcYFu/j29WCEY
eyzeLf6pFKdU0bc+ES8EfUM3jKyjSvEfeV5l4veFQFjLatlTsRSvj2h1pEoT
Ah59olKbhyW4CbLvelcoBLeaKZRfOr7Ag2of3TPpFoLHaaX3vASK8G6s865U
rxCkY0pipyee46yvf8VS9QuBlu6u5uLj53jNkE5k1ycheCpYR6XJ8RxfW90I
xBeEoNtQiN6UuxC/LGnmJEMhDKynNh4waeXj9ZXBF2iohIFMNORCJlU+fkSt
0G75mDDYWRjLdAzm4Xl6B9b5zMKwKvbwSb9LHj51scSQR1gYhgNUYz7dy8XP
PjuqdFxbGGhoxfxZiHLwQlEl+RVdYdB6PjXi25+Nb5Y6yPYYCkOOtMKSaVY2
/rClTjzaQhjCBBxNIrWz8YGxizz7TsJAkPFnLUzMwvWZO478vCUMIq9iKyvx
Z/iJuBtj71uF4fpg2rTJYAa+6rzufvmVMJwbHy8NTcrA8zH3HbI3hzyer6hv
kYEzrZ3l0ugThuZhfrrCj+n4zzMnzheNC8NNurdhjrNpeLbw1lT0tjCwMWQU
XOd4hNscXPMR2BOGgl7dgIyZVJz28wLJSyIRsBgqvatdkooH3/0k+OeICAQa
d6tznkzFrX/XXnRmEQGBRCGXWu8UnKr9+hJSOOSHGmPjF5LxtvQfQV+URUDR
2kLHtD4ZD/C7SBWgJgJ7XuG14bHJ+KyolWSppgiMUP49KS+djL9MULzKZSoC
FZGhlU+CHuA+dr9XtzxEgE/s57dm4ST8y6bXVkW+CKBQ59y3MfdwIn87k4wi
EYj90arvr3EPF9rQzY0sFQHb57t+06sJuMcqj+mZWhEIcX7rvHYuAd9b7C3Y
fS0C48bXmavU4nHeMbEzunMioIkfeyTIfgfXtmEqISyJQJp0GPHcpzjc7eMB
CccPEfjuzndHLzUOLx/8WLqyIQJDde/P/mKNwzXfRVIkkYmCbH3A5QS+WNy5
ebJmXFAU6myTz9YY38Zj1Hqpu0RFwbl2fnGM+Tb+or7OsUzyEJMEHY/7Fo1v
VCccC1cQBXsuz/ib3tF4VInGRVEtUUhYfmeQ9SQKL8h8xOTjJAok9Nv/ZRyL
xL+HmfoeyRKF6A6djT2tW7i/WYxdaa4oiOeOXnzKfQsnEWg7ZVUoCpwfqj6n
bobhHK9k2XLKRKF0JTo57kUYbkBO24K/PNTb+mLnyBGGF8a+p/D/Igq2nz4k
WFGF4oq25KtcE6LAPUVX3fYmBG+TwD6/mhYFuq8sB+1RIfindy+K6ZdFQaiY
KeEWaQhOcfyuacmWKIyGXSL5QB6MuyQZpM8yi0G328OEW0I38FWn8Ig77GJg
U1//umI5CA9WaPSQ5xaDAQ+/BueKIPzBsDgKExKDnwnlonoQhHewHJ3lVBCD
OyeL/qw7B+J8GW+kLUzFwK56knm03R//mqPd3h4nBkkLN5jy+33xwbthJtYJ
YjC+vsX6Mc8X777e/GX5vhjYt6Tdc/7PF6/UVfzLmCYGxDdd0h6I+uIx3wUl
XQvEwOgLZbVcpA+uoED6kKpTDKZF2tfqjb1xMS4k8PSNGLzsZ7ZwEvPGecj/
K1N4JwYetNkbdqTeOOWn9bd2g2JwRGRLVKvRC/92Y3q/dFIMPq4ZbbZKeuGx
He1uFntiIJyaovzuhCceWrz3Z4FIHLbjHSpztq7ifsknIoLJxKFmnPLh0fqr
+HnXiid51OLwp0mpPFD1Kq5IlTW4yS4Oq//W2juQBz5hFqbxWFkc6H8Ta5Ne
cseVpnC6uWvioFdC4ZhNdwl/5PnT6Y2vOHB8elf8bswV3915UvM8QBy6tpeE
fPNcD+u5Z+t5UxxmrxJvqmi44iZGTXmbCeIwJdNAFXTtIu5ap6JOVSoOb3yN
PKe+O+NvtRfiVyrEwcb8hs6lFmdcajBlsq9GHIbWJcfP3nPG11f+RD1oEYen
NRh+S9EZvylQ3c/1/vA82VvWLRFO+KN4gqvsijg8URcwZ1FyxHc4JuvpV8Uh
+z/j5xs0jvj5wnvUG7/FwWms4hVhzgEXevWzvH5HHIJ70/tfpjjgFVsvdjSp
JYDue7CO0u6Fw3lY/L6lhATQVs//Umy0x3dOCDQHuUmA5xhf5IeSs3gXO082
u4cEbIU+f/z9+lk8cZs9puGaBNCcYLK/hZ/FRRroLbf9JSB2w6yMecAGN1Ul
XgmMkoCTZJ+Ovd45g+cpT3IGZkuAS2xulqOrNe7FMk7Mli8BTJSJF54pWeNq
fz8t1D2XgCvES1L65NZ4f82Hqs1yCUjkvHd2JM8K/6fYahjQKgHMXvaCrd8t
8dMKmf/5jx/6KfpNxxZngXMwpjuyTEpAQzVn4L0LFvjs+kPd2hkJCBqvPOes
ZIHfqIxn/LssAVw+br7c0+Z4rlxI8fVtCVi4/0HrNTLHt2XtvvixSMJHj5ov
6tRmeI4Uh7qvqSQcIT6mV9dkjI+Xx847WEoCwdmOI/G6Mc6ktH3fxEYSBK/I
8RwnGOOR2OiiuIMknE9eKvydb4S7mqSkTF6TBPsfTGzqjw1xMS+GdeN7kkDf
kCselKOPO2zceqL+QBLEPLhP/nXVx9MC1/TEUyXhdvbBCLGkPk51q/8p2VNJ
KKFUUWqt1sO/308wbiqVBDvJ9anSPl28tIrquVifJOgZZ4IRpw4+r3LDkmVQ
EpIrCp05Fk7hvM1LB6QfJaHPZ9TTueoUntjZbT3xVRJeGEQ3ORqfwr1HoslS
fkjC/UkphdVobVxxk8SB9JgUQP4HmYu0WniD2g7LN0MpOIdyWKs8Abf95Ona
cFoKMm+KryXpAb7rO12TbCEFUSy1Wz0CgEPJW0vDc1Lgnfe5J6wc4d28j5Lq
3aWgtkWp2yoBx0fJlI4/iJWC0Ixf14vdNPAbWYX2nvFSsMzPMdEgooFz4Vwl
+veloPvr4qjDnDruEEBqRJQmBXRFP4h8XdTxxaWB2KuFUtBXrOoSflkN3+zz
JNd7IwVSv3LixRNU8UdXpi0F30nBK932YgErVVyN0jp3v08Ksk/D66dcqnio
JqZV81EKftEES/CXqOAU1dS3BOalwM/3HwvfsDLOkla4u0smDf3qqj/oTyjh
Ss7TvytOSkN4xPVglzPyOG6e/dFARxrqKeF7hqw8rqfp1DCjLw3nJs9YilPK
47a806HMZtIg8IFJXqtRDg/7MnU06II03P9SpXZBQA7vtZjihWBpmKiYuZhJ
TMA/nswi+XxTGq7a56+8apHFJ+Qc57wjpCFpkfbkVKAsvk47VZQTJw3jJJGh
n1dlcLbeSaUjadLQOfAn7MmCNO6iPWnYVyMNRQOTDq6/JHFPhWcylxqkgeHp
0NjLSkk8QMCBnqhFGt5O6cSk+0vicUSTH+U6pUGWvY/p04EEXt484fhwUBqe
Nwul67BJ4LuKEwF2v6ThlKELFZODGP5A+FvOspgMlGpf9Q/TFsapGuiNBqRk
4BX6tuPMIIyHG53aqCPIgKbnN76WSSHcy/eFdpSqDLygeXvwLlQIN2q/Mcer
JwPfaX6n4m2COIU9q6jVJRm4Guhg+uCMAB6yavBB/YoMqBhvE6ykBPCNiNAA
gWsyEEuu8yyYWACfKZp788tfBmiY6/y3XvDjbVtVbnHRMrBJqxIfR8mPByWb
FrXmyUCimwl9QTYvvioaaZ7/XAaUOmXZj9jw4m5Ndf/ulshA3wmmEJbjvLj1
NI+hbY0MGErWrGsE8+DyhB/fNzoP+b9304IduPGVd7HSErMyEP7p8hsfXU78
Aumr8mQBWdDUiF8yimLF8aWTK6oishCw7tbnacaKc33oEP0qLgu3SX1ySXhY
8bH0jkxhOVnovjwDwfUsuKV8x91aJAuWPEf+e7zOjBs4truN2smCV45+cfsN
JlxcVzM32EEWWk+c0E8yZsIppdsn+Fxk4d4VIdUuPib89Vab9eUrskDXSZNn
2c2IQ2Kb9r8gWQizGnXd4GTElVtb+bhSZUGQ1eZ13DA9zpyH7NrSD/XoDAJl
SujxjbjWVJdMWXD0228Ui6bHK6xbj5fkycLFY2P/uE/Q41I/X+5i1bLw+7oe
zWY2Hc7P/XL0woAs7N+Lyb9DTYtHY+e7B8gJYFf4j/0qBTVepMFXn36EAL7f
O3wn31HhferTBc5HCdA+kio9eJ8KZ1Fzvf2HhgBv/sxFSvFS4QXKnjrsTAQ4
c6Lp0VN0FO+WDe10ECDAwGAn9iTlCL4iA9XiQgRYf9vBGOx8BKeTIcldFyaA
w8hxq7eEI/hZqeiISHECVKcFXCzupcCXxRJOFhIIMJirjvyOUuDUApltv3AC
mNWeIlikkOEEfofyeiBAfvuxZyWXyXBLPoFnt04SoFJTN8YNI8Mf8+TfZNQh
wAt97ajdOVJcirMUVzEmgPwx98VodVLchOllc+g5Apy1TIkP3CTGEym+1R8L
JMDq04t1QecOsO+fzt7ZCyJAxzth7xz6A0zn+Yj9j/8I0D3x1+1G9z62a/ie
5P1NAjCYj3WIq+5jbvebje7ePsznfK7ZiXcPA66MSapUAvCVMBv/pN7BMn6w
VP17RAAWO58fSr3/sL8vk6KW0wlwevuIMGP8P+yFY5xETyYBKkYq52Lo/mFs
BUF+sfmHvPYNggbPNrYqZ0NJWUsANz855mcWm5gh6fDYZh0BWjof/srh2sTy
h0+XLDQQ4A4dzbrY/F/MLkDX/E0LAfTmiRsqbvzFupuVH0e/Pqx3W+zKk+d/
sGe6zATyEQLYX8mOnufewMzsB8+QbBAgU//G90WbNWzyzMbv/j8EENV9yFgj
v4Z5mrMkPt0kANWFLMYRmjXsrq5tt8YOARq/9bQe61jFuuWmVQNI5CCuqZTL
hLCK4RTr7Ct0ciB/renvrPJP7D0RU20jgxyMXcg9arHxA7PbUTKPZZKD76hX
36LyBxa0GhQnwiYH7sjeipzwA6seI95x4JWDx9EG+sfkVzCJMvrxEWk5MNCX
as8+vYw1PFcIzJWVg6An3HdymJcxvVwrJl85OdgJu98qOL6EXUxLM6JTkoPk
kpbjme5L2LMI/hYDjUMcqXLWLn4RY7GRy2w1kIPXTzqbWZfmMVJiM4fnl+Rg
Y+jJfPP6DNb9Xmoi87IcUNusGlC/msES0inPJ1+RA74RC5t3D2YwDsW2czev
yYE0kjzxWHkGI1ySPWMVIAd69PHiLremsfPvj5kQ35YD/yg1mxKJKUwofan3
b4wcWPDHMD0hnsKWXF8brsQd4g5C48/RScyPKET/U4IcRNeL8lfHTGJ3FFa0
S1LkwNtLZtbu8wRWn9ajfjZfDnLiTnNq3vmKhbrmN5oUysHRiuI3d7W/YloK
4Se0i+QgLH+a79b+ONbXe0JFtlQO2hvj0+z9xrG5g0J58lo5SL/tUdZ46QvG
4HpbvOK1HBCkmcIarnzGPOS1WY/OyYHcPrE158QI5irWdeHrvBz0WDWclSwd
wS7w6BVWLMqBc8Gz6MKQEcycyuiE7Yoc6H5wejDPPYKpTFucK/4tB+/mibzP
OA9jJEnOT41J5GGn63juSeIhbPf23AI/mTyIYcRrdR8HsT8hlwh/yeXBoMtV
5u6LQWzx8pX2zKPy8NK+Qtbk7CDWp+k784tOHgqpP+Tx1w1gaWvhokm88hCx
E/zHOqIfS1og83Lll4divlmC3fl+7O7X6Ho1QXmgUerfrTrRj4W+jdOfEZGH
KK+agfLpD5hLVtIVRRl5eE/N2dDe3YcRzLLLPmrIw2xGqVBZRS/WVd6uwmkr
D9xpTPibH93YRuUp8/lz8nDzWBjFQW03JlDz1qPCXh7aL9R8Kg3rxm42DGTp
OsqD2RmqUB/mbky1Y4raz00ecO6d+qvab7DnQ8STvf7y8Dzr7fezda+x0ZGo
f6mB8tBH/o/j8e3XGMXoUWbnG/LA8ffKmo7Na8xpnN5gO0QeiNL0SIf+dWIc
c/zVwlHy8L3HSu6Fdid2969mTOgDeUiOJjzIXe7AGrdeZ+s/lIdtJSkxqvYO
bPGffgtTqjx4/5vd7kntwE4dmK0XpcuDw4eLKud0OrD9I052n7LkwXb/Q9Wz
gnbMiz2cQCiXhyuuDV/Yb7RhFhodo1O98hBbpV3woaoZq6cj+jjUJw9aEgXJ
p681Yzxz2NDrfnm4M7Qe4yPZjC3GN7x/PiwPwfJJoRl5TVjwRHmH97g8zPUa
y5hmNWK54U9fEK/IwxMHd3eymnrs6Jmvz3//kAcjuadUR27UY56SnAVzv+SB
3ySBNwXVY6rDKVlvf8tDQMy2n2VvHdYrnJByf0cerm0+ZJFZqcX+dAeH8VMr
QMq9TQVN7RrM9kljCOMxBfAJy7twnb4Ga/PeukFOqwAuesl3BCaqsTgOv+tL
DAowf8Ti8sx/1RiPxxX3Cg4FmCbP9p1srMJ0aG0tNSUUYM04feqzcSWWaqUi
5qivAMeKz7yrulWGESw4f8kZKkA9xZSJs3oZ1m16UENirAAnpOYsy/6UYv8M
32jlmipAp/V8CKtHKXb+5JkLC2cUQJdZiZjUoQQTkg1IueqqAJJtUaoizsVY
i9Q5e9xNAWwet/kQixRj1hJIiNZdAZx/tg+5LBVhMcJHKsuvKsCun49Fq3cR
9p0z9f1vPwV4eE94PDvmOVZJWUd2I0IBQljcfoj1FWCGFBnvDKIUQK508er+
owJslvRmEudtBXC7nWBv4FKAMR/o8LXEKcDipJKX5m4+FvjnozpRkgIQmtsl
EuXyMTT91yf6mQLou9FeGinPxXqblKeSWg7xtvtw6k4W9vjOcFxcqwJsMXYq
He/PwjzO+SiGtytAUNpw04/cLIx6p+S292sF0HO/rzV7OgszUBOWMX2vADpu
AYLJRc+wN/WM/x37qgBvI+65npvNxFJiKoTIJxQgLcPTMzYtE3O1Od23O6kA
JrWWah6nMzGKrTj+lVkFaKdistRveYJpq5B096woQGan0nf5rMdYR80qU8yu
AuxX/r5yLiYdS4pKeHlzXwEUKB4oM+ilY05WUm4BRIrgfoXWyYUyHSP+c6nJ
lUwRbtCvko3EpWGgOOF4ikYRZqwyz7emPMJaKt+XknApwmNVncfhb1Ow+rIi
vRB1RdgzWcxrvv8Aa75j0HkFU4QM3/t/hJ0fYO2XlpEtUoSqifvf9xQfYD28
EioqWoqgOhtX/edzEjZ+77nwmoEiLCXK5y+KJWFEXoUkF20Voc677ijpWCJG
ZqQXamGnCJSPw0mnKhKxo2KL25rnFQ/nw/kzPHGJGMOk6BqPkyJcz8yLq1JP
xIRMCyZGLyuClMSP1xd07mF6hPxmoyBFEPETSHMnj8eMaHRU1f9ThBYP8Smd
truY2eJclXiIIox9nAx9899dzPaZcDHFLUUQUogoLNu4g3nQ5aW1xSiCgafs
1tqPOCxxNcdf8ZEieOJ7xLu7Mdin8iwCV50idP8MhJaIKIyuduH6Ur3iYb9u
aJ20iML0mqSbahsVwdpc4IanUBRW/7rhlNlLRWiXyv7T2RWJpY0N2Ea/Pqzv
FZdebbpI7BwZSdTqkCK8N2CP760Jx5KP6vW0jCiCUQfzB/G74Vjv8QTaO58O
/QRNhM84hWMa7Bzpwl8UIak05fhl+nCMW0a+zHZaEdIKB1rzfW5hE2ecPneu
KgJ/yS/3k6fCMDb7Qp6kdUX4dkXgPhV/GGbq9NP5woYibG2Fmen8u4m1edz4
ub2pCOaeOW+jPG5iWbeSSGUPFOGKReCMuU0o5lzcIZ12TAlkzo/f3zMMxhb2
BcKvSihBJ/+41kJ6IGb9UaDIUUoJtiv9RMIuBGJdJQKDVjJKoNXsLlgoFIjl
2gkI4PJKQK3yg/ZZeQDm0MjfcVxNCQZrPb5RffDHRq/zkZTrK8El65dDZULX
MV1jPolcQyUoeuH07+maH1YrxGf+yFgJOvwzZahb/bDkId7sMDMl8E5UEDQ5
54eZyfGeNDurBPfQTrxrmi/Ws8Idvu6mBDWRMxUrEj7YiU7uonl3JbiLcc5R
HnhjhRncg2MeSsDoXD+fMOSNRRtwC7zyUgK6hCT74RBvTKuQq+NBoBLEc4h8
Fv/khTU7c5IoxSjB1C1ThrOq17DSMbbwgAIlCEp6SPx10B0z+/LS1+C5Esy/
fd1ukuKObXxxuchdrAQJgkM/9WzdMbWv5XqvSpWAMj7uzcDMZez1hB4tba0S
vCsvT2Tac8PGZwMf53cqgWSQzPcLupewm3M8CUFdSnDWtPJaH8MlTGC+86ZR
txIQ39y9UvXNFXNboHNef6cEuj8Lc8cDXLHfS4Xi+JASJO/YRt0ru4hR/Rqt
HZlSgmwWzm9pCi5Yya/QwsIZJXBv/fl3k9wFM10VSv9vTgkOLPV/No86Yylr
XiH8S4d6tUe+Btx0xvg3KLWvrh760fJZfjTghKluqw6QHSiBgmZNyZvbjpgr
adp3BS5lcJkYafXyOI/hdJple9zK4EY/ZEUhfh5j4V7yecOrDMNtBqRy8/bY
a+UT/2wFlYG0yz0CnOwxIffPlOESymBxerBXyNEOm+pnF+lXVYZHdgZca4G2
WP3X9qU0NWVIaqX+o4XbYonLl0ucNZQhb8w8g43MFgOyRsVNpAxqti2jJ++f
xTJVbLV4dJXByWftbHCFDWaXme7gYaUM42wDtg8pz2CKxSeFlM8og1Bx2nbE
iDVGXb+8cGCjDOc7otNmsq2xxgG1aw/slGEtrndrDbfG2Mm/hDQ6K8PcSWUv
QrAV9vEKZwaljzK4MoouulBZYmYnHo/kJiiDMOGn6aNrZpgD2/5/DxOVoeMk
T0reKTPMc/OCQHSSMsQEnkhh5TLD7tYIXruUogxnmKZJRXpMsS65YkqJTGXw
WlpsHJQwxdQkGtXLSpRhQ3+zW3fHGNM7yjX9tEwZXu1b/+GrMsbOLIbEJFYo
w/akhXfBFWPML19zxLtGGXzHpL/VfDPCSgXeeiq2KEPL+j7Ni15DTIBzNKuh
Vxm0lEuo87v0McK/E3pFfcoQUv29LC1GH0OfM36m9ytDdGWCu4ChPmaXekE9
ePgw3vF04o8BPSyFcWEYH1eGUyaYpfa8LkZF8/dI5/fD/dqMe+/EdLDfu4ye
fVQq0JOqyJxHo4UFHhMyuXpcBWQJH5bs605iu9yKMjQMKvD8e9DgA+eTGAWy
/KnPrgJ+chTX7No0MbZbyZ6vRVVA+mcQW2kcYI/v55q4SKrAOSmTnQwAjD+7
WoZUVgU2X8wuPv+FMIlXwz9BWQVu3F60FxjGMQ1y5mvN2iqQk3htQqZRA2tj
Fj59Tk8F3huyrESc0MBOiSjJ/jNUgX3zG5psTeqYia7VLxULFSgL+DPysVMN
c4x9eK3K8VDfSPLFkzVVLPoYi1dRqAq88uIMdy9UwujsrblqwlUg+d+Rz7Ia
Sljai5Tu1mgVkLpfxkE/qIi9MGTlH0lQgVUFl8Q9UkVsMJZt8CDz0H/e5U8u
N+Uxu882oVQ5KsDvdjLjp4A8NieWJsFcoAJfh3+8OtUth229YY+QKDvUd4u8
rcomh/FQcCpatR7W69RwXOgjWazQ6tzkhVcqYHmTqirynwwml5dx1/2NCgRy
S7s+vSCDaWtzzd38oAKLbRVWI/LSmHs4d0rRhApgpVTMhTsS2MaA/cmaGRXg
etstXOMngYXwZ/5sXVABl605YpdVcSyxjUd35NfhfS2Fz/r8EsPY6S78nvh9
eL4pcu8GHzEs+8LTp8ubKqBb7zHouSWKSZVNGP7ZUQGSl0SL0WGiWM0+79bB
gQqo2Dm9/0Mliv0PuW6qyQ==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
qNgUWd7aUsfcB3YNkVQM8D8bxzP/
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
4R9H2JU5cIij4uBd9xpgeHgmOHlx4HBlW9kPw1qI8XFZ4OvnQN51dTfVxOvB
M9C07mwtJ66X/etSx98Ia6fKZIh2TvxofTHa/2AjFB+Ri7z5mRPfmWysjE1p
hEVDdrNcggtFryv9R9n5Fm6sf9ndj1zoylFtl2/XBMXZUuPGr7hwRZiLMl/2
HuZbFwVoT7nR7dtI2MRwC0TK5Lm8y1qFJ5I5Jo0udEHTZyP+A09XoZ/LotrF
h13Al/K1sr12FXbocFS8b+2CuM3S4r2Dq/D67tmyj1u7IZkn9dOYMC/u8g0P
ut7fDSXfE+y5Y3ix7E/mefb9PdBXGGKl678aqaligprwCXbstjd8YbgW2aXU
39HLBsHoY+eBUuF1yMteWq9FfAO9D1HUAZ716EJXiKvQngT2mRO27Z0bUPlN
78nYit+Qai16LK9REB8v8R3mdJgB6tcZkX2Jm3HAVvWe0Nl52FbY117hLoRV
DzoqzWWXQDI2Uz7IWwgXEppmNJWXQMTPK0j7vBCaF4mySWotwWqY31p7VQj7
eWbDeyyX4Mf7jaFvMoTw8jmbuclAsk9M7NvRPiSE7x758lS1LYGSYln0t0PC
qBOztuOj3zLsenRHf4OtCHJe4psNyVmBBZWZavNDIpi3ZLdv5vEKVFfYQPRR
ETxps/6H20uyzps37uY8K4LaPG/4tr1dAe/fsXKzMSL4q4i90nN8BbLUYlb3
NorgFym+pWZBCgrVX29N1xLF+5/CtYKsKTho+tV0QE8UJU+8cjG1o2B2l8Fb
kf2iGFvpKLrFiYKq3zhr4x1EcTr0l1uGGwUtV18tDfcXReNdmTK3z1AwyiL4
7oliUXzeYGvZGEPBlb6AQ8rSYuhU/q9vfgMF04peH+VVFEN1PbMNNk0U3BvC
dfKzihj+vaL2dOED2Qek4i/G6olhu5rdnz1dFNzgVXT3t5sYPvbY7xpB9gnZ
uS+tT9LF8PnRAl53KhUt1lsZ7KKJo488q1ZclYrTw/dNV8uJo6Cz4TkjNSre
eTpoPawkjpplu+R9NKjYa+fjFofiOJIjl1agQ8VjKZHB087iuOR+tX3JlIqX
FKrKSpLEsRic739yp2IbY9NdobUSGNNr35UZS8W1mRUwvU4CeeQfnNybQEVD
affRdxslULosVL3/LhUrZEtVg0Ul8EhzQhBPEhVzFSw7RrdJ4Jo98q+VsqkY
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
vmNv
         "]]}}}, {{{{{}, {
          GrayLevel[0.4], 
          AbsoluteThickness[0.5], {
           LineBox[{
             Scaled[{0.02, 0}, {24., 4.093225872945141*^-14}], 
             Offset[{3, 0}, 
              Scaled[{0.02, 0}, {24., 4.093225872945141*^-14}]], 
             Offset[{7, 0}, 
              Scaled[{0.02, 0}, {24., 6.016246905069533*^-8}]], 
             Offset[{12, 0}, 
              Scaled[{0.02, 0}, {24., 6.016246905069533*^-8}]]}], 
           LineBox[{
             Scaled[{0.02, 0}, {24., 0.00004768772502777269}], 
             Offset[{3, 0}, 
              Scaled[{0.02, 0}, {24., 0.00004768772502777269}]], 
             Offset[{7, 0}, 
              Scaled[{0.02, 0}, {24., 0.3060185943404754}]], 
             Offset[{12, 0}, 
              Scaled[{0.02, 0}, {24., 0.3060185943404754}]]}], 
           LineBox[{
             Scaled[{0.02, 0}, {24., 0.2698184089284998}], 
             Offset[{3, 0}, 
              Scaled[{0.02, 0}, {24., 0.2698184089284998}]], 
             Offset[{7, 0}, 
              Scaled[{0.02, 0}, {24., 0.6120371912310447}]], 
             Offset[{12, 0}, 
              Scaled[{0.02, 0}, {24., 0.6120371912310447}]]}]}}, {
          InsetBox[
           FormBox[
            StyleBox["\"e=0.2\"", {}, StripOnInput -> False], 
            TraditionalForm], 
           Offset[{15, 0}, 
            Scaled[{0.02, 0}, {24., 6.016246905069533*^-8}]], 
           ImageScaled[{0, 0.5}]], 
          InsetBox[
           FormBox[
            StyleBox["\"e=0.5\"", {}, StripOnInput -> False], 
            TraditionalForm], 
           Offset[{15, 0}, 
            Scaled[{0.02, 0}, {24., 0.3060185943404754}]], 
           ImageScaled[{0, 0.5}]], 
          InsetBox[
           FormBox[
            StyleBox["\"e=0.7\"", {}, StripOnInput -> False], 
            TraditionalForm], 
           Offset[{15, 0}, 
            Scaled[{0.02, 0}, {24., 0.6120371912310447}]], 
           ImageScaled[{0, 0.5}]]}, {
          GrayLevel[0.4], 
          AbsoluteThickness[0.5], {{}, {}}}}}}, {{{}}}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> False, 
     ImagePadding -> {{All, 54.2}, {All, All}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"n\"", TraditionalForm], 
       FormBox["\"g(n,e)\"", TraditionalForm]}, AxesOrigin -> {0., 0.}, 
     DisplayFunction :> Identity, 
     Frame -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Peters&Mathews Fig. 3, check\"", TraditionalForm], 
     PlotRange -> {{0., 24}, {0., 2.317767379134314}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"e=0.2\"", "\"e=0.5\"", "\"e=0.7\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6703438875448227`*^9, 3.670343899197439*^9}, 
   3.6703439749589863`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"cee", "^", "5"}], "/", "bigG"}], ",", " ", 
    RowBox[{
     RowBox[{"cee", "^", "4"}], "/", "bigG"}]}], "}"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"in", " ", "G"}], "=", 
     RowBox[{"c", "=", 
      RowBox[{"1", " ", "units"}]}]}], ",", " ", 
    RowBox[{"Power", " ", "W"}], ",", " ", 
    RowBox[{
     RowBox[{"Energy", "/", "Length"}], " ", 
     RowBox[{"J", "/", "m"}]}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.670344697501049*^9, 3.670344709980649*^9}, {
  3.67034506803852*^9, 3.670345083688211*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.62848323741395`*^52", ",", "1.2103317280296457`*^44"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.670344710694862*^9, 3.670345085146474*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"myecc", "=", 
   RowBox[{"{", 
    RowBox[{"0.8", ",", "0.9", ",", " ", "0.99"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"gg", "[", 
      RowBox[{"n", ",", 
       RowBox[{"myecc", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], " ", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "myecc", "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", " ", "1", ",", "200"}], "}"}], ",", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<n\>\"", ",", " ", "\"\<g(n,e)\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Other eccentricities\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLabels", "\[Rule]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ToString", "[", 
       RowBox[{"myecc", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "myecc", "]"}]}], "}"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ToString", "[", 
       RowBox[{"myecc", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "myecc", "]"}]}], "}"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.670343303962801*^9, 3.670343353171623*^9}, {
   3.670343455510159*^9, 3.670343555578609*^9}, {3.67034363123387*^9, 
   3.6703437096767063`*^9}, {3.670343759196829*^9, 3.670343839559901*^9}, {
   3.670343871035305*^9, 3.670343898114874*^9}, {3.670343966511804*^9, 
   3.6703439736800547`*^9}, {3.670345113842595*^9, 3.670345177882823*^9}, {
   3.670345211285861*^9, 3.6703452574518137`*^9}, {3.670345292570804*^9, 
   3.6703453404845467`*^9}, 3.670345378545497*^9, {3.6703458218192387`*^9, 
   3.6703458265681047`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
J40=
         "]], 
        LineBox[CompressedData["
1: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
5I+5OTakenO9LJlN5P8erJ8r
         "]], 
        LineBox[CompressedData["
1:eJwBUQSu+yFib1JlAgAAAEQAAAACAAAAyzgtQgQA8D8KmKEzWVCmPyAWV8oB
+vA/vUPtK1xUqD9084BS//PxP0nTZCBqZao/HK7UYvrn8z+Slu/WD62uP24j
fIPwz/c/nlXwmInksz8SDsvE3J//P6Xeah/b/L0/tHV6Ju1MAEDPsMWqiVW/
P15kj+rryQBAvqExa19ZwD+yQbly6cMBQKWXu+44vcE/WvwMg+S3A0DZpFau
i57EP6xxtKPanwdA41tnCSjByj9WYMln2RwIQMBz58T7jcs/AE/eK9iZCECC
1FrZn1zMP1UsCLTVkwlALkAtD0T/zT/+5lvE0IcLQK4dLwq5rNA/T1wD5cZv
D0CV96nkvS7UP3kjKZPZnxNAaVjaIh/F2z98gEe9muMTQLcuM2ZQT9w/ft1l
51snFEBC8CrITdrcP4SXojverhRAXuL6maby3T+OCxzk4r0VQMhGhwRTFuA/
pPMONezbF0CmbjX6T2LiP87D9Nb+FxxAsFLlZ+s95z8SMmANEkgiQITkshsV
9PA/SxPM6rNnIkCnyW8BJx7xP4T0N8hVhyJAQMA6tVdI8T/1tg+DmcYiQJa1
yggVnfE/2Du/+CBFI0DBCjj/+0fyP51FHuQvQiRAeEMgL2Gj8z8oWdy6TTwm
QNhIW/HHb/Y/PYBYaIkwKkDSOJDrzFn8PxpqIT+l+DBAWzfXpc2GBEDu7lRL
Ii01QIADZx0AJgxArcoeY8gZOUDt4ZBXG/ARQEUBJ/yKWj1AaWuJUK9uFkBh
HVQ5ucNAQFPJpdMLIxtAluVfekG2QkAQ661IRcYfQDfbCvzX0kRApWjX04aI
IkBO/IADg8tGQCVg1gPjHyVA156zeUC6SECkvJRd18YnQM1uhTAM00pAZbz2
VVrHKkA4aiJt7MdMQMDqHwZAsi1AEJNe6trmTkC3pcfwM34wQK2eK+vtfVBA
Tk0XsR4sMkCNiQ2keHZRQDgfPCPuyzNAIws/fQqEUkCPxBcTR581QHQiVpmm
f1NAzwKYgv5iN0B70LzVSZBUQDsnifqLXTlAPL+BSfabVUBSXD4LXWA7QLdD
LACtlVZA65qmFHJQPUDpXibXaqRXQJhQtFfAez9A1Q8G8TKhWED993TxZslA
QHsBREIEmVlA7CZcW4rXQUDXidGz3KVaQM+/4ZiCBUNA7qdEaL+gW0C3wpM1
xCdEQLtcBz2psFxAza+azK1rRUBBUihJnLtdQJPov/o4s0ZAgt0umJm0XkBI
de8wWO1HQHn/hAeewl9AdW+GO31LSUCVW+BcVl9gQF5XKXFYm0pAy1etUeLa
YED3bULrGe1LQFwfotbxYGFA0PrnDThlTUDKsQl9Bt5hQDtQJbA+zU5Akw+Z
s55lYkBMbKX5xC5QQDo4mws85GJAFJrHIGXuUEA9gUz/XWBjQAzzEaO7rlFA
nJUlgwPnY0DJSY5+ZYRSQIsSXXc0/WNAYw7vQnOoUkAG1Pjh
         "]]}}}, {{{{{}, {
          GrayLevel[0.4], 
          AbsoluteThickness[0.5], {
           LineBox[{
             Scaled[{0.02, 0}, {200., 0.24439291547036446`}], 
             Offset[{3, 0}, 
              Scaled[{0.02, 0}, {200., 0.24439291547036446`}]], 
             Offset[{7, 0}, 
              Scaled[{0.02, 0}, {200., 0.24439310092047375`}]], 
             Offset[{12, 0}, 
              Scaled[{0.02, 0}, {200., 0.24439310092047375`}]]}]}}, {
          InsetBox[
           FormBox[
            StyleBox["\"0.8\"", {}, StripOnInput -> False], TraditionalForm], 
           
           Offset[{15, 0}, 
            Scaled[{0.02, 0}, {200., 0.24439310092047375`}]], 
           ImageScaled[{0, 0.5}]]}, {
          GrayLevel[0.4], 
          AbsoluteThickness[0.5], {{}, {}}}}}}, {{{}}}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> False, 
     ImagePadding -> {{All, 40.2}, {All, All}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"n\"", TraditionalForm], 
       FormBox["\"g(n,e)\"", TraditionalForm]}, AxesOrigin -> {0., 0.}, 
     DisplayFunction :> Identity, 
     Frame -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Other eccentricities\"", TraditionalForm], 
     PlotRange -> {{0., 200}, {0., 74.6320350012334}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"0.8\"", "\"0.9\"", "\"0.99\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6703452324428787`*^9, 3.670345261397089*^9}, 
   3.6703453045949802`*^9, 3.670345345009384*^9, 3.670345386891404*^9, 
   3.670345836575506*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"myecc", "[", 
    RowBox[{"[", "i", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "myecc", "]"}]}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.8`", ",", "0.9`", ",", "0.99`"}], "}"}]], "Output",
 CellChangeTimes->{3.670345275389427*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"ToString", "[", 
    RowBox[{"myecc", "[", 
     RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "myecc", "]"}]}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"0.8\"\>", ",", "\<\"0.9\"\>", ",", "\<\"0.99\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6703453558099747`*^9}]
}, Open  ]],

Cell["The hn strain, Amaro-Seoane et al. \[OpenCurlyQuote]s eqn (9).", "Text",
 CellChangeTimes->{{3.6703458705469017`*^9, 3.6703458977852697`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["f", "r"], "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", "\[Pi]"}]], "bigG", " ", 
    FractionBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["M", "1"], "+", 
       SubscriptBox["M", "2"]}], ")"}], 
     SuperscriptBox["a", "3"]]}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Think", " ", "which", " ", "units", " ", "to", " ", "use", " ", "MKSA"}],
     ",", " ", 
    RowBox[{"G", "=", 
     RowBox[{"c", "=", "1"}]}], ",", " ", 
    RowBox[{
     RowBox[{"or", " ", 
      RowBox[{"r_si", " ", ".", "  ", "Prob"}], " ", "G"}], "=", 
     RowBox[{"c", "=", 
      RowBox[{
       RowBox[{"1", " ", "with", " ", "the", " ", "unit"}], "-", 
       RowBox[{
       "ful", " ", "constants", " ", "put", " ", "in", " ", "the", " ", 
        "front", " ", "of", " ", 
        RowBox[{"everything", "."}]}]}]}]}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"hn", " ", "=", " ", 
  RowBox[{"2", 
   SqrtBox[
    FractionBox["32", "5"]], " ", 
   FractionBox[
    SuperscriptBox["chirpM", 
     RowBox[{"5", "/", "3"}]], 
    RowBox[{"n", " ", 
     SubscriptBox["d", "L"]}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"2", "\[Pi]", " ", 
      SubscriptBox["f", "r"]}], ")"}], 
    RowBox[{"2", "/", "3"}]], " ", 
   SqrtBox[
    RowBox[{"gg", "[", 
     RowBox[{"n", ",", "e"}], "]"}]], " "}]}]}], "Input",
 CellChangeTimes->{{3.6703459021232147`*^9, 3.670346064406143*^9}, {
  3.670346310143013*^9, 3.670346371919794*^9}, {3.670346492558793*^9, 
  3.670346545833473*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1127, 1031},
WindowMargins->{{771, Automatic}, {Automatic, 106}},
FrontEndVersion->"10.4 for Linux x86 (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 280, 7, 479, "Title"],
Cell[CellGroupData[{
Cell[885, 33, 150, 2, 96, "Section"],
Cell[1038, 37, 984, 24, 203, "Text"],
Cell[CellGroupData[{
Cell[2047, 65, 958, 26, 271, "Input"],
Cell[3008, 93, 206, 5, 76, "Output"],
Cell[3217, 100, 294, 8, 81, "Output"],
Cell[3514, 110, 281, 8, 81, "Output"],
Cell[3798, 120, 332, 9, 76, "Output"]
}, Open  ]],
Cell[4145, 132, 104, 1, 49, "Text"],
Cell[CellGroupData[{
Cell[4274, 137, 1013, 29, 215, "Input"],
Cell[5290, 168, 170, 4, 45, "Output"],
Cell[5463, 174, 143, 3, 45, "Output"],
Cell[5609, 179, 337, 10, 69, "Output"],
Cell[5949, 191, 319, 10, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6305, 206, 208, 5, 45, "Input"],
Cell[6516, 213, 111, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6664, 219, 564, 15, 133, "Input"],
Cell[7231, 236, 1885, 37, 477, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9165, 279, 232, 4, 149, "Section"],
Cell[9400, 285, 96, 1, 49, "Text"],
Cell[CellGroupData[{
Cell[9521, 290, 3561, 90, 423, "Input"],
Cell[13085, 382, 112, 1, 45, "Output"],
Cell[13200, 385, 110, 1, 45, "Output"],
Cell[13313, 388, 111, 1, 47, "Output"]
}, Open  ]],
Cell[13439, 392, 100, 1, 45, "Input"],
Cell[13542, 395, 120, 2, 45, "Input"],
Cell[CellGroupData[{
Cell[13687, 401, 411, 15, 83, "Input"],
Cell[14101, 418, 376, 13, 79, "Output"]
}, Open  ]],
Cell[14492, 434, 2290, 76, 259, "Input"],
Cell[CellGroupData[{
Cell[16807, 514, 146, 3, 45, "Input"],
Cell[16956, 519, 138, 2, 45, "Output"]
}, Open  ]],
Cell[17109, 524, 125, 1, 49, "Text"],
Cell[CellGroupData[{
Cell[17259, 529, 1669, 41, 278, "Input"],
Cell[18931, 572, 56228, 1006, 341, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75196, 1583, 626, 19, 75, "Input"],
Cell[75825, 1604, 182, 4, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76044, 1613, 2397, 60, 307, "Input"],
Cell[78444, 1675, 31104, 556, 357, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109585, 2236, 238, 7, 45, "Input"],
Cell[109826, 2245, 135, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109998, 2253, 276, 8, 45, "Input"],
Cell[110277, 2263, 161, 4, 45, "Output"]
}, Open  ]],
Cell[110453, 2270, 148, 1, 49, "Text"],
Cell[110604, 2273, 1586, 50, 213, "Input"]
}, Open  ]]
}, Open  ]]
}
]
*)

